file GUNBWaveCh.tpl-arch {
pattern { P,						 CH,	 CH+1,	 PORT,		 EGU,	NORM,	CHASSIS	}
#PRC signals
	{	"ACCL:GUNB:455:PRC:SPARE1:",	"0",	"1",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:SPARE2:",	"1",	"2",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:CAV1:",	"2",	"3",	"PRCReg",	"MV",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:CAV2:",	"3",	"4",	"PRCReg",	"MV",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:CAV3:",	"4",	"5",	"PRCReg",	"MV",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:CAV4:",	"5",	"6",	"PRCReg",	"MV",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRLFWD:",	"6",	"7",	"PRCReg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRLREV:",	"7",	"8",	"PRCReg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:DAC1:",	"8",	"9",	"PRCReg",	"Counts",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:DAC2:",	"9",	"10",	"PRCReg",	"Counts",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:RFS1A:",	"10",	"11",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:RFS1B:",	"11",	"12",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:RFS2A:",	"12",	"13",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:RFS2B:",	"13",	"14",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:SPARE3:",	"14",	"15",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
	{	"ACCL:GUNB:455:PRC:SPARE4:",	"15",	"16",	"PRCReg",	"",	"32767",	"ACCL:GUNB:455:PRC:" }
#RFS1 signals
	{	"ACCL:GUNB:455:RFS1:SPARE1:",	"0",	"1",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE2:",	"1",	"2",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:DRV1:",	"2",	"3",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:FWD1:",	"3",	"4",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:REV1:",	"4",	"5",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:DRV2:",	"5",	"6",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:FWD2:",	"6",	"7",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:REV2:",	"7",	"8",	"RFS1Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:DAC1:",	"8",	"9",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:DAC2:",	"9",	"10",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE3:",	"10",	"11",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE4:",	"11",	"12",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE5:",	"12",	"13",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE6:",	"13",	"14",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE7:",	"14",	"15",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
	{	"ACCL:GUNB:455:RFS1:SPARE8:",	"15",	"16",	"RFS1Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS1:" }
#RFS2 signals
	{	"ACCL:GUNB:455:RFS2:SPARE1:",	"0",	"1",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE2:",	"1",	"2",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:DRV3:",	"2",	"3",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:FWD3:",	"3",	"4",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:REV3:",	"4",	"5",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:DRV4:",	"5",	"6",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:FWD4:",	"6",	"7",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:REV4:",	"7",	"8",	"RFS2Reg",	"sqrt(W)",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:DAC1:",	"8",	"9",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:DAC2:",	"9",	"10",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE3:",	"10",	"11",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE4:",	"11",	"12",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE5:",	"12",	"13",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE6:",	"13",	"14",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE7:",	"14",	"15",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
	{	"ACCL:GUNB:455:RFS2:SPARE8:",	"15",	"16",	"RFS2Reg",	"Counts",	"32767",	"ACCL:GUNB:455:RFS2:" }
}

file GUNBWavePerChassis.tpl-arch
{
#	{ P = "ACCL:GUNB:455:PRC:", 	KEEP = "0xF00",	PORT = "PRCReg" }
#	{ P = "ACCL:GUNB:455:RFS1:",	KEEP = "0xCFFF0",	PORT = "RFS1Reg" }
#	{ P = "ACCL:GUNB:455:RFS2:",	KEEP = "0xCFFF0",	PORT = "RFS2Reg" }
	{ P = "ACCL:GUNB:455:",	CHASSIS = "PRC:", 	KEEP = "0xFFFF",	PORT = "PRCReg" }
	{ P = "ACCL:GUNB:455:",	CHASSIS = "RFS1:",	KEEP = "0xFFFF",	PORT = "RFS1Reg" }
	{ P = "ACCL:GUNB:455:",	CHASSIS = "RFS2:",	KEEP = "0xFFFF",	PORT = "RFS2Reg" }
}

file rfSigCalibCav.tpl-arch {
pattern { PREF, RoverQ }
	{ "ACCL:GUNB:455:CAV1:", 200 }
	{ "ACCL:GUNB:455:CAV2:", 200 }
	{ "ACCL:GUNB:455:CAV3:", 200 }
	{ "ACCL:GUNB:455:CAV4:", 200 }
}
file rfSigCalib.tpl-arch {
pattern { PREF,				 NORM,						CAVSCL }
	{ "ACCL:GUNB:455:CAV1:",	"32767",	"$(PREF)CAL_SCALE_CAV" }
	{ "ACCL:GUNB:455:CAV2:",	"32767",	"$(PREF)CAL_SCALE_CAV" }
	{ "ACCL:GUNB:455:CAV3:",	"32767",	"$(PREF)CAL_SCALE_CAV" }
	{ "ACCL:GUNB:455:CAV4:",	"32767",	"$(PREF)CAL_SCALE_CAV" }
}
file rfSigCalib.tpl-arch {
pattern { PREF,				 NORM }
	{ "ACCL:GUNB:455:PRC:SPARE1:",	"32767" }
	{ "ACCL:GUNB:455:PRC:SPARE2:",	"32767" }
	{ "ACCL:GUNB:455:PRLFWD:",	"32767" }
	{ "ACCL:GUNB:455:PRLREV:",	"32767" }
	{ "ACCL:GUNB:455:PRC:DAC1:",	"32767" }
	{ "ACCL:GUNB:455:PRC:DAC2:",	"32767" }
	{ "ACCL:GUNB:455:PRC:RFS1A:",	"32767" }
	{ "ACCL:GUNB:455:PRC:RFS1B:",	"32767" }
	{ "ACCL:GUNB:455:PRC:RFS2A:",	"32767" }
	{ "ACCL:GUNB:455:PRC:RFS2B:",	"32767" }
	{ "ACCL:GUNB:455:PRC:SPARE3:",	"32767" }
	{ "ACCL:GUNB:455:PRC:SPARE4:",	"32767" }

	{ "ACCL:GUNB:455:RFS1:SPARE1:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE2:",	"32767" }
	{ "ACCL:GUNB:455:DRV1:",	"32767" }
	{ "ACCL:GUNB:455:FWD1:",	"32767" }
	{ "ACCL:GUNB:455:REV1:",	"32767" }
	{ "ACCL:GUNB:455:DRV2:",	"32767" }
	{ "ACCL:GUNB:455:FWD2:",	"32767" }
	{ "ACCL:GUNB:455:REV2:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:DAC1:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:DAC2:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE3:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE4:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE5:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE6:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE7:",	"32767" }
	{ "ACCL:GUNB:455:RFS1:SPARE8:",	"32767" }

	{ "ACCL:GUNB:455:RFS2:SPARE1:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE2:",	"32767" }
	{ "ACCL:GUNB:455:DRV3:",	"32767" }
	{ "ACCL:GUNB:455:FWD3:",	"32767" }
	{ "ACCL:GUNB:455:REV3:",	"32767" }
	{ "ACCL:GUNB:455:DRV4:",	"32767" }
	{ "ACCL:GUNB:455:FWD4:",	"32767" }
	{ "ACCL:GUNB:455:REV4:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:DAC1:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:DAC2:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE3:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE4:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE5:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE6:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE7:",	"32767" }
	{ "ACCL:GUNB:455:RFS2:SPARE8:",	"32767" }
}

file GUNBLoopCalcs.tpl-arch
{
	{ P = "ACCL:GUNB:455:", 1300RATIO=1, ALIAS_N=2 , FTGAIN="-0.02"}
}


file GUNBMisc.tpl-arch
{
pattern{ P,				CHASSIS,		PORT,	 SCALEP }
	{ "ACCL:GUNB:455:",	"PRC:",		PRCReg,	"ACCL:GUNB:455:CAV1:" }
#	# Instances of this db for RFS can be useful in single chassis testing.
#	# Just clutter and problems for the 3 chassis production configuration
#	{ "ACCL:GUNB:455:",	"RFS1:",	RFS1Reg,"ACCL:GUNB:455:FWD1:" }
#	{ "ACCL:GUNB:455:",	"RFS2:",	RFS2Reg,"ACCL:GUNB:455:FWD2:" }
}

file Buncher3Chassis.tpl-arch
{
	{ P = "ACCL:GUNB:455:", N=2 }
}

file gainScanRecorder.tpl-arch
{
	{ P = "ACCL:GUNB:455:", N=1, FWD = "ACCL:GUNB:455:FWD" }
	{ P = "ACCL:GUNB:455:", N=2, FWD = "ACCL:GUNB:455:FWD" }
	{ P = "ACCL:GUNB:455:", N=3, FWD = "ACCL:GUNB:455:FWD" }
	{ P = "ACCL:GUNB:455:", N=4, FWD = "ACCL:GUNB:455:FWD" }
}

#	P - Prefix for this monitor. The PV with enumerated status and severity is $(P):ALIVESUM
#	PV2CHECK - The PV implementing heartbeat or error counting type functionality
#	FAIL_IF - Failure condition test equation with A as new value, B as previous value, e.g. "A=B" for a counter failure
file aliveChecker.tpl-arch
{
pattern{ P,							PV2CHECK,						FAIL_IF	}
		{"ACCL:GUNB:455:PRC:COUNTER_",	"ACCL:GUNB:455:PRC:COUNTER_R",	"A=B"	}
		{"ACCL:GUNB:455:RFS1:COUNTER_",	"ACCL:GUNB:455:RFS1:COUNTER_R",	"A=B"	}
		{"ACCL:GUNB:455:RFS2:COUNTER_",	"ACCL:GUNB:455:RFS2:COUNTER_R",	"A=B"	}
		{"ACCL:GUNB:455:PRC:CRCERRORCNT_",	"ACCL:GUNB:455:PRC:CRCERRORCNT_R",	"A!=B"	}
		{"ACCL:GUNB:455:RFS1:CRCERRORCNT_",	"ACCL:GUNB:455:RFS1:CRCERRORCNT_R",	"(A&0xFFFF)!=(B&0xFFFF)"	}
		{"ACCL:GUNB:455:RFS2:CRCERRORCNT_",	"ACCL:GUNB:455:RFS2:CRCERRORCNT_R",	"(A&0xFFFF)!=(B&0xFFFF)"	}
}

file amc7823monitor.tpl-arch
{
pattern{ PREFIX }
	{ "ACCL:GUNB:455:PRC:" }
	{ "ACCL:GUNB:455:RFS1:" }
	{ "ACCL:GUNB:455:RFS2:" }
}

file BMB7monitor.archive
{
	{ P="ACCL:GUNB:455", R=":PRC:" }
	{ P="ACCL:GUNB:455", R=":RFS1:" }
	{ P="ACCL:GUNB:455", R=":RFS2:" }
}

#/*
# When the proportion of RF coming back from the cavity exceeds a threshold,
# and other conditions are met, dither a setting to establish where the minimum
# RF comes back, and establish that as the new 0 detune position.
# Change the CW detune calculation nominal offset from cavity phase to forward phase
# at detune = 0 with the offset at that point.
# Then resume normal feedback.
#
# Macros:
# 		PREFIX - pv name prefix used for settings PVs, e.g. GUN:GUNB:100:
# 		REV - reverse signal to use for amplitude comparison, e.g. GUN:GUNB:100:REV:
# 		FWD - forward signal to use for amplitude comparison and phase calibration, e.g. GUN:GUNB:100:FWD:
# 		CAV - Prefix to PACT for cavity to use for phase calibration, e.g. GUN:GUNB:100:
# 		CTL - PV that changes the frequency, e.g. GUN:GUNB:100:PRC:DDSA_PHSTEP_H_W
#/
file centerCwDetune.tpl-arch
{
	{ PREFIX = "ACCL:GUNB:455:", REV = "ACCL:GUNB:455:REV:", FWD = "ACCL:GUNB:455:FWD:", CAV = "ACCL:GUNB:455:", CTL = "ACCL:GUNB:455:PRC:DDSA_PHSTEP_H_W" }
}

file archive_iocAdmin.archive
{
pattern { IOC            }
		{ SIOC:GUNB:RF02 }
}