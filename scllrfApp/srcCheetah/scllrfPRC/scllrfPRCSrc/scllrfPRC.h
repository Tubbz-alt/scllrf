#ifndef SCLLRFPRC_DRIVER_H
#define SCLLRFPRC_DRIVER_H

/**
 *-----------------------------------------------------------------------------
 * Title      : superconducting low level RF EPICS interface
 * ----------------------------------------------------------------------------
 * File       : templateScllrfDriver.h
 * Author     : Garth Brown, gwbrown@slac.stanford.edu
 * Created    : June 17, 2016
 * Last update: September 6, 2016
 * ----------------------------------------------------------------------------
 * Description:
 * Header defining register interface to scllrfPRC, autogenerated from a python
 * dictionary.
 *
 * ----------------------------------------------------------------------------
 * This file is part of LCLS II. It is subject to
 * the license terms in the LICENSE.txt file found in the top-level directory
 * of this distribution and at:
    * https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
 * No part of LCLS II, including this file, may be
 * copied, modified, propagated, or distributed except according to the terms
 * contained in the LICENSE.txt file.
 * ----------------------------------------------------------------------------
**/
#include "scllrfAsynPortDriver.h"

/* Registers */
static const char *HellRString = "HELL_R";
static const char *U15SdioAsSdoRString = "U15_SDIO_AS_SDO_R";
static const char *U15SdoAddrRString = "U15_SDO_ADDR_R";
static const char *U15SpiReadyRString = "U15_SPI_READY_R";
// shared address 57 for U15_spi_ready
static const char *U18SdioAsSdoRString = "U18_SDIO_AS_SDO_R";
static const char *U18SdoAddrRString = "U18_SDO_ADDR_R";
static const char *U18SpiReadyRString = "U18_SPI_READY_R";
// shared address 61 for U18_spi_ready
static const char *U2Doutbits31To0RString = "U2DOUTBITS31TO0_R";
static const char *U2Doutbits63To32RString = "U2DOUTBITS63TO32_R";
static const char *U3Doutbits31To0RString = "U3DOUTBITS31TO0_R";
static const char *U3Doutbits63To32RString = "U3DOUTBITS63TO32_R";
static const char *U15SpiRdbkRString = "_U15_SPI_RDBK_R";
// shared address 56 for _U15_spi_rdbk
static const char *U18SpiRdbkRString = "_U18_SPI_RDBK_R";
// shared address 60 for _U18_spi_rdbk
static const char *AdcMmcmRString = "ADC_MMCM_R";
static const char *AdcMmcmWString = "ADC_MMCM_W";
static const char *AdcTestTrigCntRString = "ADC_TEST_TRIG_CNT_R";
static const char *AdcTestWave1OutRString = "ADC_TEST_WAVE1_OUT_R";
static const char *AdcTestWave2OutRString = "ADC_TEST_WAVE2_OUT_R";
static const char *AdcTestWave3OutRString = "ADC_TEST_WAVE3_OUT_R";
static const char *AdcTestWave4OutRString = "ADC_TEST_WAVE4_OUT_R";
static const char *BanyanBufRString = "BANYAN_BUF_R";
static const char *BanyanStatusRString = "BANYAN_STATUS_R";
static const char *ClkPhaseDiffOutU2RString = "CLK_PHASE_DIFF_OUT_U2_R";
static const char *ClkPhaseDiffOutU3RString = "CLK_PHASE_DIFF_OUT_U3_R";
static const char *CtraceRunningRString = "CTRACE_RUNNING_R";
static const char *DigCfgU15SpiDataAddrRRString = "DIG_CFG_U15_SPI_DATA_ADDR_R_R";
static const char *DigCfgU15SpiDataAddrRWString = "DIG_CFG_U15_SPI_DATA_ADDR_R_W";
static const char *DigCfgU15SpiReadAndStartRRString = "DIG_CFG_U15_SPI_READ_AND_START_R_R";
static const char *DigCfgU15SpiReadAndStartRWString = "DIG_CFG_U15_SPI_READ_AND_START_R_W";
static const char *DigCfgU18SpiDataAddrRRString = "DIG_CFG_U18_SPI_DATA_ADDR_R_R";
static const char *DigCfgU18SpiDataAddrRWString = "DIG_CFG_U18_SPI_DATA_ADDR_R_W";
static const char *DigCfgU18SpiReadAndStartRRString = "DIG_CFG_U18_SPI_READ_AND_START_R_R";
static const char *DigCfgU18SpiReadAndStartRWString = "DIG_CFG_U18_SPI_READ_AND_START_R_W";
static const char *DigCfgU2ClkResetRRString = "DIG_CFG_U2_CLK_RESET_R_R";
static const char *DigCfgU2ClkResetRWString = "DIG_CFG_U2_CLK_RESET_R_W";
static const char *DigCfgU2IserdesResetRRString = "DIG_CFG_U2_ISERDES_RESET_R_R";
static const char *DigCfgU2IserdesResetRWString = "DIG_CFG_U2_ISERDES_RESET_R_W";
static const char *DigCfgU3ClkResetRRString = "DIG_CFG_U3_CLK_RESET_R_R";
static const char *DigCfgU3ClkResetRWString = "DIG_CFG_U3_CLK_RESET_R_W";
static const char *DigCfgU3IserdesResetRRString = "DIG_CFG_U3_ISERDES_RESET_R_R";
static const char *DigCfgU3IserdesResetRWString = "DIG_CFG_U3_ISERDES_RESET_R_W";
static const char *DigCfgU4ResetRRString = "DIG_CFG_U4_RESET_R_R";
static const char *DigCfgU4ResetRWString = "DIG_CFG_U4_RESET_R_W";
static const char *DigCfgBanyanMaskRString = "DIG_CFG_BANYAN_MASK_R";
static const char *DigCfgBanyanMaskWString = "DIG_CFG_BANYAN_MASK_W";
static const char *DigCfgBitslipRString = "DIG_CFG_BITSLIP_R";
static const char *DigCfgBitslipWString = "DIG_CFG_BITSLIP_W";
static const char *DigCfgIdelayctrlResetRRString = "DIG_CFG_IDELAYCTRL_RESET_R_R";
static const char *DigCfgIdelayctrlResetRWString = "DIG_CFG_IDELAYCTRL_RESET_R_W";
static const char *DigCfgLlspiWeRString = "DIG_CFG_LLSPI_WE_R";
static const char *DigCfgLlspiWeWString = "DIG_CFG_LLSPI_WE_W";
static const char *DigCfgMmcmResetRRString = "DIG_CFG_MMCM_RESET_R_R";
static const char *DigCfgMmcmResetRWString = "DIG_CFG_MMCM_RESET_R_W";
static const char *DigCfgPeriphConfigRString = "DIG_CFG_PERIPH_CONFIG_R";
static const char *DigCfgPeriphConfigWString = "DIG_CFG_PERIPH_CONFIG_W";
static const char *DigCfgPhasexTrigRString = "DIG_CFG_PHASEX_TRIG_R";
static const char *DigCfgPhasexTrigWString = "DIG_CFG_PHASEX_TRIG_W";
static const char *DigCfgRawadcTrigRString = "DIG_CFG_RAWADC_TRIG_R";
static const char *DigCfgRawadcTrigWString = "DIG_CFG_RAWADC_TRIG_W";
static const char *DigCfgScanTriggerWeRString = "DIG_CFG_SCAN_TRIGGER_WE_R";
static const char *DigCfgScanTriggerWeWString = "DIG_CFG_SCAN_TRIGGER_WE_W";
static const char *DigCfgScannerDebugRString = "DIG_CFG_SCANNER_DEBUG_R";
static const char *DigCfgScannerDebugWString = "DIG_CFG_SCANNER_DEBUG_W";
static const char *DigCfgSyncAd7794CsetRString = "DIG_CFG_SYNC_AD7794_CSET_R";
static const char *DigCfgSyncAd7794CsetWString = "DIG_CFG_SYNC_AD7794_CSET_W";
static const char *DigCfgSyncTps62210CsetRString = "DIG_CFG_SYNC_TPS62210_CSET_R";
static const char *DigCfgSyncTps62210CsetWString = "DIG_CFG_SYNC_TPS62210_CSET_W";
static const char *DigDspAdcTestModeRString = "DIG_DSP_ADC_TEST_MODE_R";
static const char *DigDspAdcTestModeWString = "DIG_DSP_ADC_TEST_MODE_W";
static const char *DigDspAdcTestResetRString = "DIG_DSP_ADC_TEST_RESET_R";
static const char *DigDspAdcTestResetWString = "DIG_DSP_ADC_TEST_RESET_W";
static const char *DigDspAmplitudeRString = "DIG_DSP_AMPLITUDE_R";
static const char *DigDspAmplitudeWString = "DIG_DSP_AMPLITUDE_W";
static const char *DigDspAverageLenRString = "DIG_DSP_AVERAGE_LEN_R";
static const char *DigDspAverageLenWString = "DIG_DSP_AVERAGE_LEN_W";
static const char *DigDspBufTrigRString = "DIG_DSP_BUF_TRIG_R";
static const char *DigDspBufTrigWString = "DIG_DSP_BUF_TRIG_W";
static const char *DigDspCicPeriodRString = "DIG_DSP_CIC_PERIOD_R";
static const char *DigDspCicPeriodWString = "DIG_DSP_CIC_PERIOD_W";
static const char *DigDspCicShiftRString = "DIG_DSP_CIC_SHIFT_R";
static const char *DigDspCicShiftWString = "DIG_DSP_CIC_SHIFT_W";
static const char *DigDspDacDdsResetRString = "DIG_DSP_DAC_DDS_RESET_R";
static const char *DigDspDacDdsResetWString = "DIG_DSP_DAC_DDS_RESET_W";
static const char *DigDspDacModeRString = "DIG_DSP_DAC_MODE_R";
static const char *DigDspDacModeWString = "DIG_DSP_DAC_MODE_W";
static const char *DigDspDdsaModuloRString = "DIG_DSP_DDSA_MODULO_R";
static const char *DigDspDdsaModuloWString = "DIG_DSP_DDSA_MODULO_W";
static const char *DigDspDdsaPhstepHRString = "DIG_DSP_DDSA_PHSTEP_H_R";
static const char *DigDspDdsaPhstepHWString = "DIG_DSP_DDSA_PHSTEP_H_W";
static const char *DigDspDdsaPhstepLRString = "DIG_DSP_DDSA_PHSTEP_L_R";
static const char *DigDspDdsaPhstepLWString = "DIG_DSP_DDSA_PHSTEP_L_W";
static const char *DigDspHistCountWStrobeRString = "DIG_DSP_HIST_COUNT_W_STROBE_R";
static const char *DigDspHistCountWStrobeWString = "DIG_DSP_HIST_COUNT_W_STROBE_W";
static const char *DigDspLoAmpRString = "DIG_DSP_LO_AMP_R";
static const char *DigDspLoAmpWString = "DIG_DSP_LO_AMP_W";
static const char *DigDspModuloRString = "DIG_DSP_MODULO_R";
static const char *DigDspModuloWString = "DIG_DSP_MODULO_W";
static const char *DigDspPhaseStepHRString = "DIG_DSP_PHASE_STEP_H_R";
static const char *DigDspPhaseStepHWString = "DIG_DSP_PHASE_STEP_H_W";
static const char *DigDspPhaseStepLRString = "DIG_DSP_PHASE_STEP_L_R";
static const char *DigDspPhaseStepLWString = "DIG_DSP_PHASE_STEP_L_W";
static const char *DigDspRewindRString = "DIG_DSP_REWIND_R";
static const char *DigDspRewindWString = "DIG_DSP_REWIND_W";
static const char *DigDspSsaStimAmpstepRString = "DIG_DSP_SSA_STIM_AMPSTEP_R";
static const char *DigDspSsaStimAmpstepWString = "DIG_DSP_SSA_STIM_AMPSTEP_W";
static const char *DigDspSsaStimEnRString = "DIG_DSP_SSA_STIM_EN_R";
static const char *DigDspSsaStimEnWString = "DIG_DSP_SSA_STIM_EN_W";
static const char *DigDspSsaStimGPeriodRString = "DIG_DSP_SSA_STIM_G_PERIOD_R";
static const char *DigDspSsaStimGPeriodWString = "DIG_DSP_SSA_STIM_G_PERIOD_W";
static const char *DigDspSsaStimPertstepRString = "DIG_DSP_SSA_STIM_PERTSTEP_R";
static const char *DigDspSsaStimPertstepWString = "DIG_DSP_SSA_STIM_PERTSTEP_W";
static const char *DigDspTraceKeepRString = "DIG_DSP_TRACE_KEEP_R";
static const char *DigDspTraceKeepWString = "DIG_DSP_TRACE_KEEP_W";
static const char *DigDspTraceResetWeRString = "DIG_DSP_TRACE_RESET_WE_R";
static const char *DigDspTraceResetWeWString = "DIG_DSP_TRACE_RESET_WE_W";
static const char *DigDspTrigInternalRString = "DIG_DSP_TRIG_INTERNAL_R";
static const char *DigDspTrigInternalWString = "DIG_DSP_TRIG_INTERNAL_W";
static const char *DigDspTrigModeRString = "DIG_DSP_TRIG_MODE_R";
static const char *DigDspTrigModeWString = "DIG_DSP_TRIG_MODE_W";
static const char *DigDspWave0SrcRString = "DIG_DSP_WAVE0_SRC_R";
static const char *DigDspWave0SrcWString = "DIG_DSP_WAVE0_SRC_W";
static const char *DigDspWave1SrcRString = "DIG_DSP_WAVE1_SRC_R";
static const char *DigDspWave1SrcWString = "DIG_DSP_WAVE1_SRC_W";
static const char *DigSlowreadTagNowRString = "DIG_SLOWREAD_TAG_NOW_R";
static const char *DigSlowreadTagNowWString = "DIG_SLOWREAD_TAG_NOW_W";
static const char *FfffffffRString = "FFFFFFFF_R";
static const char *Frequency4XoutRString = "FREQUENCY_4XOUT_R";
static const char *FrequencyAdcRString = "FREQUENCY_ADC_R";
static const char *FrequencyClkout3RString = "FREQUENCY_CLKOUT3_R";
static const char *FrequencyDcoRString = "FREQUENCY_DCO_R";
static const char *FrequencyGtxRxRString = "FREQUENCY_GTX_RX_R";
static const char *FrequencyGtxTxRString = "FREQUENCY_GTX_TX_R";
static const char *H0D0A0D0ARString = "H0D0A0D0A_R";
static const char *HistDoutRString = "HIST_DOUT_R";
static const char *HistStatusRString = "HIST_STATUS_R";
static const char *IccCfgRString = "ICC_CFG_R";
static const char *IccCfgWString = "ICC_CFG_W";
static const char *Idelay0WString = "IDELAY_0_W";
static const char *Idelay0RString = "IDELAY_0_R";
static const char *Idelay1WString = "IDELAY_1_W";
static const char *Idelay1RString = "IDELAY_1_R";
static const char *Idelay10WString = "IDELAY_10_W";
static const char *Idelay10RString = "IDELAY_10_R";
static const char *Idelay11WString = "IDELAY_11_W";
static const char *Idelay11RString = "IDELAY_11_R";
static const char *Idelay12WString = "IDELAY_12_W";
static const char *Idelay12RString = "IDELAY_12_R";
static const char *Idelay13WString = "IDELAY_13_W";
static const char *Idelay13RString = "IDELAY_13_R";
static const char *Idelay14WString = "IDELAY_14_W";
static const char *Idelay14RString = "IDELAY_14_R";
static const char *Idelay15WString = "IDELAY_15_W";
static const char *Idelay15RString = "IDELAY_15_R";
static const char *Idelay2WString = "IDELAY_2_W";
static const char *Idelay2RString = "IDELAY_2_R";
static const char *Idelay3WString = "IDELAY_3_W";
static const char *Idelay3RString = "IDELAY_3_R";
static const char *Idelay4WString = "IDELAY_4_W";
static const char *Idelay4RString = "IDELAY_4_R";
static const char *Idelay5WString = "IDELAY_5_W";
static const char *Idelay5RString = "IDELAY_5_R";
static const char *Idelay6WString = "IDELAY_6_W";
static const char *Idelay6RString = "IDELAY_6_R";
static const char *Idelay7WString = "IDELAY_7_W";
static const char *Idelay7RString = "IDELAY_7_R";
static const char *Idelay8WString = "IDELAY_8_W";
static const char *Idelay8RString = "IDELAY_8_R";
static const char *Idelay9WString = "IDELAY_9_W";
static const char *Idelay9RString = "IDELAY_9_R";
static const char *IdelayValueOutU2Bits19To0RString = "IDELAY_VALUE_OUT_U2BITS19TO0_R";
static const char *IdelayValueOutU2Bits39To20RString = "IDELAY_VALUE_OUT_U2BITS39TO20_R";
static const char *IdelayValueOutU3Bits19To0RString = "IDELAY_VALUE_OUT_U3BITS19TO0_R";
static const char *IdelayValueOutU3Bits39To20RString = "IDELAY_VALUE_OUT_U3BITS39TO20_R";
static const char *LlspiResultRString = "LLSPI_RESULT_R";
static const char *LlspiStatusRString = "LLSPI_STATUS_R";
static const char *LlspiWeWString = "LLSPI_WE_W";
static const char *OWoRString = "O_WO_R";
static const char *PhasexDoutRString = "PHASEX_DOUT_R";
static const char *PhasexStatusRString = "PHASEX_STATUS_R";
static const char *QsfpI2CRegRString = "QSFP_I2C_REG_R";
static const char *QsfpI2CRegWString = "QSFP_I2C_REG_W";
static const char *RldRString = "RLD__R";
static const char *ScannerResultRString = "SCANNER_RESULT_R";
static const char *SfpAddressSetRString = "SFP_ADDRESS_SET_R";
static const char *SfpAddressSetWString = "SFP_ADDRESS_SET_W";
static const char *SlowChainOutRString = "SLOW_CHAIN_OUT_R";
static const char *TraceStatusRString = "TRACE_STATUS_R";
static const char *TraceStatus2RString = "TRACE_STATUS2_R";
static const char *Wave0OutRString = "WAVE0_OUT_R";
static const char *Wave1OutRString = "WAVE1_OUT_R";
static const char *WaveformsAvailableRString = "WAVEFORMS_AVAILABLE_R";

const unsigned int readRegCount = 116;
const unsigned int writeRegCount = 71;



 /* This class implements the AxiVersion driver. */
class scllrfPRCDriver : public scllrfAsynPortDriver {
public:
    scllrfPRCDriver(const char *drvPortName, const char *netPortName);
    virtual ~scllrfPRCDriver();



protected:
    virtual asynStatus functionToRegister(const int function, FpgaReg *pToFpga); /**< Translate asyn function number/reason to a register address */
	virtual asynStatus processRegReadback(const FpgaReg *pFromFpga,
			bool &waveIsReady); // parse register data, write to PVs
	virtual asynStatus processRegWriteResponse(const FpgaReg *pFromFpga);

/* Registers */
    int p_HellR;
    #define FIRST_SCLLRFPRC_PARAM p_HellR
    int p_U15SdioAsSdoR;
    int p_U15SdoAddrR;
    int p_U15SpiReadyR;
    int p_U18SdioAsSdoR;
    int p_U18SdoAddrR;
    int p_U18SpiReadyR;
    int p_U2Doutbits31To0R;
    int p_U2Doutbits63To32R;
    int p_U3Doutbits31To0R;
    int p_U3Doutbits63To32R;
    int p_U15SpiRdbkR;
    int p_U18SpiRdbkR;
    int p_AdcMmcmR;
    int p_AdcMmcmW;
    int p_AdcTestTrigCntR;
    int p_AdcTestWave1OutR;
    int p_AdcTestWave2OutR;
    int p_AdcTestWave3OutR;
    int p_AdcTestWave4OutR;
    int p_BanyanBufR;
    int p_BanyanStatusR;
    int p_ClkPhaseDiffOutU2R;
    int p_ClkPhaseDiffOutU3R;
    int p_CtraceRunningR;
    int p_DigCfgU15SpiDataAddrRR;
    int p_DigCfgU15SpiDataAddrRW;
    int p_DigCfgU15SpiReadAndStartRR;
    int p_DigCfgU15SpiReadAndStartRW;
    int p_DigCfgU18SpiDataAddrRR;
    int p_DigCfgU18SpiDataAddrRW;
    int p_DigCfgU18SpiReadAndStartRR;
    int p_DigCfgU18SpiReadAndStartRW;
    int p_DigCfgU2ClkResetRR;
    int p_DigCfgU2ClkResetRW;
    int p_DigCfgU2IserdesResetRR;
    int p_DigCfgU2IserdesResetRW;
    int p_DigCfgU3ClkResetRR;
    int p_DigCfgU3ClkResetRW;
    int p_DigCfgU3IserdesResetRR;
    int p_DigCfgU3IserdesResetRW;
    int p_DigCfgU4ResetRR;
    int p_DigCfgU4ResetRW;
    int p_DigCfgBanyanMaskR;
    int p_DigCfgBanyanMaskW;
    int p_DigCfgBitslipR;
    int p_DigCfgBitslipW;
    int p_DigCfgIdelayctrlResetRR;
    int p_DigCfgIdelayctrlResetRW;
    int p_DigCfgLlspiWeR;
    int p_DigCfgLlspiWeW;
    int p_DigCfgMmcmResetRR;
    int p_DigCfgMmcmResetRW;
    int p_DigCfgPeriphConfigR;
    int p_DigCfgPeriphConfigW;
    int p_DigCfgPhasexTrigR;
    int p_DigCfgPhasexTrigW;
    int p_DigCfgRawadcTrigR;
    int p_DigCfgRawadcTrigW;
    int p_DigCfgScanTriggerWeR;
    int p_DigCfgScanTriggerWeW;
    int p_DigCfgScannerDebugR;
    int p_DigCfgScannerDebugW;
    int p_DigCfgSyncAd7794CsetR;
    int p_DigCfgSyncAd7794CsetW;
    int p_DigCfgSyncTps62210CsetR;
    int p_DigCfgSyncTps62210CsetW;
    int p_DigDspAdcTestModeR;
    int p_DigDspAdcTestModeW;
    int p_DigDspAdcTestResetR;
    int p_DigDspAdcTestResetW;
    int p_DigDspAmplitudeR;
    int p_DigDspAmplitudeW;
    int p_DigDspAverageLenR;
    int p_DigDspAverageLenW;
    int p_DigDspBufTrigR;
    int p_DigDspBufTrigW;
    int p_DigDspCicPeriodR;
    int p_DigDspCicPeriodW;
    int p_DigDspCicShiftR;
    int p_DigDspCicShiftW;
    int p_DigDspDacDdsResetR;
    int p_DigDspDacDdsResetW;
    int p_DigDspDacModeR;
    int p_DigDspDacModeW;
    int p_DigDspDdsaModuloR;
    int p_DigDspDdsaModuloW;
    int p_DigDspDdsaPhstepHR;
    int p_DigDspDdsaPhstepHW;
    int p_DigDspDdsaPhstepLR;
    int p_DigDspDdsaPhstepLW;
    int p_DigDspHistCountWStrobeR;
    int p_DigDspHistCountWStrobeW;
    int p_DigDspLoAmpR;
    int p_DigDspLoAmpW;
    int p_DigDspModuloR;
    int p_DigDspModuloW;
    int p_DigDspPhaseStepHR;
    int p_DigDspPhaseStepHW;
    int p_DigDspPhaseStepLR;
    int p_DigDspPhaseStepLW;
    int p_DigDspRewindR;
    int p_DigDspRewindW;
    int p_DigDspSsaStimAmpstepR;
    int p_DigDspSsaStimAmpstepW;
    int p_DigDspSsaStimEnR;
    int p_DigDspSsaStimEnW;
    int p_DigDspSsaStimGPeriodR;
    int p_DigDspSsaStimGPeriodW;
    int p_DigDspSsaStimPertstepR;
    int p_DigDspSsaStimPertstepW;
    int p_DigDspTraceKeepR;
    int p_DigDspTraceKeepW;
    int p_DigDspTraceResetWeR;
    int p_DigDspTraceResetWeW;
    int p_DigDspTrigInternalR;
    int p_DigDspTrigInternalW;
    int p_DigDspTrigModeR;
    int p_DigDspTrigModeW;
    int p_DigDspWave0SrcR;
    int p_DigDspWave0SrcW;
    int p_DigDspWave1SrcR;
    int p_DigDspWave1SrcW;
    int p_DigSlowreadTagNowR;
    int p_DigSlowreadTagNowW;
    int p_FfffffffR;
    int p_Frequency4XoutR;
    int p_FrequencyAdcR;
    int p_FrequencyClkout3R;
    int p_FrequencyDcoR;
    int p_FrequencyGtxRxR;
    int p_FrequencyGtxTxR;
    int p_H0D0A0D0AR;
    int p_HistDoutR;
    int p_HistStatusR;
    int p_IccCfgR;
    int p_IccCfgW;
    int p_Idelay0W;
    int p_Idelay0R;
    int p_Idelay1W;
    int p_Idelay1R;
    int p_Idelay10W;
    int p_Idelay10R;
    int p_Idelay11W;
    int p_Idelay11R;
    int p_Idelay12W;
    int p_Idelay12R;
    int p_Idelay13W;
    int p_Idelay13R;
    int p_Idelay14W;
    int p_Idelay14R;
    int p_Idelay15W;
    int p_Idelay15R;
    int p_Idelay2W;
    int p_Idelay2R;
    int p_Idelay3W;
    int p_Idelay3R;
    int p_Idelay4W;
    int p_Idelay4R;
    int p_Idelay5W;
    int p_Idelay5R;
    int p_Idelay6W;
    int p_Idelay6R;
    int p_Idelay7W;
    int p_Idelay7R;
    int p_Idelay8W;
    int p_Idelay8R;
    int p_Idelay9W;
    int p_Idelay9R;
    int p_IdelayValueOutU2Bits19To0R;
    int p_IdelayValueOutU2Bits39To20R;
    int p_IdelayValueOutU3Bits19To0R;
    int p_IdelayValueOutU3Bits39To20R;
    int p_LlspiResultR;
    int p_LlspiStatusR;
    int p_LlspiWeW;
    int p_OWoR;
    int p_PhasexDoutR;
    int p_PhasexStatusR;
    int p_QsfpI2CRegR;
    int p_QsfpI2CRegW;
    int p_RldR;
    int p_ScannerResultR;
    int p_SfpAddressSetR;
    int p_SfpAddressSetW;
    int p_SlowChainOutR;
    int p_TraceStatusR;
    int p_TraceStatus2R;
    int p_Wave0OutR;
    int p_Wave1OutR;
    int p_WaveformsAvailableR;
    #define LAST_SCLLRFPRC_PARAM p_WaveformsAvailableR

#define NUM_SCLLRFPRC_PARAMS (&LAST_SCLLRFPRC_PARAM - &FIRST_SCLLRFPRC_PARAM + NUM_SCLLRF_PARAMS + 1)

private:

    // mapping of register names to addresses
    enum ReadRegAddrs
    {
    	HellRAdr = 0x00000000,
    	OWoRAdr = 0x00000001,
    	RldRAdr = 0x00000002,
    	H0D0A0D0ARAdr = 0x00000003,
    	LlspiStatusRAdr = 0x00000004,
    	LlspiResultRAdr = 0x00000005,
    	FfffffffRAdr = 0x00000007,
    	FrequencyAdcRAdr = 0x00000008,
    	Frequency4XoutRAdr = 0x00000009,
    	FrequencyClkout3RAdr = 0x0000000A,
    	FrequencyDcoRAdr = 0x0000000B,
    	U2Doutbits31To0RAdr = 0x0000000C,
    	U2Doutbits63To32RAdr = 0x0000000D,
    	IdelayValueOutU2Bits19To0RAdr = 0x0000000E,
    	IdelayValueOutU2Bits39To20RAdr = 0x0000000F,
    	U3Doutbits31To0RAdr = 0x00000010,
    	U3Doutbits63To32RAdr = 0x00000011,
    	IdelayValueOutU3Bits19To0RAdr = 0x00000012,
    	IdelayValueOutU3Bits39To20RAdr = 0x00000013,
    	Wave0OutRAdr = 0x00000014,
    	Wave1OutRAdr = 0x00000015,
    	AdcTestWave1OutRAdr = 0x00000016,
    	AdcTestWave2OutRAdr = 0x00000017,
    	AdcTestWave3OutRAdr = 0x00000018,
    	AdcTestWave4OutRAdr = 0x00000019,
    	CtraceRunningRAdr = 0x0000001C,
    	FrequencyGtxTxRAdr = 0x0000001D,
    	FrequencyGtxRxRAdr = 0x0000001E,
    	HistStatusRAdr = 0x0000001F,
    	PhasexStatusRAdr = 0x0000002E,
    	ClkPhaseDiffOutU2RAdr = 0x0000002F,
    	ClkPhaseDiffOutU3RAdr = 0x00000030,
    	U15SdoAddrRAdr = 0x00000038,
    	U15SpiRdbkRAdr = 0x00000038,
    	U15SdioAsSdoRAdr = 0x00000039,
    	U15SpiReadyRAdr = 0x00000039,
    	U18SdoAddrRAdr = 0x0000003C,
    	U18SpiRdbkRAdr = 0x0000003C,
    	U18SdioAsSdoRAdr = 0x0000003D,
    	U18SpiReadyRAdr = 0x0000003D,
    	AdcTestTrigCntRAdr = 0x00000040,
    	WaveformsAvailableRAdr = 0x00000041,
    	BanyanStatusRAdr = 0x00000042,
    	SlowChainOutRAdr = 0x00000043,
    	TraceStatusRAdr = 0x00000044,
    	TraceStatus2RAdr = 0x00000045,
    	Idelay0RAdr = 0x00000070,
    	Idelay1RAdr = 0x00000071,
    	Idelay2RAdr = 0x00000072,
    	Idelay3RAdr = 0x00000073,
    	Idelay4RAdr = 0x00000074,
    	Idelay5RAdr = 0x00000075,
    	Idelay6RAdr = 0x00000076,
    	Idelay7RAdr = 0x00000077,
    	Idelay8RAdr = 0x00000078,
    	Idelay9RAdr = 0x00000079,
    	Idelay10RAdr = 0x0000007A,
    	Idelay11RAdr = 0x0000007B,
    	Idelay12RAdr = 0x0000007C,
    	Idelay13RAdr = 0x0000007D,
    	Idelay14RAdr = 0x0000007E,
    	Idelay15RAdr = 0x0000007F,
    	HistDoutRAdr = 0x00100000,
    	PhasexDoutRAdr = 0x00110000,
    	BanyanBufRAdr = 0x00120000,
    	ScannerResultRAdr = 0x00130000,
    	AdcMmcmRAdr = 0x00800000,
    	DigCfgU15SpiDataAddrRRAdr = 0x00800001,
    	DigCfgU15SpiReadAndStartRRAdr = 0x00800002,
    	DigCfgU18SpiDataAddrRRAdr = 0x00800003,
    	DigCfgU18SpiReadAndStartRRAdr = 0x00800004,
    	DigCfgU2ClkResetRRAdr = 0x00800005,
    	DigCfgU2IserdesResetRRAdr = 0x00800006,
    	DigCfgU3ClkResetRRAdr = 0x00800007,
    	DigCfgU3IserdesResetRRAdr = 0x00800008,
    	DigCfgU4ResetRRAdr = 0x00800009,
    	DigCfgBanyanMaskRAdr = 0x0080000A,
    	DigCfgBitslipRAdr = 0x0080000B,
    	DigCfgIdelayctrlResetRRAdr = 0x0080000C,
    	DigCfgLlspiWeRAdr = 0x0080000D,
    	DigCfgMmcmResetRRAdr = 0x0080000E,
    	DigCfgPeriphConfigRAdr = 0x0080000F,
    	DigCfgPhasexTrigRAdr = 0x00800010,
    	DigCfgRawadcTrigRAdr = 0x00800011,
    	DigCfgScanTriggerWeRAdr = 0x00800012,
    	DigCfgScannerDebugRAdr = 0x00800013,
    	DigCfgSyncAd7794CsetRAdr = 0x00800014,
    	DigCfgSyncTps62210CsetRAdr = 0x00800015,
    	DigDspAdcTestModeRAdr = 0x00800016,
    	DigDspAdcTestResetRAdr = 0x00800017,
    	DigDspAmplitudeRAdr = 0x00800018,
    	DigDspAverageLenRAdr = 0x00800019,
    	DigDspBufTrigRAdr = 0x0080001A,
    	DigDspCicPeriodRAdr = 0x0080001B,
    	DigDspCicShiftRAdr = 0x0080001C,
    	DigDspDacDdsResetRAdr = 0x0080001D,
    	DigDspDacModeRAdr = 0x0080001E,
    	DigDspDdsaModuloRAdr = 0x0080001F,
    	DigDspDdsaPhstepHRAdr = 0x00800020,
    	DigDspDdsaPhstepLRAdr = 0x00800021,
    	DigDspHistCountWStrobeRAdr = 0x00800022,
    	DigDspLoAmpRAdr = 0x00800023,
    	DigDspModuloRAdr = 0x00800024,
    	DigDspPhaseStepHRAdr = 0x00800025,
    	DigDspPhaseStepLRAdr = 0x00800026,
    	DigDspRewindRAdr = 0x00800027,
    	DigDspSsaStimAmpstepRAdr = 0x00800028,
    	DigDspSsaStimEnRAdr = 0x00800029,
    	DigDspSsaStimGPeriodRAdr = 0x0080002A,
    	DigDspSsaStimPertstepRAdr = 0x0080002B,
    	DigDspTraceKeepRAdr = 0x0080002C,
    	DigDspTraceResetWeRAdr = 0x0080002D,
    	DigDspTrigInternalRAdr = 0x0080002E,
    	DigDspTrigModeRAdr = 0x0080002F,
    	DigDspWave0SrcRAdr = 0x00800030,
    	DigDspWave1SrcRAdr = 0x00800031,
    	DigSlowreadTagNowRAdr = 0x00800032,
    	IccCfgRAdr = 0x00800033,
    	QsfpI2CRegRAdr = 0x00800034,
    	SfpAddressSetRAdr = 0x00800035,
    };

    // mapping of register names to addresses
    enum RegWriteAddrs
    {
    	LlspiWeWAdr = 0x00000005,
    	Idelay0WAdr = 0x00000070,
    	Idelay1WAdr = 0x00000071,
    	Idelay2WAdr = 0x00000072,
    	Idelay3WAdr = 0x00000073,
    	Idelay4WAdr = 0x00000074,
    	Idelay5WAdr = 0x00000075,
    	Idelay6WAdr = 0x00000076,
    	Idelay7WAdr = 0x00000077,
    	Idelay8WAdr = 0x00000078,
    	Idelay9WAdr = 0x00000079,
    	Idelay10WAdr = 0x0000007A,
    	Idelay11WAdr = 0x0000007B,
    	Idelay12WAdr = 0x0000007C,
    	Idelay13WAdr = 0x0000007D,
    	Idelay14WAdr = 0x0000007E,
    	Idelay15WAdr = 0x0000007F,
    	AdcMmcmWAdr = 0x00800000,
    	DigCfgU15SpiDataAddrRWAdr = 0x00800001,
    	DigCfgU15SpiReadAndStartRWAdr = 0x00800002,
    	DigCfgU18SpiDataAddrRWAdr = 0x00800003,
    	DigCfgU18SpiReadAndStartRWAdr = 0x00800004,
    	DigCfgU2ClkResetRWAdr = 0x00800005,
    	DigCfgU2IserdesResetRWAdr = 0x00800006,
    	DigCfgU3ClkResetRWAdr = 0x00800007,
    	DigCfgU3IserdesResetRWAdr = 0x00800008,
    	DigCfgU4ResetRWAdr = 0x00800009,
    	DigCfgBanyanMaskWAdr = 0x0080000A,
    	DigCfgBitslipWAdr = 0x0080000B,
    	DigCfgIdelayctrlResetRWAdr = 0x0080000C,
    	DigCfgLlspiWeWAdr = 0x0080000D,
    	DigCfgMmcmResetRWAdr = 0x0080000E,
    	DigCfgPeriphConfigWAdr = 0x0080000F,
    	DigCfgPhasexTrigWAdr = 0x00800010,
    	DigCfgRawadcTrigWAdr = 0x00800011,
    	DigCfgScanTriggerWeWAdr = 0x00800012,
    	DigCfgScannerDebugWAdr = 0x00800013,
    	DigCfgSyncAd7794CsetWAdr = 0x00800014,
    	DigCfgSyncTps62210CsetWAdr = 0x00800015,
    	DigDspAdcTestModeWAdr = 0x00800016,
    	DigDspAdcTestResetWAdr = 0x00800017,
    	DigDspAmplitudeWAdr = 0x00800018,
    	DigDspAverageLenWAdr = 0x00800019,
    	DigDspBufTrigWAdr = 0x0080001A,
    	DigDspCicPeriodWAdr = 0x0080001B,
    	DigDspCicShiftWAdr = 0x0080001C,
    	DigDspDacDdsResetWAdr = 0x0080001D,
    	DigDspDacModeWAdr = 0x0080001E,
    	DigDspDdsaModuloWAdr = 0x0080001F,
    	DigDspDdsaPhstepHWAdr = 0x00800020,
    	DigDspDdsaPhstepLWAdr = 0x00800021,
    	DigDspHistCountWStrobeWAdr = 0x00800022,
    	DigDspLoAmpWAdr = 0x00800023,
    	DigDspModuloWAdr = 0x00800024,
    	DigDspPhaseStepHWAdr = 0x00800025,
    	DigDspPhaseStepLWAdr = 0x00800026,
    	DigDspRewindWAdr = 0x00800027,
    	DigDspSsaStimAmpstepWAdr = 0x00800028,
    	DigDspSsaStimEnWAdr = 0x00800029,
    	DigDspSsaStimGPeriodWAdr = 0x0080002A,
    	DigDspSsaStimPertstepWAdr = 0x0080002B,
    	DigDspTraceKeepWAdr = 0x0080002C,
    	DigDspTraceResetWeWAdr = 0x0080002D,
    	DigDspTrigInternalWAdr = 0x0080002E,
    	DigDspTrigModeWAdr = 0x0080002F,
    	DigDspWave0SrcWAdr = 0x00800030,
    	DigDspWave1SrcWAdr = 0x00800031,
    	DigSlowreadTagNowWAdr = 0x00800032,
    	IccCfgWAdr = 0x00800033,
    	QsfpI2CRegWAdr = 0x00800034,
    	SfpAddressSetWAdr = 0x00800035,
    };

    // masks applied to returned register data
    enum RegMasks
    {
    	AdcMmcmMask =  0x00000003,
    	DigCfgU15SpiDataAddrRMask =  0xFFFFFFFF,
    	DigCfgU15SpiReadAndStartRMask =  0x00000003,
    	DigCfgU18SpiDataAddrRMask =  0xFFFFFFFF,
    	DigCfgU18SpiReadAndStartRMask =  0x00000003,
    	DigCfgU2ClkResetRMask =  0x00000001,
    	DigCfgU2IserdesResetRMask =  0x00000001,
    	DigCfgU3ClkResetRMask =  0x00000001,
    	DigCfgU3IserdesResetRMask =  0x00000001,
    	DigCfgU4ResetRMask =  0x00000001,
    	DigCfgBanyanMaskMask =  0x000000FF,
    	DigCfgBitslipMask =  0x0000FFFF,
    	DigCfgIdelayctrlResetRMask =  0x00000001,
    	DigCfgLlspiWeMask =  0x00000001,
    	DigCfgMmcmResetRMask =  0x00000001,
    	DigCfgPeriphConfigMask =  0xFFFFFFFF,
    	DigCfgPhasexTrigMask =  0x00000001,
    	DigCfgRawadcTrigMask =  0x00000001,
    	DigCfgScanTriggerWeMask =  0x00000001,
    	DigCfgScannerDebugMask =  0x0000001F,
    	DigCfgSyncAd7794CsetMask =  0x000003FF,
    	DigCfgSyncTps62210CsetMask =  0x0000003F,
    	DigDspAdcTestModeMask =  0x00000007,
    	DigDspAdcTestResetMask =  0x00000001,
    	DigDspAmplitudeMask =  0x0000FFFF,
    	DigDspAverageLenMask =  0x3FFFFFFF,
    	DigDspBufTrigMask =  0x00000001,
    	DigDspCicPeriodMask =  0x00003FFF,
    	DigDspCicShiftMask =  0x0000000F,
    	DigDspDacDdsResetMask =  0x00000001,
    	DigDspDacModeMask =  0x0000000F,
    	DigDspDdsaModuloMask =  0x00000FFF,
    	DigDspDdsaPhstepHMask =  0x000FFFFF,
    	DigDspDdsaPhstepLMask =  0x00000FFF,
    	DigDspHistCountWStrobeMask =  0x00000001,
    	DigDspLoAmpMask =  0x0003FFFF,
    	DigDspModuloMask =  0x00000FFF,
    	DigDspPhaseStepHMask =  0x000FFFFF,
    	DigDspPhaseStepLMask =  0x00000FFF,
    	DigDspRewindMask =  0x00000001,
    	DigDspSsaStimAmpstepMask =  0x0000FFFF,
    	DigDspSsaStimEnMask =  0x00000001,
    	DigDspSsaStimGPeriodMask =  0x000003FF,
    	DigDspSsaStimPertstepMask =  0x0000FFFF,
    	DigDspTraceKeepMask =  0x000000FF,
    	DigDspTraceResetWeMask =  0x00000001,
    	DigDspTrigInternalMask =  0x00000001,
    	DigDspTrigModeMask =  0x00000003,
    	DigDspWave0SrcMask =  0x00000007,
    	DigDspWave1SrcMask =  0x00000007,
    	DigSlowreadTagNowMask =  0x000000FF,
    	IccCfgMask =  0xFFFFFFFF,
    	QsfpI2CRegMask =  0xFFFFFFFF,
    	SfpAddressSetMask =  0x0000FFFF,

    };
};

#endif

