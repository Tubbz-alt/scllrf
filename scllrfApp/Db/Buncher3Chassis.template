# Deal with all the things that are different between Gun and Buncher,
# and bringing the 3 chassis and 4 SSAs together as a system

record (calc, "ACCL:GUNB:455:FWD:AMEAN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:FWD1:ITMEAN" )
	field( INPB, "ACCL:GUNB:455:FWD2:ITMEAN" )
	field( INPC, "ACCL:GUNB:455:FWD3:ITMEAN" )
	field( INPD, "ACCL:GUNB:455:FWD4:ITMEAN" )
	field( INPE, "ACCL:GUNB:455:FWD1:QTMEAN" )
	field( INPF, "ACCL:GUNB:455:FWD2:QTMEAN" )
	field( INPG, "ACCL:GUNB:455:FWD3:QTMEAN" )
	field( INPH, "ACCL:GUNB:455:FWD4:QTMEAN" )
	field( CALC, "SQRT((A+B+C+D)^2+(E+F+G+H)^2)")
	field( SCAN, ".2 second" )
}
record (calc, "ACCL:GUNB:455:FWD:PWR" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:FWD1:PWR" )
	field( INPB, "ACCL:GUNB:455:FWD2:PWR" )
	field( INPC, "ACCL:GUNB:455:FWD3:PWR" )
	field( INPD, "ACCL:GUNB:455:FWD4:PWR" )
	# This is the sum of the output power of all the SSAs.
	# If we're more interested in what's going into the cavity,
	# change this to vector sum of Is and Qs?
	field( CALC, "A+B+C+D")
	field( SCAN, ".2 second" )
}

record (calc, "ACCL:GUNB:455:FWD:PMEAN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:FWD1:ITMEAN" )
	field( INPB, "ACCL:GUNB:455:FWD2:ITMEAN" )
	field( INPC, "ACCL:GUNB:455:FWD3:ITMEAN" )
	field( INPD, "ACCL:GUNB:455:FWD4:ITMEAN" )
	field( INPE, "ACCL:GUNB:455:FWD1:QTMEAN" )
	field( INPF, "ACCL:GUNB:455:FWD2:QTMEAN" )
	field( INPG, "ACCL:GUNB:455:FWD3:QTMEAN" )
	field( INPH, "ACCL:GUNB:455:FWD4:QTMEAN" )
	field( CALC, "ATAN2((E+F+G+H),(A+B+C+D))")
	field( SCAN, ".2 second" )
}

record (calc, "ACCL:GUNB:455:REV:AMEAN" )
{
	field( DESC, "Total reverse amplitude" )
	field( INPA, "ACCL:GUNB:455:REV1:AMEAN" )
	field( INPB, "ACCL:GUNB:455:REV2:AMEAN" )
	field( INPC, "ACCL:GUNB:455:REV3:AMEAN" )
	field( INPD, "ACCL:GUNB:455:REV4:AMEAN" )
	field( CALC, "A+B+C+D")
	field( SCAN, ".2 second" )
}
record (calc, "ACCL:GUNB:455:REV:PWR" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:REV1:PWR" )
	field( INPB, "ACCL:GUNB:455:REV2:PWR" )
	field( INPC, "ACCL:GUNB:455:REV3:PWR" )
	field( INPD, "ACCL:GUNB:455:REV4:PWR" )
	field( CALC, "A+B+C+D")
	field( SCAN, ".2 second" )
}

# Useful for setting max fwd pwr limit
record (calc, "ACCL:GUNB:455:FWD:AMEAN_MAX" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:FWD1:AMEAN" )
	field( INPB, "ACCL:GUNB:455:FWD2:AMEAN" )
	field( INPC, "ACCL:GUNB:455:FWD3:AMEAN" )
	field( INPD, "ACCL:GUNB:455:FWD4:AMEAN" )
	field( CALC, "MAX(A,B,C,D)")
	field( SCAN, ".2 second" )
}

# Useful for SSA balancing
record (calc, "ACCL:GUNB:455:FWD:AMEAN_MIN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "ACCL:GUNB:455:FWD1:AMEAN" )
	field( INPB, "ACCL:GUNB:455:FWD2:AMEAN" )
	field( INPC, "ACCL:GUNB:455:FWD3:AMEAN" )
	field( INPD, "ACCL:GUNB:455:FWD4:AMEAN" )
	field( CALC, "MIN(A,B,C,D)")
	field( SCAN, ".2 second" )
}

record (calc, "ACCL:GUNB:455:AACT" )
{
	field( DESC, "Average cavity amplitude" )
	field( INPA, "ACCL:GUNB:455:CAV1:AMEAN" )
	field( INPB, "ACCL:GUNB:455:CAV2:AMEAN" )
	field( CALC, "MAX(A,B)")
#	field( CALC, "(A+B)/2") # Something like this once we have both probes
	field( SCAN, ".2 second" )
}

record (calc, "ACCL:GUNB:455:PACT" )
{
	field( DESC, "Average cavity phase" )
	field( INPA, "ACCL:GUNB:455:CAV1:ITMEAN" )
	field( INPB, "ACCL:GUNB:455:CAV2:ITMEAN" )
	field( INPC, "ACCL:GUNB:455:CAV1:QTMEAN" )
	field( INPD, "ACCL:GUNB:455:CAV2:QTMEAN" )
	field( CALC, "ATAN2(C+D,A+B)")
	field( SCAN, ".2 second" )
	field( FLNK, "ACCL:GUNB:455:CW_DETUNE" )
}

record (calc, "ACCL:GUNB:455:CW_DETUNE" )
{
	field( DESC, "Detuning in CW mode" )
	field( INPA, "ACCL:GUNB:455:PACT" )
	field( INPB, "ACCL:GUNB:455:FWD:PMEAN" )
	#XXXXX
	field( INPC, "$(P)SMOOTHED_BW")
	field( CALC, "C*TAN(A - B)")
	field( FLNK, "ACCL:GUNB:455:DFACT" )
}

# We expect no slope, this is just experimental.
# Only works when digitizer and output frequencies are separated
# find the derivative of phse dt,
# then get the median to kick out those ugly phase wraps
record( acalcout, "ACCL:GUNB:455:FWD:DPDT" )
{
	field( INAA, "ACCL:GUNB:455:FWD1:PWF CP")
	field( INPA, "ACCL:GUNB:455:WF_TIME_STEP")
	field( CALC, "(AA-(AA<<1))/A")
	field( FLNK, "ACCL:GUNB:455:DPDT_DETUNE")
	field( NELM, "512")
	field( NUSE, "512")
}
record( compress, "ACCL:GUNB:455:DPDT_DETUNE")
{
	field( ALG, "N to 1 Median")
	field( N, "512")
	field( NSAM, "1")
	field( INP, "ACCL:GUNB:455:FWD:DPDT.AVAL")
}

record( ao, "ACCL:GUNB:455:RF_GO")
{
	field(FLNK, "ACCL:GUNB:455:RF_GO_3CH PP")
}

record( dfanout, "ACCL:GUNB:455:RF_GO_3CH")
{
	field(OMSL, "closed_loop")
	field(DOL, "ACCL:GUNB:455:RF_GO")
	field(OUTA, "ACCL:GUNB:455:PRC:RF_GO_W PP")
	field(OUTB, "ACCL:GUNB:455:RFS1:RF_GO_W PP")
	field(OUTC, "ACCL:GUNB:455:RFS2:RF_GO_W PP")
}


# SSA drive balancing. raw 19898 = 100% amplitude.
# Adjust phase and amplitude so RF is in phase and output is equal.
record(ao, "$(P)DRV1_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
	field(VAL, "100")
	field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV1_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO1_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO1_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO1_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_I")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_Q")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOY1_W PP")
}


record(ao, "$(P)DRV2_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV2_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO2_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO2_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO2_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_I")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOX2_W PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_Q")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOY2_W PP")
}

record(ao, "$(P)DRV3_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
	field(VAL, "100")
	field(FLNK, "$(P)RFSUPLO3_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV3_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO3_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO3_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO3_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO3_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO3_AP_TO_I")
{
	field( INPA, "$(P)DRV3_ADJ_A")
	field( INPB, "$(P)DRV3_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO3_AP_TO_Q")
{
	field( INPA, "$(P)DRV3_ADJ_A")
	field( INPB, "$(P)DRV3_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOY1_W PP")
}

record(ao, "$(P)DRV4_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
	field(FLNK, "$(P)RFSUPLO4_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV4_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
	field(FLNK, "$(P)RFSUPLO4_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO4_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO4_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO4_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO4_AP_TO_I")
{
	field( INPA, "$(P)DRV4_ADJ_A")
	field( INPB, "$(P)DRV4_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOX2_W PP")
}

record( calcout, "$(P)RFSUPLO4_AP_TO_Q")
{
	field( INPA, "$(P)DRV4_ADJ_A")
	field( INPB, "$(P)DRV4_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOY2_W PP")
}

