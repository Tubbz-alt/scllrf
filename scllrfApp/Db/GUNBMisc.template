#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND

# Macros:
# P - Prefix matching what the register
#Make PVs for pulse width in ms, pulse frequency in Hz, and duty cycle in %, so that they calculate each other. Leave raw register values in raw counts.

# Bit width of pulse parameters might change, but the math is easy and won't change.
# ADC counts are a multiple of IF, which is 1320MHz/14 or 1320000kHz/14
record( calcout, "$(P)REP_PERIOD_EGU_HOPR")
{
	field( DESC, "Use raw max to calculate units max")
	field(INPA, "$(P)REP_PERIOD_W.HOPR")
	field(CALC, "A*14/1320000")
	field(EGU, "us")
	field(OUT, "$(P)REP_PERIOD.HOPR")
	field(PINI, "YES")
}
record( calcout, "$(P)REP_PERIOD_EGU_DRVH")
{
	field( DESC, "Use raw max to calculate units max")
	field(INPA, "$(P)REP_PERIOD_W.DRVH")
	field(CALC, "A*14/1320000")
	field(EGU, "us")
	field(OUT, "$(P)REP_PERIOD.DRVH")
	field(PINI, "YES")
}

# User interface PV in us
record(ao, "$(P)REP_PERIOD")
{
	field( DESC, "Pulsed mode pulse period")
	field( LOPR, "0")
	field( DRVL, "0")
	field( EGU, "ms")
	field( FLNK, "$(P)REP_PERIOD_U_TO_R")
	field( PREC, "7")
}

record(ao, "$(P)RAMP_REP_PERIOD")
{
	field( DESC, "Ramp pulsed mode pulse period")
	field( LOPR, "0")
	field( DRVL, "0")
	field( EGU, "ms")
}
# Using a calcout instead of ao because ao misbehaved with SDIS loop breaking
record(calcout, "$(P)REP_PERIOD_U_TO_R")
{
	field( DESC, "Convert EGU to raw register value")
	field( INPA, "$(P)REP_PERIOD PP")
# 1/IF, or 14/1320 MHz. 1320000 is kHz, to go with ms
	field( CALC, "A*1320000/14")
	field( EGU, "ms")
	field( LOPR, "0")
	field( OUT, "$(P)REP_PERIOD_W PP MS")
	field( PREC, "7")
}

record( ao, "$(P)REP_PERIOD_W"){
	field( FLNK, "$(P)REP_PERIOD_Sync")
	field( EGU, "IF counts")
}

record( calcout, "$(P)REP_PERIOD_Sync"){
	field( INPA,  "$(P)REP_PERIOD_W PP MS")
#	field( OMSL, "closed_loop")
	field( OUT,  "$(P)REP_PERIOD PP MS")
	field( SDIS, "$(P)REP_PERIOD_U_TO_R.PACT")
	field( DISV, "1")
	field( EGU, "ms")
# time in us is 1320MHz/14, 1 IF cycle per ADC count
	field( CALC, "A*14/1320000")
	field(FLNK, "$(P)REP_P_TO_F")
	field( PREC, "7")
}

record(calcout, "$(P)REP_P_TO_F")
{
	field(INPA, "$(P)REP_PERIOD")
	field(CALC, "1000/A")
	field(OUT, "$(P)REP_FREQUENCY PP")
	field( SDIS, "$(P)REP_F_TO_P.PACT")
	field( DISV, "1")
	field( PREC, "7")
}

record(calcout, "$(P)REP_F_TO_P")
{
	field(INPA, "$(P)REP_FREQUENCY")
	field(CALC, "1000/A")
	field(OUT, "$(P)REP_PERIOD PP")
	field( SDIS, "$(P)REP_P_TO_F.PACT")
	field( DISV, "1")
	field( PREC, "7")
}

record(ao, "$(P)REP_FREQUENCY")
{
# Max is 1320 MHz /14
	field( HOPR, "94285714.286")
	field( DRVH, "94285714.286")
	field( EGU, "Hz")
	field(FLNK, "$(P)REP_F_TO_P")
	field( PREC, "7")
}

# Enforce pulse length can't be longer than pulse interval
record( calcout, "$(P)PULSE_LENGTH_EGU_HOPR")
{
	field(INPA, "$(P)PULSE_LENGTH_W.HOPR")
	field(CALC, "A*14/1320000")
	field(EGU, "ms")
	field(OUT, "$(P)PULSE_LENGTH.HOPR")
	field(PINI, "YES")
}

record( calcout, "$(P)PULSE_LENGTH_EGU_DRVH")
{
	field(INPA, "$(P)PULSE_LENGTH_W.DRVH")
	field(CALC, "A*14/1320000")
	field(EGU, "ms")
	field(OUT, "$(P)PULSE_LENGTH.DRVH")
	field(PINI, "YES")
}

# User interface PV in us
record(ao, "$(P)PULSE_LENGTH")
{
	field( LOPR, "0")
	field( DRVL, "0")
	field( EGU, "us")
	field( FLNK, "$(P)PULSE_LENGTH_U_TO_R")
	field( PREC, "7")
}

# Using a calcout instead of ao because ao misbehaved with SDIS loop breaking
record(calcout, "$(P)PULSE_LENGTH_U_TO_R")
{
# ASLO is 1/IF, or 14/1320 MHz
	field( INPA, "$(P)PULSE_LENGTH PP")
	field( CALC, "A*1320000/14")
	field(EGU, "ms")
	field( LOPR, "0")
	field( OUT, "$(P)PULSE_LENGTH_W PP MS")
	field( PREC, "7")
}

record( ao, "$(P)PULSE_LENGTH_W"){
	field( FLNK, "$(P)PULSE_LENGTH_Sync")
}

record( calcout, "$(P)PULSE_LENGTH_Sync"){
	field( INPA,  "$(P)PULSE_LENGTH_W PP MS")
	field( OUT,  "$(P)PULSE_LENGTH PP MS")
	field( SDIS, "$(P)PULSE_LENGTH_U_TO_R.PACT")
	field( DISV, "1")
	field( EGU, "ms")
# time in us is 1320MHz/14, 1 IF cycle per ADC count
	field( CALC, "A*14/1320000")
	field(FLNK, "$(P)REP_P_TO_F")
	field( PREC, "7")
}

# When ramping duty cycle, increase the frequency, not the pulse length
record( ao, "$(P)DUTY_CYCLE")
{
	field( LOPR, "0")
	field( DRVL, "0")
	field( HOPR, "100")
	field( DRVH, "100")
	field( EGU, "%")
	field( FLNK, "$(P)DUTY_CYCLE_Sync_Out PP")
	field( PREC, "7")
}

record( calcout, "$(P)DUTY_CYCLE_Sync_Out")
{
	field( INPA, "$(P)DUTY_CYCLE")
	field( INPB, "$(P)PULSE_LENGTH")
	field( OCAL, "A==0?0:B/(A/100)")
	field( DOPT, "Use OCAL")
	field( OUT, "$(P)REP_PERIOD PP")
	# Only output when neither length nor period are updating
	field( INPC, "$(P)PULSE_LENGTH.PACT")
	field( INPD, "$(P)REP_PERIOD.PACT")
	field( CALC, "C|D")
	field( OOPT, "When Zero")
	field( SDIS, "$(P)DUTY_CYCLE_Sync_In.PACT")
	field( DISV, "1")
	field( EGU, "%")
#	field( FLNK, "$(P)REP_PERIOD")
	field( PREC, "7")
}

record( calcout, "$(P)DUTY_CYCLE_Sync_In")
{
	field( INPA, "$(P)REP_PERIOD CP")
	field( INPB, "$(P)PULSE_LENGTH CP")
	field( CALC, "A==0?0:B>A?100:100*B/A")
	field( OOPT, "On Change")
	field( OUT, "$(P)DUTY_CYCLE PP")
	field( SDIS, "$(P)DUTY_CYCLE_Sync_Out.PACT")
	field( DISV, "1")
	field( EGU, "%")
	field( PREC, "7")
}


# On the user side, setpoints are amplitude/phase.
# On the FPGA side, they're I/Q
record( ao, "$(P)ADES"){
	field( DESC, "RF Amplitude Setpoint")
	field( OUT,  "$(P)AP_TO_IQ PP")
	field( PREC, "3")
	field( HOPR, "0xFFFF")
	field( LOPR, "0")
}

record( ao, "$(P)PDES"){
	field( DESC, "RF Phase Setpoint")
	field( OUT,  "$(P)AP_TO_IQ PP")
	field( PREC, "3")
	field( HOPR, "180")
	field( LOPR, "-180")
}

record( fanout,  "$(P)AP_TO_IQ")
{
	field(LNK1, "$(P)AP_TO_I PP")
	field(LNK2, "$(P)AP_TO_Q PP")
}

record( calcout, "$(P)AP_TO_I")
{
	field( INPA, "$(P)ADES")
	field( INPB, "$(P)PDES")
	field( INPC, "$(SCALEPV)")
	field( CALC, "A*COS(B*D2R)/C")
	field( OUT, "$(P)SET_PLOOP_RE_W PP")
}

record( calcout, "$(P)AP_TO_Q")
{
	field( INPA, "$(P)ADES")
	field( INPB, "$(P)PDES")
	field( INPC, "$(SCALEPV)")
	field( CALC, "A*SIN(B*D2R)/C")
	field( OUT, "$(P)SET_PLOOP_IM_W PP")
}

record(ai, "$(P)DECAY_CONSTANT_B") {
	field(PINI, "NO")
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),0) DECAY_CONSTANT_B")
	field(SCAN, "I/O Intr")
}
record(ai, "$(P)DECAY_STRENGTH") {
	field(PINI, "NO")
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),0) DECAY_STRENGTH")
	field(SCAN, "I/O Intr")
}
record(ai, "$(P)DECAY_FIT_STDDEV") {
	field(PINI, "NO")
	field(DTYP, "asynFloat64")
	field(INP, "@asyn($(PORT),0) DECAY_FIT_STDDEV")
	field(SCAN, "I/O Intr")
}

# Above is closed loop settings. Below are open loop, in A/D units

record( ao, "$(P)AOPEN"){
	field( DESC, "RF Amplitude Setpoint")
	field( OUT,  "$(P)AP_OPEN_TO_IQ PP")
	field( PREC, "3")
	field( HOPR, "0xFFFF")
	field( LOPR, "0")
}

record( ao, "$(P)POPEN"){
	field( DESC, "RF Phase Setpoint")
	field( OUT,  "$(P)AP_OPEN_TO_IQ PP")
	field( PREC, "3")
	field( HOPR, "3.141592654")
	field( LOPR, "-3.141592654")
}

record( fanout,  "$(P)AP_OPEN_TO_IQ")
{
	field(LNK1, "$(P)AP_OPEN_TO_I PP")
	field(LNK2, "$(P)AP_OPEN_TO_Q PP")
}

record( calcout, "$(P)AP_OPEN_TO_I")
{
	field( INPA, "$(P)AOPEN")
	field( INPB, "$(P)POPEN")
	field( CALC, "A*COS(B)")
	field( OUT, "$(P)SOURCE_RE_W PP")
}

#XXXX This is a temporary hack, figure out correct behavior
record(ao, "$(P)OPEN_CLOSED_RE_Sync")
{
	field( DOL,  "$(P)SOURCE_RE_W CP")
	field( OMSL, "closed_loop")
	field( OUT,  "$(P)SET_PLOOP_RE_W PP")
}


record( calcout, "$(P)AP_OPEN_TO_Q")
{
	field( INPA, "$(P)AOPEN")
	field( INPB, "$(P)POPEN")
	field( CALC, "A*SIN(B)")
	field( OUT, "$(P)SOURCE_IM_W PP")
}

#XXXX This is a temporary hack, figure out correct behavior
record(ao, "$(P)OPEN_CLOSED_IM_Sync")
{
	field( DOL,  "$(P)SOURCE_IM_W CP")
	field( OMSL, "closed_loop")
	field( OUT,  "$(P)SET_PLOOP_IM_W PP")
}

record( ao, "$(P)SOURCE_RE_W"){
	field( SDIS, "$(P)SOURCE_RE_Sync.PACT")
	field( DISV, "1")
}

record( ai, "$(P)SOURCE_RE_R"){
	field( FLNK, "$(P)SOURCE_RE_Sync")
}####XXXX Do we really need this synchronization?
record( ao, "$(P)SOURCE_RE_Sync"){
	field( DOL,  "$(P)SOURCE_RE_R PP")
	field( OMSL, "closed_loop")
	field( OUT,  "$(P)IQ_OPEN_TO_AP PP")
}

record( ao, "$(P)SOURCE_IM_W"){
	field( SDIS, "$(P)SOURCE_IM_Sync.PACT")
	field( DISV, "1")
}

record( ai, "$(P)SOURCE_IM_R"){
	field( FLNK, "$(P)SOURCE_IM_Sync")
}
record( ao, "$(P)SOURCE_IM_Sync"){
	field( DOL,  "$(P)SOURCE_IM_R PP")
	field( OMSL, "closed_loop")
	field( OUT,  "$(P)IQ_OPEN_TO_AP PP")
}

record( fanout,  "$(P)IQ_OPEN_TO_AP")
{
	field(LNK1, "$(P)IQ_OPEN_TO_A PP")
	field(LNK2, "$(P)IQ_OPEN_TO_P PP")
}

record( calcout, "$(P)IQ_OPEN_TO_A")
{
	field( INPA, "$(P)SOURCE_RE_R")
	field( INPB, "$(P)SOURCE_IM_R")
	field(CALC, "(SQRT(A^2+B^2))")
	field( OUT, "$(P)AOPEN PP")
}

record( calcout, "$(P)IQ_OPEN_TO_P")
{
	field( INPA, "$(P)SOURCE_RE_R")
	field( INPB, "$(P)SOURCE_IM_R")
	field(CALC, "(ATAN2(A,B))")
	field( OUT, "$(P)POPEN PP")
}

#record(calc, "$(P)IFDES2MODULO")
#{
#field(INPA, "$(P)IFDES")
#field(CALC, "
#
#! Further lines contain data used by VisualDCT
#! View(1074,190,1.6)
#! Record("$(P)TRACE_DATA_N_ACTIVE",980,27,0,0,"$(P)TRACE_DATA_N_ACTIVE")
#! Record("$(P)CIRC_1_N_ACTIVE",1220,27,0,0,"$(P)CIRC_1_N_ACTIVE")
#! Record("$(P)IFACT",1460,27,0,0,"$(P)IFACT")
#! Record("$(P)IFDES",1700,10,0,0,"$(P)IFDES")
#! Record("$(P)TRACE_DATA_CIRCLE_COUNT_R",1940,27,0,0,"$(P)TRACE_DATA_CIRCLE_COUNT_R")
#! Record("$(P)TRACE_DATA_CIRCLE_STAT_R",2180,27,0,0,"$(P)TRACE_DATA_CIRCLE_STAT_R")
#! Record("$(P)TRACE_DATA_TAG_NOW_R",2420,27,0,0,"$(P)TRACE_DATA_TAG_NOW_R")
#! Record("$(P)TRACE_DATA_TAG_OLD_R",2660,27,0,0,"$(P)TRACE_DATA_TAG_OLD_R")
#! Record("$(P)TRACE_DATA_MIN0_R",2900,27,0,0,"$(P)TRACE_DATA_MIN0_R")
#! Record("$(P)TRACE_DATA_MIN1_R",3140,27,0,0,"$(P)TRACE_DATA_MIN1_R")
#! Record("$(P)TRACE_DATA_MIN2_R",3380,27,0,0,"$(P)TRACE_DATA_MIN2_R")
#! Record("$(P)TRACE_DATA_MAX0_R",3620,27,0,0,"$(P)TRACE_DATA_MAX0_R")
#! Record("$(P)TRACE_DATA_MAX1_R",3860,27,0,0,"$(P)TRACE_DATA_MAX1_R")
#! Record("$(P)TRACE_DATA_MAX2_R",4100,27,0,0,"$(P)TRACE_DATA_MAX2_R")
#! Record("$(P)TRACE_DATA_TIME_STAMP_HIGH_R",4340,27,0,0,"$(P)TRACE_DATA_TIME_STAMP_HIGH_R")
#! Record("$(P)TRACE_DATA_TIME_STAMP_LOW_R",4580,27,0,0,"$(P)TRACE_DATA_TIME_STAMP_LOW_R")
#! Record("$(P)TRACE_DATA_SLOW_DATA_R",20,374,0,0,"$(P)TRACE_DATA_SLOW_DATA_R")
#! Record("$(P)TRACE_DATA_TIME_STEP",260,379,0,0,"$(P)TRACE_DATA_TIME_STEP")
#! Field("$(P)TRACE_DATA_TIME_STEP.VAL",16777215,0,"$(P)TRACE_DATA_TIME_STEP.VAL")
#! Record("$(P)TRACE_DATA_CALCX",500,377,0,0,"$(P)TRACE_DATA_CALCX")
#! Field("$(P)TRACE_DATA_CALCX.INPA",16777215,0,"$(P)TRACE_DATA_CALCX.INPA")
#! Link("$(P)TRACE_DATA_CALCX.INPA","$(P)TRACE_DATA_TIME_STEP.VAL")
#! Field("$(P)TRACE_DATA_CALCX.OUT",16777215,1,"$(P)TRACE_DATA_CALCX.OUT")
#! Link("$(P)TRACE_DATA_CALCX.OUT","$(P)TRACE_DATA_X_AXIS.VAL")
#! Record("$(P)TRACE_DATA_X_AXIS",740,385,0,0,"$(P)TRACE_DATA_X_AXIS")
#! Field("$(P)TRACE_DATA_X_AXIS.VAL",16777215,1,"$(P)TRACE_DATA_X_AXIS.VAL")
#! Record("$(P)TRACE_DATA_UPDATE_PLOT",980,370,0,0,"$(P)TRACE_DATA_UPDATE_PLOT")
#! Record("$(P)TRACE_UPDATE_PLOT",500,735,0,0,"$(P)TRACE_UPDATE_PLOT")
#! Field("$(P)TRACE_UPDATE_PLOT.DOL",16777215,1,"$(P)TRACE_UPDATE_PLOT.DOL")
