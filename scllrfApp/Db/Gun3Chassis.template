# Deal with all the things that are different between Gun and Buncher,
# and bringing the 3 chassis and 2 SSAs together as a system

record (calc, "GUN:GUNB:100:FWD:AMEAN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN CP MS" )
	field(EGU, "sqrt(W)")
	field( CALC, "A+B")
}

record (calc, "GUN:GUNB:100:FWD:PWR" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:PWR CP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:PWR CP MS" )
	field( CALC, "A+B")
	field(EGU, "W")
}


record (mbbo, "GUN:GUNB:100:FWD:USE_AS_REF")
{
	field(ZRST, "GUN:GUNB:100:FWD1")
	field(ONST, "GUN:GUNB:100:FWD2")
	field(TWST, "GUN:GUNB:100:PRC:RFS1A")
	field(THST, "GUN:GUNB:100:PRC:RFS1B")
	field(FRST, "GUN:GUNB:100:PRC:RFS2A")
	field(FVST, "GUN:GUNB:100:PRC:RFS2B")
	info( autosaveFields, "VAL")
}

record (calc, "GUN:GUNB:100:FWD:PMEAN" )
{
	field( DESC, "Total forward amplitude" )
#	# Maybe we'll use this vector sum approach later.
#	# For now, there are too many complications and no
#	# compelling reason it's better than picking one signal.
#	# GWB 7-24-18
#	field( INPA, "GUN:GUNB:100:FWD1:ITMEAN NPP MS" )
#	field( INPB, "GUN:GUNB:100:FWD2:ITMEAN NPP MS" )
#	field( INPC, "GUN:GUNB:100:FWD1:QTMEAN NPP MS" )
#	field( INPD, "GUN:GUNB:100:FWD2:QTMEAN NPP MS" )
#	field( CALC, "ATAN2((C+D),(A+B))")
	field( INPA, "GUN:GUNB:100:FWD1:PMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:PMEAN CP MS" )
	field( INPC, "GUN:GUNB:100:PRC:RFS1A:PMEAN CP MS" )
	field( INPD, "GUN:GUNB:100:PRC:RFS1B:PMEAN CP MS" )
	field( INPE, "GUN:GUNB:100:PRC:RFS2A:PMEAN CP MS" )
	field( INPF, "GUN:GUNB:100:PRC:RFS2B:PMEAN CP MS" )
	field( INPG, "GUN:GUNB:100:FWD:USE_AS_REF")
	field( CALC, "G=0?A:G=1?B:G=2?C:G=3?D:G=4?E:F")
	field(EGU, "deg")
}

record (calc, "GUN:GUNB:100:REV:AMEAN" )
{
	field( DESC, "Total reverse amplitude" )
	field( INPA, "GUN:GUNB:100:REV1:AMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:REV2:AMEAN CP MS" )
	field( CALC, "A+B")
	field(EGU, "sqrt(W)")
}
record (calc, "GUN:GUNB:100:REV:PWR" )
{
	field( DESC, "Total reverse amplitude" )
	field( INPA, "GUN:GUNB:100:REV1:PWR CP MS" )
	field( INPB, "GUN:GUNB:100:REV2:PWR CP MS" )
	field( CALC, "A+B")
	field(EGU, "W")
}

# Useful for setting max fwd pwr limit
record (calc, "GUN:GUNB:100:FWD:AMEAN_MAX" )
{
	field( DESC, "Highest forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN CP MS" )
	field( CALC, "MAX(A,B)")
	field(EGU, "sqrt(Watts)")
}

# Useful for SSA balancing
record (calc, "GUN:GUNB:100:FWD:AMEAN_MIN" )
{
	field( DESC, "Lowest forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN CP MS" )
	field( CALC, "MIN(A,B)")
	field(EGU, "sqrt(Watts)")
}

record(calc, "GUN:GUNB:100:ACTIVE_PROBE")
{
# Translate channel number used by feedback to CAV1/2 signal
	field( INPA, "GUN:GUNB:100:PRC:FDBKSEL_W CP MS" )
	field( CALC, "A=4?2:1")
}

record (calc, "GUN:GUNB:100:AACT" )
{
	field( DESC, "Average cavity amplitude" )
	field( INPA, "GUN:GUNB:100:CAV1:AMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:AMEAN CP MS" )
	field( CALC, "MAX(A,B)")
#	field( CALC, "(A+B)/2") # Something like this once we have both probes
	field(EGU, "MV")
}

record (calc, "GUN:GUNB:100:PACT" )
{
	field( DESC, "Average cavity phase" )
#	# Maybe we'll use this vector sum approach later.
#	# For now, there are too many complications and no
#	# compelling reason it's better than picking one signal.
#	# GWB 7-24-18
#	field( INPA, "GUN:GUNB:100:CAV1:ITMEAN NPP MS" )
#	field( INPB, "GUN:GUNB:100:CAV2:ITMEAN NPP MS" )
#	field( INPC, "GUN:GUNB:100:CAV1:QTMEAN NPP MS" )
#	field( INPD, "GUN:GUNB:100:CAV2:QTMEAN NPP MS" )
#	field( CALC, "ATAN2(C+D,A+B)")
	field( INPA, "GUN:GUNB:100:CAV1:PMEAN CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:PMEAN CP MS" )
	field( INPC, "GUN:GUNB:100:ACTIVE_PROBE" )
	field( CALC, "C=1?A:B")
	field( FLNK, "GUN:GUNB:100:CW_DETUNE" )
	field(EGU, "deg")
}

record (calc, "GUN:GUNB:100:DECAY_STRENGTH" )
{
	field( DESC, "Average cavity phase" )
	field( INPA, "GUN:GUNB:100:CAV1:DECAY_STRENGTH CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:DECAY_STRENGTH CP MS" )
	field( INPC, "GUN:GUNB:100:ACTIVE_PROBE CP" )
	field( CALC, "C=1?A:B")
}

record (calc, "GUN:GUNB:100:DECAY_FIT_STDDEV" )
{
	field( DESC, "Average cavity phase" )
	field( INPA, "GUN:GUNB:100:CAV1:DECAY_FIT_STDDEV CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:DECAY_FIT_STDDEV CP MS" )
	field( INPC, "GUN:GUNB:100:ACTIVE_PROBE CP" )
	field( CALC, "C=1?A:B")
}

record (calc, "GUN:GUNB:100:DECAY_CONSTANT_B" )
{
	alias( "GUN:GUNB:100:PM_DETUNE")
	field( DESC, "Average cavity phase" )
	field( INPA, "GUN:GUNB:100:CAV1:DECAY_CONSTANT_B CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:DECAY_CONSTANT_B CP MS" )
	field( INPC, "GUN:GUNB:100:ACTIVE_PROBE CP" )
	field( CALC, "C=1?A:B")
	field(EGU, "Hz")
}

record (calc, "GUN:GUNB:100:DECAY_BW" )
{
	field( DESC, "Average cavity phase" )
	field( INPA, "GUN:GUNB:100:CAV1:DECAY_BW CP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:DECAY_BW CP MS" )
	field( INPC, "GUN:GUNB:100:ACTIVE_PROBE CP" )
	field( CALC, "C=1?A:B")
	field(EGU, "Hz")
	info( autosaveFields, "VAL")
}

record (calc, "GUN:GUNB:100:PMEAN_EXP_OFFSET")
{
	field( DESC, "Detuning in CW mode" )
	field( INPA, "GUN:GUNB:100:PM_DETUNE CP MS")
	field( INPB, "GUN:GUNB:100:SMOOTHED_BW")
	field( CALC, "R2D*ATAN(A/B)")
	field(EGU, "degrees")
	info( autosaveFields, "VAL")
}

record (calc, "GUN:GUNB:100:FWD1:PMEAN_OFFSET")
{
	field( DESC, "Fwd - cav phase when detune is small")
	field( INPA, "GUN:GUNB:100:PACT CP MS" )
	field( INPB, "GUN:GUNB:100:FWD:PMEAN CP MS" )
	field( INPC, "GUN:GUNB:100:PM_DETUNE CP MS")
	field( INPE, ".99") # SMOOTHING FACTOR
	field( INPF, "GUN:GUNB:100:PMEAN_EXP_OFFSET CP")
	field( CALC, "ABS(C)<300?E*VAL+(1-E)*(A-B-F):VAL")
	field( SDIS, "GUN:GUNB:100:DETUNE_MODE")
	field( DISV, "0") # stop updating this when not pulsing
	field(EGU, "degrees")
	info( autosaveFields, "VAL")
}

record (calc, "GUN:GUNB:100:CW_DETUNE" )
{
	field( DESC, "Detuning in CW mode" )
	field( INPA, "GUN:GUNB:100:PACT NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD:PMEAN NPP MS" )
	field( INPC, "GUN:GUNB:100:FWD:PMEAN_OFFSET")
	field( INPD, "GUN:GUNB:100:SMOOTHED_BW")
	field( CALC, "D*TAN(D2R*(A - B - C))")
	field( FLNK, "GUN:GUNB:100:DFACT" )
	field(EGU, "Hz")
}

record( ao, "GUN:GUNB:100:RF_GO")
{
	field(FLNK, "GUN:GUNB:100:RF_GO_3CH PP")
}

record( dfanout, "GUN:GUNB:100:RF_GO_3CH")
{
	field(OMSL, "closed_loop")
	field(DOL, "GUN:GUNB:100:RF_GO")
	field(OUTA, "GUN:GUNB:100:PRC:RF_GO_W PP")
	field(OUTB, "GUN:GUNB:100:RFS1:RF_GO_W PP")
	field(OUTC, "GUN:GUNB:100:RFS2:RF_GO_W PP")
}

# SSA drive balancing. raw 19898 = 100% amplitude.
# Adjust phase and amplitude so RF is in phase and output is equal.
record(ao, "$(P)DRV1_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
	field(VAL, "100")
	field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV1_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO1_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO1_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO1_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_I")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_Q")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOY1_W PP")
}


record(ao, "$(P)DRV2_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV2_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO2_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO2_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO2_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_I")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_Q")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOY1_W PP")
}
