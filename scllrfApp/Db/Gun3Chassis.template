# Deal with all the things that are different between Gun and Buncher,
# and bringing the 3 chassis and 2 SSAs together as a system

record (calc, "GUN:GUNB:100:FWD:AMEAN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN NPP MS" )
	field( CALC, "A+B")
	field( SCAN, ".2 second" )
}

record (calc, "GUN:GUNB:100:FWD:PWR" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:PWR NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:PWR NPP MS" )
	field( CALC, "A+B")
	field( SCAN, ".2 second" )
	field(EGU, "W")
}
record (calc, "GUN:GUNB:100:FWD:PMEAN" )
{
	field( DESC, "Total forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:ITMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:ITMEAN NPP MS" )
	field( INPC, "GUN:GUNB:100:FWD1:QTMEAN NPP MS" )
	field( INPD, "GUN:GUNB:100:FWD2:QTMEAN NPP MS" )
	field( CALC, "ATAN2((C+D),(A+B))")
	field( SCAN, ".2 second" )
	field(EGU, "deg")
}

record (calc, "GUN:GUNB:100:REV:AMEAN" )
{
	field( DESC, "Total reverse amplitude" )
	field( INPA, "GUN:GUNB:100:REV1:AMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:REV2:AMEAN NPP MS" )
	field( CALC, "A+B")
	field( SCAN, ".2 second" )
}
record (calc, "GUN:GUNB:100:REV:PWR" )
{
	field( DESC, "Total reverse amplitude" )
	field( INPA, "GUN:GUNB:100:REV1:PWR NPP MS" )
	field( INPB, "GUN:GUNB:100:REV2:PWR NPP MS" )
	field( CALC, "A+B")
	field( SCAN, ".2 second" )
	field(EGU, "W")
}

# Useful for setting max fwd pwr limit
record (calc, "GUN:GUNB:100:FWD:AMEAN_MAX" )
{
	field( DESC, "Highest forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN NPP MS" )
	field( CALC, "MAX(A,B)")
	field( SCAN, ".2 second" )
	field(EGU, "sqrt(Watts)")
}

# Useful for SSA balancing
record (calc, "GUN:GUNB:100:FWD:AMEAN_MIN" )
{
	field( DESC, "Lowest forward amplitude" )
	field( INPA, "GUN:GUNB:100:FWD1:AMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:AMEAN NPP MS" )
	field( CALC, "MIN(A,B)")
	field( SCAN, ".2 second" )
	field(EGU, "sqrt(Watts)")
}

record (calc, "GUN:GUNB:100:AACT" )
{
	field( DESC, "Average cavity amplitude" )
	field( INPA, "GUN:GUNB:100:CAV1:AMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:AMEAN NPP MS" )
	field( CALC, "MAX(A,B)")
#	field( CALC, "(A+B)/2") # Something like this once we have both probes
	field( SCAN, ".2 second" )
	field(EGU, "MV")
}

record (calc, "GUN:GUNB:100:PACT" )
{
	field( DESC, "Average cavity phase" )
	field( INPA, "GUN:GUNB:100:CAV1:ITMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:CAV2:ITMEAN NPP MS" )
	field( INPC, "GUN:GUNB:100:CAV1:QTMEAN NPP MS" )
	field( INPD, "GUN:GUNB:100:CAV2:QTMEAN NPP MS" )
	field( INPE, "GUN:GUNB:100:CAV1:PMEAN NPP MS" )
	field( CALC, "ATAN2(C+D,A+B)")
	field( CALC, "E")
	field( SCAN, ".2 second" )
	field( FLNK, "GUN:GUNB:100:CW_DETUNE" )
	field(EGU, "deg")
}

record (calc, "GUN:GUNB:100:CW_DETUNE" )
{
	field( DESC, "Detuning in CW mode" )
	field( INPA, "GUN:GUNB:100:CAV1:PMEAN NPP MS" )
	field( INPB, "GUN:GUNB:100:FWD2:PMEAN NPP MS" )
	field( INPC, "$(P)SMOOTHED_BW")
	field( CALC, "C*TAN(A - B)")
	field( FLNK, "GUN:GUNB:100:DFACT" )
}

record( ao, "GUN:GUNB:100:RF_GO")
{
	field(FLNK, "GUN:GUNB:100:RF_GO_3CH PP")
}

record( dfanout, "GUN:GUNB:100:RF_GO_3CH")
{
	field(OMSL, "closed_loop")
	field(DOL, "GUN:GUNB:100:RF_GO")
	field(OUTA, "GUN:GUNB:100:PRC:RF_GO_W PP")
	field(OUTB, "GUN:GUNB:100:RFS1:RF_GO_W PP")
	field(OUTC, "GUN:GUNB:100:RFS2:RF_GO_W PP")
}

# SSA drive balancing. raw 19898 = 100% amplitude.
# Adjust phase and amplitude so RF is in phase and output is equal.
record(ao, "$(P)DRV1_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
	field(VAL, "100")
	field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV1_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO1_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO1_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO1_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO1_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_I")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO1_AP_TO_Q")
{
	field( INPA, "$(P)DRV1_ADJ_A")
	field( INPB, "$(P)DRV1_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS1:RFSUPLOY1_W PP")
}


record(ao, "$(P)DRV2_ADJ_A")
{
	field(EGU, "%")
	field(HOPR, "100")
	field(LOPR, "0")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}

record(ao, "$(P)DRV2_ADJ_P")
{
	field(EGU, "degrees")
	field(HOPR, "180")
	field(LOPR, "-180")
		field(FLNK, "$(P)RFSUPLO2_AP_TO_IQ")
	info( autosaveFields, "VAL")
}
record( fanout,  "$(P)RFSUPLO2_AP_TO_IQ")
{
	field(LNK1, "$(P)RFSUPLO2_AP_TO_I PP")
	field(LNK2, "$(P)RFSUPLO2_AP_TO_Q PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_I")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*COS(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOX1_W PP")
}

record( calcout, "$(P)RFSUPLO2_AP_TO_Q")
{
	field( INPA, "$(P)DRV2_ADJ_A")
	field( INPB, "$(P)DRV2_ADJ_P")
	field( CALC, "A*SIN(B*D2R)*19898/100")
	field( OUT, "$(P)RFS2:RFSUPLOY1_W PP")
}
