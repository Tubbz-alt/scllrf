# Load the chassis-specific database indicated by the CHASSIS_TYPE macro
include "db/$(SC=scllrf)$(CHASSIS_TYPE)Registers.template"

record(ao, "$(P)POLL_PERIOD")
{
	field(PINI, "YES")
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),0) POLL_PERIOD")
	field(SCAN, "Passive")
	field(PREC, "2")
	info(asyn:READBACK, "1")
	info(autosaveFields, "VAL DESC EGUL EGUF HOPR LOPR PREC HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}

record(bo, "$(P)RUN_STOP")
{
	field(PINI, "NO")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),0) RUN_STOP")
	field(SCAN, "Passive")
	field(ZNAM, "Stop")
	field(ONAM, "Run")
	info(autosaveFields, "VAL DESC HIGH")
}

record(longout, "$(P)MAX_PARALLEL_REQUESTS")
{
	field(PINI, "YES")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),0) MAX_PARALLEL_REQUESTS")
	field(SCAN, "Passive")
	info(asyn:READBACK, "1")
	info(autosaveFields, "VAL DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}

record(ai, "$(P)COMM_ERROR_COUNT")
{
	field(PINI, "YES")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),0) COMM_ERROR_COUNT")
	field(SCAN, "I/O Intr")
	info(autosaveFields, "DESC EGUL EGUF SMOO HOPR LOPR PREC HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}

record( waveform, "$(P)READ_ONE_REG"){
field( DESC, "Simple single register access")
field( SCAN, "Passive")
field( DTYP, "asynInt32ArrayIn")
field( INP,  "@asyn($(PORT),0,1)READ_ONE_REG")
field( PREC, "1")
field( NELM, "2")
field( FTVL, "LONG")
}

record( waveform, "$(P)WRITE_ONE_REG"){
field( DESC, "Simple single register access")
field( SCAN, "Passive")
field( DTYP, "asynInt32ArrayOut")
field( INP,  "@asyn($(PORT),0,1)WRITE_ONE_REG")
field( PREC, "1")
field( NELM, "2")
field( FTVL, "LONG")
}

record(ai, "$(P)GIT_SHA1_A_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_A_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_A_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_A_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_B_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_B_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_B_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_B_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_C_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_C_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_C_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_C_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_D_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_D_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_D_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_D_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_E_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_E_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_E_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_E_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_F_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_F_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_F_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_F_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_G_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_G_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_G_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_G_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_H_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_H_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_H_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_H_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_I_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_I_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_I_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_I_R")
	field( SCAN, "Passive")
}

record(ai, "$(P)GIT_SHA1_J_R")
{
	field( DESC, "SHA1 sum of firmware")
	field( PINI, "YES")
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_J_R")
	field( SCAN, "I/O Intr")
	field( HOPR, "0x000000FF")
	field( LOPR, "0")
	field(PREC, "3")
	info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
}
record(bi, "$(P)GET_GIT_SHA1_J_R")
{
	field( DTYP, "asynInt32")
	field( INP,  "@asyn($(PORT),0) GIT_SHA1_J_R")
	field( SCAN, "Passive")
}

record(waveform, "$(P)GIT_SHA1")
{
	field( DESC, "SHA1 string from firmware git commit")
	field( DTYP, "asynOctetRead")
	field( NELM, "44")
	field( INP,  "@asyn($(PORT),0,1) GIT_SHA1")
	field( PINI, "YES")
#	field( INP,  "@asyn($(PORT),0) GIT_SHA1")
	field( SCAN, "I/O Intr")
	field(FTVL, "CHAR")
}

record(waveform, "$(P)JSON_SHA1_DES")
{
	field( DESC, "SHA1 string from JSON in IOC")
	field( DTYP, "asynOctetRead")
	field( NELM, "44")
	field( INP,  "@asyn($(PORT),0,1) JSON_SHA1_DES")
	field( PINI, "YES")
	field( SCAN, "I/O Intr")
	field(FTVL, "CHAR")
}

record(waveform, "$(P)JSON_SHA1_ACT")
{
	field( DESC, "SHA1 string from JSON in FPGA")
	field( DTYP, "asynOctetRead")
	field( NELM, "44")
	field( INP,  "@asyn($(PORT),0,1) JSON_SHA1_ACT")
	field( PINI, "YES")
	field( SCAN, "I/O Intr")
	field(FTVL, "CHAR")
}

record(waveform, "$(P)FW_DESC")
{
	field( DESC, "Description read from Firmware")
	field( DTYP, "asynOctetRead")
	field( NELM, "44")
	field( INP,  "@asyn($(PORT),0,1) FW_DESC")
	field( PINI, "YES")
	field( SCAN, "I/O Intr")
	field(FTVL, "CHAR")
}
record(waveform, "$(P)GET_CONFIG_ROM_OUT_R")
{
	field( PINI, "YES")
}