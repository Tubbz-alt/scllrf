#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND

record( ao, "$(P)ADES"){
  field( DESC, "RF Amplitude Setpoint")
  field( OUT,  "$(P)AMPLITUDE_W PP")
  field( PREC, "3")
}

# Add disable fields to PV defined in generated db file
record( ao, "$(P)AMPLITUDE_W"){
  field( SDIS, "$(P)AMPLITUDE_Sync.PACT")
  field( DISV, "1")
}

record( ai, "$(P)AMPLITUDE_R"){
  field( FLNK, "$(P)AMPLITUDE_Sync")
}
record( ao, "$(P)AMPLITUDE_Sync"){
  field( DOL,  "$(P)AMPLITUDE_R PP")
  field( OMSL, "closed_loop")
  field( OUT,  "$(P)ADES PP")
}

record( waveform, "$(P)RAMTEST"){
  field( FLNK, "$(P)RAMTEST_Syncout")
	field( FTVL, "SHORT")
	field( NELM, "8")
}

record(acalcout, "$(P)RAMTEST_Syncout")
{
  field( OUT,  "$(P)RAMTEST_W PP")
  field(INAA, "$(P)RAMTEST PP")
  field(CALC, "AA")
  field(NELM, "8")
  field(NUSE, "8")
  field( SDIS, "$(P)RAMTEST_Syncin.PACT")
  field( DISV, "1")
}

record( waveform, "$(P)RAMTEST_W"){
  field( SDIS, "$(P)RAMTEST_Syncin.PACT")
  field( DISV, "1")
  field( FLNK, "$(P)GET_RAMTEST_R")
}

record( waveform, "$(P)RAMTEST_R"){
  field( FLNK, "$(P)RAMTEST_Syncin")
  field( SDIS, "$(P)RAMTEST_Syncout.PACT")
  field( DISV, "1")
}

record(acalcout, "$(P)RAMTEST_Syncin")
{
  field(INAA, "$(P)RAMTEST_R PP")
  field(CALC, "AA")
  field(NELM, "8")
  field(NUSE, "8")
  field(OUT, "$(P)RAMTEST PP")
  field( SDIS, "$(P)RAMTEST_Syncout.PACT")
  field( DISV, "1")
}

record(mbboDirect, "$(P)TRACE_DATA_CHAN_ENABLE")
{
	field( PINI, "NO")
	field( DTYP, "asynUInt32Digital")
	field( OUT,  "@asynMask($(PORT),0, 0x00000FFF, 0.1) TRACE_DATA_CHAN_ENABLE")
	field( NOBT, "12")
	field( SCAN, "Passive")
	info( autosaveFields, "DESC")
}
record(longin, "$(P)TRACE_DATA_N_ACTIVE") {
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) TRACE_DATA_N_ACTIVE")
  field(SCAN, "I/O Intr")
}

record(ai, "$(P)IFACT") {
  field(PINI, "NO")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) IF_FREQ")
  field(SCAN, "I/O Intr")
}

record(ao, "$(P)IFDES") {
  field(PINI, "NO")
}

#### Adapted from ApexCalcs.db
#
#record(calc,"$(P)theta")
#{
#field(PREC, 4)
#field(INPA,"$(P)ddsa_phstep_h_ao CA")
#field(INPB,1048576)
#field(CALC,"A/B*2*PI")
#
#}
#
#record(ao,"$(P)ph2_4_static")
#{
#
#}
#
#record(calcout,"$(P)ph2_4_mean_degree")
#{
#field(INPA,"$(P)ph2_4_mean")
#field(INPB,"8.38190317153931e-08")      #360/2^32
#field(CALC,"A*B")
#}
#
#record(bo,"$(P)bt_do_freq_correction")
#{
#field(FLNK,"$(P)do_freq_correction")
#field(ZNAM,"Off")
#field(ONAM,"On")
#}
#
#record(seq,"$(P)do_freq_correction")
#{
#field(SELL,"$(P)ready_to_tune")
#field(SELM,"All")
#
#    field(DOL1,"$(P)calc_new_phstep_h PP")
#    field(LNK1,"$(P)ddsa_phstep_h_ao PP")
#
#    field(DOL2,"$(P)ph2_4_mean_degree PP")
#    field(LNK2,"$(P)ph2_4_static PP")
#    field(DLY2,"1")
#}
#
#record(calcout,"$(P)phase_diff")
#{
#field(INPA,"$(P)ph2_4_mean") # ai, has no INP
#field(INPB,"$(P)ph2_4_static PP")
#field(INPC,"8.38190317153931e-08")
#field(INPD,"360000")
## 360/2^32
#field(CALC,"((((A*C-B+540)*1000)%D)/1000-180)")
#field(SCAN,".2 second")
#}
#
#record(calcout,"$(P)freq_shift")
#{
#field(INPA,"$(P)ddsa_phstep_h_ao")
#field(INPB,"$(P)phase_diff")
#field(INPC,"$(P)rf_master") # Master RF enable
#field(INPD,"$(P)freq_loop_close PP") # Also a binary enable
#        field(INPE,"$(P)freq_loop_gain PP") # ao, but no indication of OUT 
#        field(CALC,"(A+(ABS(B)<40?B:0)*E*C*D)")
#field(SCAN,".2 second")
##field(TPRO,1)
#field(OUT,"$(P)ddsa_phstep_h_ao PP")
#}
#
##### End Adapted from ApexCalcs.db
#record(calc, "$(P)IFDES2MODULO")
#{
#field(INPA, "$(P)IFDES")
#field(CALC, "
#
#record(ai, "$(P)DIG_DSP_DDSA_MODULO_R")
#{
#    field( PINI, "NO")
#    field( DTYP, "asynInt32")
#    field( INP,  "@asyn($(PORT),0) DIG_DSP_DDSA_MODULO_R")
#    field( SCAN, "I/O Intr")
#    field( HOPR, "0x00000FFF")
#    field( LOPR, 0)
#field(PREC, 3)
#    info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
#}
#
#record(ai, "$(P)DIG_DSP_DDSA_PHSTEP_H_R")
#{
#    field( PINI, "NO")
#    field( DTYP, "asynInt32")
#    field( INP,  "@asyn($(PORT),0) DIG_DSP_DDSA_PHSTEP_H_R")
#    field( SCAN, "I/O Intr")
#    field( HOPR, "0x000FFFFF")
#    field( LOPR, 0)
#field(PREC, 3)
#    info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
#}
#
#record(ai, "$(P)DIG_DSP_DDSA_PHSTEP_L_R")
#{
#    field( PINI, "NO")
#    field( DTYP, "asynInt32")
#    field( INP,  "@asyn($(PORT),0) DIG_DSP_DDSA_PHSTEP_L_R")
#    field( SCAN, "I/O Intr")
#    field( HOPR, "0x00000FFF")
#    field( LOPR, 0)
#field(PREC, 3)
#    info( autosaveFields, "DESC HOPR LOPR HIHI HHSV HIGH HSV LOW LSV LOLO LLSV HYST ADEL MDEL")
#}
# Circle buffer "slow data"
#record(longin, "$(P)TRACE_DATA_CIRCLE_COUNT_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_CIRCLE_COUNT_R")
#  field(SCAN, "I/O Intr")
#}
#
#record(longin, "$(P)TRACE_DATA_CIRCLE_STAT_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_CIRCLE_STAT_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_TAG_NOW_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_TAG_NOW_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_TAG_OLD_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_TAG_OLD_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MIN0_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_MINS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MIN1_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),1) TRACE_DATA_MINS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MIN2_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),2) TRACE_DATA_MINS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MAX0_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_MAXS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MAX1_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),1) TRACE_DATA_MAXS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_MAX2_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),2) TRACE_DATA_MAXS_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_TIME_STAMP_HIGH_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_TIME_STAMP_HIGH_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(longin, "$(P)TRACE_DATA_TIME_STAMP_LOW_R") {
#  field(PINI, "NO")
#  field(DTYP, "asynInt32")
#  field(INP, "@asyn($(PORT),0) TRACE_DATA_TIME_STAMP_LOW_R")
#  field(SCAN, "I/O Intr")
#  info(autosaveFields, "HIHI HHSV HIGH HSV LOW LSV LOLO LLSV")
#}
#
#record(waveform, "$(P)TRACE_DATA_SLOW_DATA_R") {
#  field(DESC, "Slow data for shell 0 circle buff")
#  field(SCAN, "I/O Intr")
#  field(DTYP, "asynInt8ArrayIn")
#  field(EGU, "byte")
#  field(FTVL, "UCHAR")
#}

record(calcout, "$(P)TRACE_DATA_X_NUSE")
{
  field(DESC, "More channels = shorter waveforms")
  field(INPA, "$(P)TRACE_DATA_N_ACTIVE CPP")
  field(CALC, "8192/A")
  field(OUT, "$(P)TRACE_DATA_CALCX.NUSE PP")
}

record(ai, "$(P)TRACE_DATA_TIME_STEP") {
  field(DESC, "Time interval per data point")
  field(PINI, "NO")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)TRACE_DATA_TIME_STEP")
  field(SCAN, "I/O Intr")
  field(EGU, "s")
  field(DESC, "Waveform time step")
}

# Create an array of time coordinates in the specified units
record(acalcout, "$(P)TRACE_DATA_CALCX") {
  field(DESC, "x-axis times")
  field(CALC, "IX*A")
  field(INPA, "$(P)TRACE_DATA_TIME_STEP CPP")
  field(NELM, "8192")
  field(NUSE, "8192")
  field(PINI, "YES")
  field(SCAN, "Passive")
  field(EGU, "s")
  field(PREC, "5")
  field(OUT, "$(P)TRACE_DATA_X_AXIS PP")
}

record(waveform, "$(P)TRACE_DATA_X_AXIS") {
  field(DESC, "x-axis times")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(FTVL, "FLOAT")
  field(NELM, "8192")
  field(EGU, "s")
  field(PREC, "5")
}


# This record just writes a 1 to the bo record to make it go high,
# then low, whenever the number of channels changes.
record(calcout, "$(P)TRACE_DATA_UPDATE_PLOT_CALC") {
  field(INPA, "$(P)TRACE_DATA_DSP_CHAN_KEEP_W CP")
  field(OUT, "$(P)TRACE_DATA_UPDATE_PLOT PP")
  field(CALC, "1")
}
# The waveform displays use this record to know when to update parameters
record(bo, "$(P)TRACE_DATA_UPDATE_PLOT") {
  field(HIGH, "0.2")
}

#! Further lines contain data used by VisualDCT
#! View(1074,190,1.6)
#! Record("$(P)TRACE_DATA_N_ACTIVE",980,27,0,0,"$(P)TRACE_DATA_N_ACTIVE")
#! Record("$(P)CIRC_1_N_ACTIVE",1220,27,0,0,"$(P)CIRC_1_N_ACTIVE")
#! Record("$(P)IFACT",1460,27,0,0,"$(P)IFACT")
#! Record("$(P)IFDES",1700,10,0,0,"$(P)IFDES")
#! Record("$(P)TRACE_DATA_CIRCLE_COUNT_R",1940,27,0,0,"$(P)TRACE_DATA_CIRCLE_COUNT_R")
#! Record("$(P)TRACE_DATA_CIRCLE_STAT_R",2180,27,0,0,"$(P)TRACE_DATA_CIRCLE_STAT_R")
#! Record("$(P)TRACE_DATA_TAG_NOW_R",2420,27,0,0,"$(P)TRACE_DATA_TAG_NOW_R")
#! Record("$(P)TRACE_DATA_TAG_OLD_R",2660,27,0,0,"$(P)TRACE_DATA_TAG_OLD_R")
#! Record("$(P)TRACE_DATA_MIN0_R",2900,27,0,0,"$(P)TRACE_DATA_MIN0_R")
#! Record("$(P)TRACE_DATA_MIN1_R",3140,27,0,0,"$(P)TRACE_DATA_MIN1_R")
#! Record("$(P)TRACE_DATA_MIN2_R",3380,27,0,0,"$(P)TRACE_DATA_MIN2_R")
#! Record("$(P)TRACE_DATA_MAX0_R",3620,27,0,0,"$(P)TRACE_DATA_MAX0_R")
#! Record("$(P)TRACE_DATA_MAX1_R",3860,27,0,0,"$(P)TRACE_DATA_MAX1_R")
#! Record("$(P)TRACE_DATA_MAX2_R",4100,27,0,0,"$(P)TRACE_DATA_MAX2_R")
#! Record("$(P)TRACE_DATA_TIME_STAMP_HIGH_R",4340,27,0,0,"$(P)TRACE_DATA_TIME_STAMP_HIGH_R")
#! Record("$(P)TRACE_DATA_TIME_STAMP_LOW_R",4580,27,0,0,"$(P)TRACE_DATA_TIME_STAMP_LOW_R")
#! Record("$(P)TRACE_DATA_SLOW_DATA_R",20,374,0,0,"$(P)TRACE_DATA_SLOW_DATA_R")
#! Record("$(P)TRACE_DATA_TIME_STEP",260,379,0,0,"$(P)TRACE_DATA_TIME_STEP")
#! Field("$(P)TRACE_DATA_TIME_STEP.VAL",16777215,0,"$(P)TRACE_DATA_TIME_STEP.VAL")
#! Record("$(P)TRACE_DATA_CALCX",500,377,0,0,"$(P)TRACE_DATA_CALCX")
#! Field("$(P)TRACE_DATA_CALCX.INPA",16777215,0,"$(P)TRACE_DATA_CALCX.INPA")
#! Link("$(P)TRACE_DATA_CALCX.INPA","$(P)TRACE_DATA_TIME_STEP.VAL")
#! Field("$(P)TRACE_DATA_CALCX.OUT",16777215,1,"$(P)TRACE_DATA_CALCX.OUT")
#! Link("$(P)TRACE_DATA_CALCX.OUT","$(P)TRACE_DATA_X_AXIS.VAL")
#! Record("$(P)TRACE_DATA_X_AXIS",740,385,0,0,"$(P)TRACE_DATA_X_AXIS")
#! Field("$(P)TRACE_DATA_X_AXIS.VAL",16777215,1,"$(P)TRACE_DATA_X_AXIS.VAL")
#! Record("$(P)TRACE_DATA_UPDATE_PLOT",980,370,0,0,"$(P)TRACE_DATA_UPDATE_PLOT")
#! Record("$(P)SHELL_1_CIRCLE_COUNT_R",1220,387,0,0,"$(P)SHELL_1_CIRCLE_COUNT_R")
#! Record("$(P)SHELL_1_CIRCLE_STAT_R",1460,387,0,0,"$(P)SHELL_1_CIRCLE_STAT_R")
#! Record("$(P)SHELL_1_TAG_NOW_R",1700,387,0,0,"$(P)SHELL_1_TAG_NOW_R")
#! Record("$(P)SHELL_1_TAG_OLD_R",1940,387,0,0,"$(P)SHELL_1_TAG_OLD_R")
#! Record("$(P)SHELL_1_MIN0_R",2180,387,0,0,"$(P)SHELL_1_MIN0_R")
#! Record("$(P)SHELL_1_MIN1_R",2420,387,0,0,"$(P)SHELL_1_MIN1_R")
#! Record("$(P)SHELL_1_MIN2_R",2660,387,0,0,"$(P)SHELL_1_MIN2_R")
#! Record("$(P)SHELL_1_MAX0_R",2900,387,0,0,"$(P)SHELL_1_MAX0_R")
#! Record("$(P)SHELL_1_MAX1_R",3140,387,0,0,"$(P)SHELL_1_MAX1_R")
#! Record("$(P)SHELL_1_MAX2_R",3380,387,0,0,"$(P)SHELL_1_MAX2_R")
#! Record("$(P)SHELL_1_TIME_STAMP_HIGH_R",3620,387,0,0,"$(P)SHELL_1_TIME_STAMP_HIGH_R")
#! Record("$(P)SHELL_1_TIME_STAMP_LOW_R",3860,387,0,0,"$(P)SHELL_1_TIME_STAMP_LOW_R")
#! Record("$(P)SHELL_1_SLOW_DATA_R",4100,374,0,0,"$(P)SHELL_1_SLOW_DATA_R")
#! Record("$(P)SHELL_1_TIME_STEP",4340,379,0,0,"$(P)SHELL_1_TIME_STEP")
#! Field("$(P)SHELL_1_TIME_STEP.VAL",16777215,0,"$(P)SHELL_1_TIME_STEP.VAL")
#! Record("$(P)SHELL_1_CALCX",4580,377,0,0,"$(P)SHELL_1_CALCX")
#! Field("$(P)SHELL_1_CALCX.INPA",16777215,0,"$(P)SHELL_1_CALCX.INPA")
#! Link("$(P)SHELL_1_CALCX.INPA","$(P)SHELL_1_TIME_STEP.VAL")
#! Field("$(P)SHELL_1_CALCX.OUT",16777215,0,"$(P)SHELL_1_CALCX.OUT")
#! Link("$(P)SHELL_1_CALCX.OUT","$(P)SHELL_1_X_AXIS.VAL")
#! Record("$(P)SHELL_1_X_AXIS",20,745,0,0,"$(P)SHELL_1_X_AXIS")
#! Field("$(P)SHELL_1_X_AXIS.VAL",16777215,1,"$(P)SHELL_1_X_AXIS.VAL")
#! Record("$(P)SHELL_1_UPDATE_PLOT",260,744,0,0,"$(P)SHELL_1_UPDATE_PLOT")
#! Field("$(P)SHELL_1_UPDATE_PLOT.VAL",16777215,1,"$(P)SHELL_1_UPDATE_PLOT.VAL")
#! Record("$(P)TRACE_UPDATE_PLOT",500,735,0,0,"$(P)TRACE_UPDATE_PLOT")
#! Field("$(P)TRACE_UPDATE_PLOT.DOL",16777215,1,"$(P)TRACE_UPDATE_PLOT.DOL")
#! Record("$(P)SHELL_1_UPDATE_PLOT_CALC",0,4,0,1,"$(P)SHELL_1_UPDATE_PLOT_CALC")
#! Record("$(P)SHELL_1_UPDATE_PLOT_CALC",960,235,0,1,"$(P)SHELL_1_UPDATE_PLOT_CALC")
#! Field("$(P)SHELL_1_UPDATE_PLOT_CALC.DOL1",16777215,1,"$(P)SHELL_1_UPDATE_PLOT_CALC.DOL1")
#! Field("$(P)SHELL_1_UPDATE_PLOT_CALC.LNK1",16777215,0,"$(P)SHELL_1_UPDATE_PLOT_CALC.LNK1")
#! Link("$(P)SHELL_1_UPDATE_PLOT_CALC.LNK1","$(P)SHELL_1_UPDATE_PLOT.VAL")
