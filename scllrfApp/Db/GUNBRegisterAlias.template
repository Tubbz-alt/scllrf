alias( "$(P)TEST_W", "llrf$(N):test_ao")
alias( "$(P)KEEP_W", "llrf$(N):keep_ao")
alias( "$(P)LLSPI_W", "llrf$(N):llspi_ao")
alias( "$(P)U15_SPI_START_W", "llrf$(N):u15_spi_start_ao")
alias( "$(P)U15_SPI_READ_W", "llrf$(N):u15_spi_read_ao")
alias( "$(P)U15_SPI_ADDR_W", "llrf$(N):u15_spi_addr_ao")
alias( "$(P)SYNC_AD7794_CSET_W", "llrf$(N):sync_ad7794_cset_ao")
alias( "$(P)SYNC_TPS62210_CSET_W", "llrf$(N):sync_tps62210_cset_ao")
alias( "$(P)U18_SPI_START_W", "llrf$(N):u18_spi_start_ao")
alias( "$(P)U18_SPI_READ_W", "llrf$(N):u18_spi_read_ao")
alias( "$(P)U18_SPI_ADDR_W", "llrf$(N):u18_spi_addr_ao")
alias( "$(P)U15_SPI_DATA_W", "llrf$(N):u15_spi_data_ao")
alias( "$(P)U18_SPI_DATA_W", "llrf$(N):u18_spi_data_ao")
alias( "$(P)SCANNER_DEBUG_SEL_W", "llrf$(N):scanner_debug_sel_ao")
alias( "$(P)SCANNER_DEBUG_ADDR_W", "llrf$(N):scanner_debug_addr_ao")
alias( "$(P)U2_BITSLIP_W", "llrf$(N):u2_bitslip_ao")
alias( "$(P)U3_BITSLIP_W", "llrf$(N):u3_bitslip_ao")
alias( "$(P)ADC_MMCM_PSEN_W", "llrf$(N):adc_mmcm_psen_ao")
alias( "$(P)PHASE_STEP_H_W", "llrf$(N):phase_step_h_ao")
alias( "$(P)PHASE_STEP_L_W", "llrf$(N):phase_step_l_ao")
alias( "$(P)MODULO_W", "llrf$(N):modulo_ao")
alias( "$(P)AMPI_W", "llrf$(N):ampi_ao")
alias( "$(P)AMPQ_W", "llrf$(N):ampq_ao")
alias( "$(P)RF_GO_W", "llrf$(N):rf_go_ao")
alias( "$(P)PULSE_BOUNDARY_W", "llrf$(N):pulse_boundary_ao")
alias( "$(P)MON_LASER_SEL_W", "llrf$(N):mon_laser_sel_ao")
alias( "$(P)CH_KEEP_W", "llrf$(N):ch_keep_ao")
alias( "$(P)WAVE_SAMP_PER_W", "llrf$(N):wave_samp_per_ao")
alias( "$(P)WAVE_SHIFT_W", "llrf$(N):wave_shift_ao")
alias( "$(P)DECAY_SAMP_PER_W", "llrf$(N):decay_samp_per_ao")
alias( "$(P)LASER_SAMP_PER_W", "llrf$(N):laser_samp_per_ao")
alias( "$(P)DDSA_MODULO_W", "llrf$(N):ddsa_modulo_ao")
alias( "$(P)DDSA_PHSTEP_H_W", "llrf$(N):ddsa_phstep_h_ao")
alias( "$(P)DDSA_PHSTEP_L_W", "llrf$(N):ddsa_phstep_l_ao")
alias( "$(P)REP_PERIOD_W", "llrf$(N):rep_period_ao")
alias( "$(P)PULSE_LENGTH_W", "llrf$(N):pulse_length_ao")
alias( "$(P)SOURCE_RE_W", "llrf$(N):source_re_ao")
alias( "$(P)SOURCE_IM_W", "llrf$(N):source_im_ao")
alias( "$(P)CLOSE_LOOP_W", "llrf$(N):close_loop_ao")
alias( "$(P)CHASSIS_W", "llrf$(N):chassis_ao")
alias( "$(P)AB_COEFF_W", "llrf$(N):ab_coeff_ao")
alias( "$(P)INLK_MODE_1_W", "llrf$(N):inlk_mode_1_ao")
alias( "$(P)INLK_MODE_2_W", "llrf$(N):inlk_mode_2_ao")
alias( "$(P)INLK_MODE_3_W", "llrf$(N):inlk_mode_3_ao")
alias( "$(P)INLK_MODE_4_W", "llrf$(N):inlk_mode_4_ao")
alias( "$(P)THRESH_NOISE_W", "llrf$(N):thresh_noise_ao")
alias( "$(P)THRESH_INIT_W", "llrf$(N):thresh_init_ao")
alias( "$(P)DECAY_COEF_W", "llrf$(N):decay_coef_ao")
alias( "$(P)DDSB_MODULO_W", "llrf$(N):ddsb_modulo_ao")
alias( "$(P)DDSB_PHSTEP_H_W", "llrf$(N):ddsb_phstep_h_ao")
alias( "$(P)DDSB_PHSTEP_L_W", "llrf$(N):ddsb_phstep_l_ao")
alias( "$(P)SET_PLOOP_RE_W", "llrf$(N):set_ploop_re_ao")
alias( "$(P)SET_PLOOP_IM_W", "llrf$(N):set_ploop_im_ao")
alias( "$(P)GAINP_ALPHA_W", "llrf$(N):gainp_alpha_ao")
alias( "$(P)GAINP_BETA_W", "llrf$(N):gainp_beta_ao")
alias( "$(P)XY_CTL_W", "llrf$(N):xy_ctl_ao")
alias( "$(P)PROBECHAN_W", "llrf$(N):probechan_ao")
alias( "$(P)PHDELAY_W", "llrf$(N):phdelay_ao")
alias( "$(P)XSEL_W", "llrf$(N):xsel_ao")
alias( "$(P)DECAY_CH_SEL_W", "llrf$(N):decay_ch_sel_ao")
alias( "$(P)DECAYKEEP_W", "llrf$(N):decaykeep_ao")
alias( "$(P)AUXSEL_W", "llrf$(N):auxsel_ao")
alias( "$(P)RFSUPLOX1_W", "llrf$(N):rfsuplox1_ao")
alias( "$(P)RFSUPLOY1_W", "llrf$(N):rfsuploy1_ao")
alias( "$(P)RFSUPLOX2_W", "llrf$(N):rfsuplox2_ao")
alias( "$(P)RFSUPLOY2_W", "llrf$(N):rfsuploy2_ao")
alias( "$(P)PHROT_W", "llrf$(N):phrot_ao")
alias( "$(P)FDBKSEL_W", "llrf$(N):fdbksel_ao")
alias( "$(P)FOLLOWPRL_W", "llrf$(N):followprl_ao")
alias( "$(P)INTERLOCKTEST_W", "llrf$(N):interlocktest_ao")
alias( "$(P)FDBK_CLIPV_W", "llrf$(N):fdbk_clipv_ao")
alias( "$(P)RFSONLY_W", "llrf$(N):rfsonly_ao")
alias( "$(P)FWDSEL_W", "llrf$(N):fwdsel_ao")
alias( "$(P)BANYAN_MASK_W", "llrf$(N):banyan_mask_ao")
alias( "$(P)BANYAN_MASK_BITS_W", "llrf$(N):banyan_mask_bits_ao")
alias( "$(P)BANYAN_RESET_W", "llrf$(N):banyan_reset_ao")
alias( "$(P)BANYAN_RESET_BITS_W", "llrf$(N):banyan_reset_bits_ao")
alias( "$(P)BUF_TRIG_W", "llrf$(N):buf_trig_ao")
alias( "$(P)BUF_TRIG_BITS_W", "llrf$(N):buf_trig_bits_ao")
alias( "$(P)TRACE_RESET_W", "llrf$(N):trace_reset_ao")
alias( "$(P)TRACE_RESET_BITS_W", "llrf$(N):trace_reset_bits_ao")
alias( "$(P)TRIG_INTERNAL_W", "llrf$(N):trig_internal_ao")
alias( "$(P)TRIG_INTERNAL_BITS_W", "llrf$(N):trig_internal_bits_ao")
alias( "$(P)U2_CLK_RESET_W", "llrf$(N):u2_clk_reset_ao")
alias( "$(P)U2_CLK_RESET_BITS_W", "llrf$(N):u2_clk_reset_bits_ao")
alias( "$(P)U3_CLK_RESET_W", "llrf$(N):u3_clk_reset_ao")
alias( "$(P)U3_CLK_RESET_BITS_W", "llrf$(N):u3_clk_reset_bits_ao")
alias( "$(P)IDELAYCTRL_RESET_W", "llrf$(N):idelayctrl_reset_ao")
alias( "$(P)IDELAYCTRL_RESET_BITS_W", "llrf$(N):idelayctrl_reset_bits_ao")
alias( "$(P)U2_ISERDES_RESET_R_W", "llrf$(N):u2_iserdes_reset_r_ao")
alias( "$(P)U2_ISERDES_RESET_R_BITS_W", "llrf$(N):u2_iserdes_reset_r_bits_ao")
alias( "$(P)U3_ISERDES_RESET_R_W", "llrf$(N):u3_iserdes_reset_r_ao")
alias( "$(P)U3_ISERDES_RESET_R_BITS_W", "llrf$(N):u3_iserdes_reset_r_bits_ao")
alias( "$(P)U4_RESET_IN_W", "llrf$(N):u4_reset_in_ao")
alias( "$(P)U4_RESET_IN_BITS_W", "llrf$(N):u4_reset_in_bits_ao")
alias( "$(P)SCANNER_SCAN_TRIGGER_W", "llrf$(N):scanner_scan_trigger_ao")
alias( "$(P)SCANNER_SCAN_TRIGGER_BITS_W", "llrf$(N):scanner_scan_trigger_bits_ao")
alias( "$(P)SCANNER_AUTOSET_ENABLE_W", "llrf$(N):scanner_autoset_enable_ao")
alias( "$(P)SCANNER_AUTOSET_ENABLE_BITS_W", "llrf$(N):scanner_autoset_enable_bits_ao")
alias( "$(P)MMCM_RESET_W", "llrf$(N):mmcm_reset_ao")
alias( "$(P)MMCM_RESET_BITS_W", "llrf$(N):mmcm_reset_bits_ao")
alias( "$(P)DDS_RESET_W", "llrf$(N):dds_reset_ao")
alias( "$(P)DDS_RESET_BITS_W", "llrf$(N):dds_reset_bits_ao")
alias( "$(P)EXT_TRIG_SEL_W", "llrf$(N):ext_trig_sel_ao")
alias( "$(P)EXT_TRIG_SEL_BITS_W", "llrf$(N):ext_trig_sel_bits_ao")
alias( "$(P)RESET_INLK_1_W", "llrf$(N):reset_inlk_1_ao")
alias( "$(P)RESET_INLK_1_BITS_W", "llrf$(N):reset_inlk_1_bits_ao")
alias( "$(P)RESET_INLK_2_W", "llrf$(N):reset_inlk_2_ao")
alias( "$(P)RESET_INLK_2_BITS_W", "llrf$(N):reset_inlk_2_bits_ao")
alias( "$(P)RESET_INLK_3_W", "llrf$(N):reset_inlk_3_ao")
alias( "$(P)RESET_INLK_3_BITS_W", "llrf$(N):reset_inlk_3_bits_ao")
alias( "$(P)RESET_INLK_4_W", "llrf$(N):reset_inlk_4_ao")
alias( "$(P)RESET_INLK_4_BITS_W", "llrf$(N):reset_inlk_4_bits_ao")
alias( "$(P)SLOW_RESET_W", "llrf$(N):slow_reset_ao")
alias( "$(P)SLOW_RESET_BITS_W", "llrf$(N):slow_reset_bits_ao")
alias( "$(P)DECAY_RESET_W", "llrf$(N):decay_reset_ao")
alias( "$(P)DECAY_RESET_BITS_W", "llrf$(N):decay_reset_bits_ao")
alias( "$(P)FIBER_RESET_W", "llrf$(N):fiber_reset_ao")
alias( "$(P)FIBER_RESET_BITS_W", "llrf$(N):fiber_reset_bits_ao")
alias( "$(P)PERMIT2_MASK_W", "llrf$(N):permit2_mask_ao")
alias( "$(P)PERMIT2_MASK_BITS_W", "llrf$(N):permit2_mask_bits_ao")
alias( "$(P)ABUF_RESET_W", "llrf$(N):abuf_reset_ao")
alias( "$(P)ABUF_RESET_BITS_W", "llrf$(N):abuf_reset_bits_ao")
alias( "$(P)CRCERRCNTRESET_W", "llrf$(N):crcerrcntreset_ao")
alias( "$(P)CRCERRCNTRESET_BITS_W", "llrf$(N):crcerrcntreset_bits_ao")
alias( "$(P)RAMTEST_W", "llrf$(N):ramtest_ao")
alias( "$(P)SCANNER_W", "llrf$(N):scanner_ao")
alias( "$(P)V_THRESH_W", "llrf$(N):v_thresh_ao")
alias( "$(P)TEST_W", "llrf$(N):test_bo")
alias( "$(P)KEEP_W", "llrf$(N):keep_bo")
alias( "$(P)LLSPI_W", "llrf$(N):llspi_bo")
alias( "$(P)U15_SPI_START_W", "llrf$(N):u15_spi_start_bo")
alias( "$(P)U15_SPI_READ_W", "llrf$(N):u15_spi_read_bo")
alias( "$(P)U15_SPI_ADDR_W", "llrf$(N):u15_spi_addr_bo")
alias( "$(P)SYNC_AD7794_CSET_W", "llrf$(N):sync_ad7794_cset_bo")
alias( "$(P)SYNC_TPS62210_CSET_W", "llrf$(N):sync_tps62210_cset_bo")
alias( "$(P)U18_SPI_START_W", "llrf$(N):u18_spi_start_bo")
alias( "$(P)U18_SPI_READ_W", "llrf$(N):u18_spi_read_bo")
alias( "$(P)U18_SPI_ADDR_W", "llrf$(N):u18_spi_addr_bo")
alias( "$(P)U15_SPI_DATA_W", "llrf$(N):u15_spi_data_bo")
alias( "$(P)U18_SPI_DATA_W", "llrf$(N):u18_spi_data_bo")
alias( "$(P)SCANNER_DEBUG_SEL_W", "llrf$(N):scanner_debug_sel_bo")
alias( "$(P)SCANNER_DEBUG_ADDR_W", "llrf$(N):scanner_debug_addr_bo")
alias( "$(P)U2_BITSLIP_W", "llrf$(N):u2_bitslip_bo")
alias( "$(P)U3_BITSLIP_W", "llrf$(N):u3_bitslip_bo")
alias( "$(P)ADC_MMCM_PSEN_W", "llrf$(N):adc_mmcm_psen_bo")
alias( "$(P)PHASE_STEP_H_W", "llrf$(N):phase_step_h_bo")
alias( "$(P)PHASE_STEP_L_W", "llrf$(N):phase_step_l_bo")
alias( "$(P)MODULO_W", "llrf$(N):modulo_bo")
alias( "$(P)AMPI_W", "llrf$(N):ampi_bo")
alias( "$(P)AMPQ_W", "llrf$(N):ampq_bo")
alias( "$(P)RF_GO_W", "llrf$(N):rf_go_bo")
alias( "$(P)PULSE_BOUNDARY_W", "llrf$(N):pulse_boundary_bo")
alias( "$(P)MON_LASER_SEL_W", "llrf$(N):mon_laser_sel_bo")
alias( "$(P)CH_KEEP_W", "llrf$(N):ch_keep_bo")
alias( "$(P)WAVE_SAMP_PER_W", "llrf$(N):wave_samp_per_bo")
alias( "$(P)WAVE_SHIFT_W", "llrf$(N):wave_shift_bo")
alias( "$(P)DECAY_SAMP_PER_W", "llrf$(N):decay_samp_per_bo")
alias( "$(P)LASER_SAMP_PER_W", "llrf$(N):laser_samp_per_bo")
alias( "$(P)DDSA_MODULO_W", "llrf$(N):ddsa_modulo_bo")
alias( "$(P)DDSA_PHSTEP_H_W", "llrf$(N):ddsa_phstep_h_bo")
alias( "$(P)DDSA_PHSTEP_L_W", "llrf$(N):ddsa_phstep_l_bo")
alias( "$(P)REP_PERIOD_W", "llrf$(N):rep_period_bo")
alias( "$(P)PULSE_LENGTH_W", "llrf$(N):pulse_length_bo")
alias( "$(P)SOURCE_RE_W", "llrf$(N):source_re_bo")
alias( "$(P)SOURCE_IM_W", "llrf$(N):source_im_bo")
alias( "$(P)CLOSE_LOOP_W", "llrf$(N):close_loop_bo")
alias( "$(P)CHASSIS_W", "llrf$(N):chassis_bo")
alias( "$(P)AB_COEFF_W", "llrf$(N):ab_coeff_bo")
alias( "$(P)INLK_MODE_1_W", "llrf$(N):inlk_mode_1_bo")
alias( "$(P)INLK_MODE_2_W", "llrf$(N):inlk_mode_2_bo")
alias( "$(P)INLK_MODE_3_W", "llrf$(N):inlk_mode_3_bo")
alias( "$(P)INLK_MODE_4_W", "llrf$(N):inlk_mode_4_bo")
alias( "$(P)THRESH_NOISE_W", "llrf$(N):thresh_noise_bo")
alias( "$(P)THRESH_INIT_W", "llrf$(N):thresh_init_bo")
alias( "$(P)DECAY_COEF_W", "llrf$(N):decay_coef_bo")
alias( "$(P)DDSB_MODULO_W", "llrf$(N):ddsb_modulo_bo")
alias( "$(P)DDSB_PHSTEP_H_W", "llrf$(N):ddsb_phstep_h_bo")
alias( "$(P)DDSB_PHSTEP_L_W", "llrf$(N):ddsb_phstep_l_bo")
alias( "$(P)SET_PLOOP_RE_W", "llrf$(N):set_ploop_re_bo")
alias( "$(P)SET_PLOOP_IM_W", "llrf$(N):set_ploop_im_bo")
alias( "$(P)GAINP_ALPHA_W", "llrf$(N):gainp_alpha_bo")
alias( "$(P)GAINP_BETA_W", "llrf$(N):gainp_beta_bo")
alias( "$(P)XY_CTL_W", "llrf$(N):xy_ctl_bo")
alias( "$(P)PROBECHAN_W", "llrf$(N):probechan_bo")
alias( "$(P)PHDELAY_W", "llrf$(N):phdelay_bo")
alias( "$(P)XSEL_W", "llrf$(N):xsel_bo")
alias( "$(P)DECAY_CH_SEL_W", "llrf$(N):decay_ch_sel_bo")
alias( "$(P)DECAYKEEP_W", "llrf$(N):decaykeep_bo")
alias( "$(P)AUXSEL_W", "llrf$(N):auxsel_bo")
alias( "$(P)RFSUPLOX1_W", "llrf$(N):rfsuplox1_bo")
alias( "$(P)RFSUPLOY1_W", "llrf$(N):rfsuploy1_bo")
alias( "$(P)RFSUPLOX2_W", "llrf$(N):rfsuplox2_bo")
alias( "$(P)RFSUPLOY2_W", "llrf$(N):rfsuploy2_bo")
alias( "$(P)PHROT_W", "llrf$(N):phrot_bo")
alias( "$(P)FDBKSEL_W", "llrf$(N):fdbksel_bo")
alias( "$(P)FOLLOWPRL_W", "llrf$(N):followprl_bo")
alias( "$(P)INTERLOCKTEST_W", "llrf$(N):interlocktest_bo")
alias( "$(P)FDBK_CLIPV_W", "llrf$(N):fdbk_clipv_bo")
alias( "$(P)RFSONLY_W", "llrf$(N):rfsonly_bo")
alias( "$(P)FWDSEL_W", "llrf$(N):fwdsel_bo")
alias( "$(P)BANYAN_MASK_W", "llrf$(N):banyan_mask_bo")
alias( "$(P)BANYAN_MASK_BITS_W", "llrf$(N):banyan_mask_bits_bo")
alias( "$(P)BANYAN_RESET_W", "llrf$(N):banyan_reset_bo")
alias( "$(P)BANYAN_RESET_BITS_W", "llrf$(N):banyan_reset_bits_bo")
alias( "$(P)BUF_TRIG_W", "llrf$(N):buf_trig_bo")
alias( "$(P)BUF_TRIG_BITS_W", "llrf$(N):buf_trig_bits_bo")
alias( "$(P)TRACE_RESET_W", "llrf$(N):trace_reset_bo")
alias( "$(P)TRACE_RESET_BITS_W", "llrf$(N):trace_reset_bits_bo")
alias( "$(P)TRIG_INTERNAL_W", "llrf$(N):trig_internal_bo")
alias( "$(P)TRIG_INTERNAL_BITS_W", "llrf$(N):trig_internal_bits_bo")
alias( "$(P)U2_CLK_RESET_W", "llrf$(N):u2_clk_reset_bo")
alias( "$(P)U2_CLK_RESET_BITS_W", "llrf$(N):u2_clk_reset_bits_bo")
alias( "$(P)U3_CLK_RESET_W", "llrf$(N):u3_clk_reset_bo")
alias( "$(P)U3_CLK_RESET_BITS_W", "llrf$(N):u3_clk_reset_bits_bo")
alias( "$(P)IDELAYCTRL_RESET_W", "llrf$(N):idelayctrl_reset_bo")
alias( "$(P)IDELAYCTRL_RESET_BITS_W", "llrf$(N):idelayctrl_reset_bits_bo")
alias( "$(P)U2_ISERDES_RESET_R_W", "llrf$(N):u2_iserdes_reset_r_bo")
alias( "$(P)U2_ISERDES_RESET_R_BITS_W", "llrf$(N):u2_iserdes_reset_r_bits_bo")
alias( "$(P)U3_ISERDES_RESET_R_W", "llrf$(N):u3_iserdes_reset_r_bo")
alias( "$(P)U3_ISERDES_RESET_R_BITS_W", "llrf$(N):u3_iserdes_reset_r_bits_bo")
alias( "$(P)U4_RESET_IN_W", "llrf$(N):u4_reset_in_bo")
alias( "$(P)U4_RESET_IN_BITS_W", "llrf$(N):u4_reset_in_bits_bo")
alias( "$(P)SCANNER_SCAN_TRIGGER_W", "llrf$(N):scanner_scan_trigger_bo")
alias( "$(P)SCANNER_SCAN_TRIGGER_BITS_W", "llrf$(N):scanner_scan_trigger_bits_bo")
alias( "$(P)SCANNER_AUTOSET_ENABLE_W", "llrf$(N):scanner_autoset_enable_bo")
alias( "$(P)SCANNER_AUTOSET_ENABLE_BITS_W", "llrf$(N):scanner_autoset_enable_bits_bo")
alias( "$(P)MMCM_RESET_W", "llrf$(N):mmcm_reset_bo")
alias( "$(P)MMCM_RESET_BITS_W", "llrf$(N):mmcm_reset_bits_bo")
alias( "$(P)DDS_RESET_W", "llrf$(N):dds_reset_bo")
alias( "$(P)DDS_RESET_BITS_W", "llrf$(N):dds_reset_bits_bo")
alias( "$(P)EXT_TRIG_SEL_W", "llrf$(N):ext_trig_sel_bo")
alias( "$(P)EXT_TRIG_SEL_BITS_W", "llrf$(N):ext_trig_sel_bits_bo")
alias( "$(P)RESET_INLK_1_W", "llrf$(N):reset_inlk_1_bo")
alias( "$(P)RESET_INLK_1_BITS_W", "llrf$(N):reset_inlk_1_bits_bo")
alias( "$(P)RESET_INLK_2_W", "llrf$(N):reset_inlk_2_bo")
alias( "$(P)RESET_INLK_2_BITS_W", "llrf$(N):reset_inlk_2_bits_bo")
alias( "$(P)RESET_INLK_3_W", "llrf$(N):reset_inlk_3_bo")
alias( "$(P)RESET_INLK_3_BITS_W", "llrf$(N):reset_inlk_3_bits_bo")
alias( "$(P)RESET_INLK_4_W", "llrf$(N):reset_inlk_4_bo")
alias( "$(P)RESET_INLK_4_BITS_W", "llrf$(N):reset_inlk_4_bits_bo")
alias( "$(P)SLOW_RESET_W", "llrf$(N):slow_reset_bo")
alias( "$(P)SLOW_RESET_BITS_W", "llrf$(N):slow_reset_bits_bo")
alias( "$(P)DECAY_RESET_W", "llrf$(N):decay_reset_bo")
alias( "$(P)DECAY_RESET_BITS_W", "llrf$(N):decay_reset_bits_bo")
alias( "$(P)FIBER_RESET_W", "llrf$(N):fiber_reset_bo")
alias( "$(P)FIBER_RESET_BITS_W", "llrf$(N):fiber_reset_bits_bo")
alias( "$(P)PERMIT2_MASK_W", "llrf$(N):permit2_mask_bo")
alias( "$(P)PERMIT2_MASK_BITS_W", "llrf$(N):permit2_mask_bits_bo")
alias( "$(P)ABUF_RESET_W", "llrf$(N):abuf_reset_bo")
alias( "$(P)ABUF_RESET_BITS_W", "llrf$(N):abuf_reset_bits_bo")
alias( "$(P)CRCERRCNTRESET_W", "llrf$(N):crcerrcntreset_bo")
alias( "$(P)CRCERRCNTRESET_BITS_W", "llrf$(N):crcerrcntreset_bits_bo")
alias( "$(P)RAMTEST_W", "llrf$(N):ramtest_bo")
alias( "$(P)SCANNER_W", "llrf$(N):scanner_bo")
alias( "$(P)V_THRESH_W", "llrf$(N):v_thresh_bo")
alias( "$(P)TEST_R", "llrf$(N):test")
alias( "$(P)GET_TEST_R", "llrf$(N):get_test")
alias( "$(P)KEEP_R", "llrf$(N):keep")
alias( "$(P)GET_KEEP_R", "llrf$(N):get_keep")
alias( "$(P)LLSPI_R", "llrf$(N):llspi")
alias( "$(P)GET_LLSPI_R", "llrf$(N):get_llspi")
alias( "$(P)LLSPI_RESULT_R", "llrf$(N):llspi_result")
alias( "$(P)GET_LLSPI_RESULT_R", "llrf$(N):get_llspi_result")
alias( "$(P)CLKCNT_R", "llrf$(N):clkcnt")
alias( "$(P)GET_CLKCNT_R", "llrf$(N):get_clkcnt")
alias( "$(P)FREQUENCY_4XOUT_R", "llrf$(N):frequency_4xout")
alias( "$(P)GET_FREQUENCY_4XOUT_R", "llrf$(N):get_frequency_4xout")
alias( "$(P)FREQUENCY_ADC_R", "llrf$(N):frequency_adc")
alias( "$(P)GET_FREQUENCY_ADC_R", "llrf$(N):get_frequency_adc")
alias( "$(P)FREQUENCY_CLKOUT3_R", "llrf$(N):frequency_clkout3")
alias( "$(P)GET_FREQUENCY_CLKOUT3_R", "llrf$(N):get_frequency_clkout3")
alias( "$(P)FREQUENCY_DAC_DCO_R", "llrf$(N):frequency_dac_dco")
alias( "$(P)GET_FREQUENCY_DAC_DCO_R", "llrf$(N):get_frequency_dac_dco")
alias( "$(P)U15_SPI_RDBK_R", "llrf$(N):u15_spi_rdbk")
alias( "$(P)GET_U15_SPI_RDBK_R", "llrf$(N):get_u15_spi_rdbk")
alias( "$(P)U15_SPI_READY_R", "llrf$(N):u15_spi_ready")
alias( "$(P)GET_U15_SPI_READY_R", "llrf$(N):get_u15_spi_ready")
alias( "$(P)U18_SPI_RDBK_R", "llrf$(N):u18_spi_rdbk")
alias( "$(P)GET_U18_SPI_RDBK_R", "llrf$(N):get_u18_spi_rdbk")
alias( "$(P)U18_SPI_READY_R", "llrf$(N):u18_spi_ready")
alias( "$(P)GET_U18_SPI_READY_R", "llrf$(N):get_u18_spi_ready")
alias( "$(P)U18_SDO_ADDR_R", "llrf$(N):u18_sdo_addr")
alias( "$(P)GET_U18_SDO_ADDR_R", "llrf$(N):get_u18_sdo_addr")
alias( "$(P)U15_SDO_ADDR_R", "llrf$(N):u15_sdo_addr")
alias( "$(P)GET_U15_SDO_ADDR_R", "llrf$(N):get_u15_sdo_addr")
alias( "$(P)U2_DOUT_R", "llrf$(N):u2_dout")
alias( "$(P)GET_U2_DOUT_R", "llrf$(N):get_u2_dout")
alias( "$(P)U3_DOUT_R", "llrf$(N):u3_dout")
alias( "$(P)GET_U3_DOUT_R", "llrf$(N):get_u3_dout")
alias( "$(P)FREQUENCY_ADC2_R", "llrf$(N):frequency_adc2")
alias( "$(P)GET_FREQUENCY_ADC2_R", "llrf$(N):get_frequency_adc2")
alias( "$(P)DDSA_MODULO_R", "llrf$(N):ddsa_modulo")
alias( "$(P)GET_DDSA_MODULO_R", "llrf$(N):get_ddsa_modulo")
alias( "$(P)DDSA_PHSTEP_H_R", "llrf$(N):ddsa_phstep_h")
alias( "$(P)GET_DDSA_PHSTEP_H_R", "llrf$(N):get_ddsa_phstep_h")
alias( "$(P)DDSA_PHSTEP_L_R", "llrf$(N):ddsa_phstep_l")
alias( "$(P)GET_DDSA_PHSTEP_L_R", "llrf$(N):get_ddsa_phstep_l")
alias( "$(P)SOURCE_RE_R", "llrf$(N):source_re")
alias( "$(P)GET_SOURCE_RE_R", "llrf$(N):get_source_re")
alias( "$(P)SOURCE_IM_R", "llrf$(N):source_im")
alias( "$(P)GET_SOURCE_IM_R", "llrf$(N):get_source_im")
alias( "$(P)ADC1_MAX_R", "llrf$(N):adc1_max")
alias( "$(P)GET_ADC1_MAX_R", "llrf$(N):get_adc1_max")
alias( "$(P)ADC2_MAX_R", "llrf$(N):adc2_max")
alias( "$(P)GET_ADC2_MAX_R", "llrf$(N):get_adc2_max")
alias( "$(P)ADC3_MAX_R", "llrf$(N):adc3_max")
alias( "$(P)GET_ADC3_MAX_R", "llrf$(N):get_adc3_max")
alias( "$(P)ADC4_MAX_R", "llrf$(N):adc4_max")
alias( "$(P)GET_ADC4_MAX_R", "llrf$(N):get_adc4_max")
alias( "$(P)ADC1_MIN_R", "llrf$(N):adc1_min")
alias( "$(P)GET_ADC1_MIN_R", "llrf$(N):get_adc1_min")
alias( "$(P)ADC2_MIN_R", "llrf$(N):adc2_min")
alias( "$(P)GET_ADC2_MIN_R", "llrf$(N):get_adc2_min")
alias( "$(P)ADC3_MIN_R", "llrf$(N):adc3_min")
alias( "$(P)GET_ADC3_MIN_R", "llrf$(N):get_adc3_min")
alias( "$(P)ADC4_MIN_R", "llrf$(N):adc4_min")
alias( "$(P)GET_ADC4_MIN_R", "llrf$(N):get_adc4_min")
alias( "$(P)COUNTER_R", "llrf$(N):counter")
alias( "$(P)GET_COUNTER_R", "llrf$(N):get_counter")
alias( "$(P)ADC5_MAX_R", "llrf$(N):adc5_max")
alias( "$(P)GET_ADC5_MAX_R", "llrf$(N):get_adc5_max")
alias( "$(P)ADC6_MAX_R", "llrf$(N):adc6_max")
alias( "$(P)GET_ADC6_MAX_R", "llrf$(N):get_adc6_max")
alias( "$(P)ADC7_MAX_R", "llrf$(N):adc7_max")
alias( "$(P)GET_ADC7_MAX_R", "llrf$(N):get_adc7_max")
alias( "$(P)ADC8_MAX_R", "llrf$(N):adc8_max")
alias( "$(P)GET_ADC8_MAX_R", "llrf$(N):get_adc8_max")
alias( "$(P)ADC5_MIN_R", "llrf$(N):adc5_min")
alias( "$(P)GET_ADC5_MIN_R", "llrf$(N):get_adc5_min")
alias( "$(P)ADC6_MIN_R", "llrf$(N):adc6_min")
alias( "$(P)GET_ADC6_MIN_R", "llrf$(N):get_adc6_min")
alias( "$(P)ADC7_MIN_R", "llrf$(N):adc7_min")
alias( "$(P)GET_ADC7_MIN_R", "llrf$(N):get_adc7_min")
alias( "$(P)ADC8_MIN_R", "llrf$(N):adc8_min")
alias( "$(P)GET_ADC8_MIN_R", "llrf$(N):get_adc8_min")
alias( "$(P)PHDELAY_R", "llrf$(N):phdelay")
alias( "$(P)GET_PHDELAY_R", "llrf$(N):get_phdelay")
alias( "$(P)VOUTXFALL_R", "llrf$(N):voutxfall")
alias( "$(P)GET_VOUTXFALL_R", "llrf$(N):get_voutxfall")
alias( "$(P)VOUTYFALL_R", "llrf$(N):voutyfall")
alias( "$(P)GET_VOUTYFALL_R", "llrf$(N):get_voutyfall")
alias( "$(P)SYNCVAL_R", "llrf$(N):syncval")
alias( "$(P)GET_SYNCVAL_R", "llrf$(N):get_syncval")
alias( "$(P)SYNCTX_R", "llrf$(N):synctx")
alias( "$(P)GET_SYNCTX_R", "llrf$(N):get_synctx")
alias( "$(P)PHREF_R", "llrf$(N):phref")
alias( "$(P)GET_PHREF_R", "llrf$(N):get_phref")
alias( "$(P)REPREMAINDER_R", "llrf$(N):repremainder")
alias( "$(P)GET_REPREMAINDER_R", "llrf$(N):get_repremainder")
alias( "$(P)CRCERRORCNT_R", "llrf$(N):crcerrorcnt")
alias( "$(P)GET_CRCERRORCNT_R", "llrf$(N):get_crcerrorcnt")
alias( "$(P)CRCPASS_R", "llrf$(N):crcpass")
alias( "$(P)GET_CRCPASS_R", "llrf$(N):get_crcpass")
alias( "$(P)BANYAN_MASK_R", "llrf$(N):banyan_mask")
alias( "$(P)BANYAN_MASK_BITS_R", "llrf$(N):banyan_mask_bits")
alias( "$(P)GET_BANYAN_MASK_R", "llrf$(N):get_banyan_mask")
alias( "$(P)BANYAN_STATUS_R", "llrf$(N):banyan_status")
alias( "$(P)BANYAN_STATUS_BITS_R", "llrf$(N):banyan_status_bits")
alias( "$(P)GET_BANYAN_STATUS_R", "llrf$(N):get_banyan_status")
alias( "$(P)TRACE_STATUS1_R", "llrf$(N):trace_status1")
alias( "$(P)TRACE_STATUS1_BITS_R", "llrf$(N):trace_status1_bits")
alias( "$(P)GET_TRACE_STATUS1_R", "llrf$(N):get_trace_status1")
alias( "$(P)TRACE_STATUS2_R", "llrf$(N):trace_status2")
alias( "$(P)TRACE_STATUS2_BITS_R", "llrf$(N):trace_status2_bits")
alias( "$(P)GET_TRACE_STATUS2_R", "llrf$(N):get_trace_status2")
alias( "$(P)LLSPI_STATUS_R", "llrf$(N):llspi_status")
alias( "$(P)LLSPI_STATUS_BITS_R", "llrf$(N):llspi_status_bits")
alias( "$(P)GET_LLSPI_STATUS_R", "llrf$(N):get_llspi_status")
alias( "$(P)U4_RESET_IN_R", "llrf$(N):u4_reset_in")
alias( "$(P)U4_RESET_IN_BITS_R", "llrf$(N):u4_reset_in_bits")
alias( "$(P)GET_U4_RESET_IN_R", "llrf$(N):get_u4_reset_in")
alias( "$(P)INLK_STATUS_R", "llrf$(N):inlk_status")
alias( "$(P)INLK_STATUS_BITS_R", "llrf$(N):inlk_status_bits")
alias( "$(P)GET_INLK_STATUS_R", "llrf$(N):get_inlk_status")
alias( "$(P)DECAY_RO_ENABLE_R", "llrf$(N):decay_ro_enable")
alias( "$(P)DECAY_RO_ENABLE_BITS_R", "llrf$(N):decay_ro_enable_bits")
alias( "$(P)GET_DECAY_RO_ENABLE_R", "llrf$(N):get_decay_ro_enable")
alias( "$(P)PERMITSTATUS_R", "llrf$(N):permitstatus")
alias( "$(P)PERMITSTATUS_BITS_R", "llrf$(N):permitstatus_bits")
alias( "$(P)GET_PERMITSTATUS_R", "llrf$(N):get_permitstatus")
alias( "$(P)ABUF_RO_ENABLE_R", "llrf$(N):abuf_ro_enable")
alias( "$(P)ABUF_RO_ENABLE_BITS_R", "llrf$(N):abuf_ro_enable_bits")
alias( "$(P)GET_ABUF_RO_ENABLE_R", "llrf$(N):get_abuf_ro_enable")
alias( "$(P)TRIGCNT_R", "llrf$(N):trigcnt")
alias( "$(P)TRIGCNT_BITS_R", "llrf$(N):trigcnt_bits")
alias( "$(P)GET_TRIGCNT_R", "llrf$(N):get_trigcnt")
alias( "$(P)STATUS_R", "llrf$(N):status")
alias( "$(P)STATUS_BITS_R", "llrf$(N):status_bits")
alias( "$(P)GET_STATUS_R", "llrf$(N):get_status")
alias( "$(P)CONFIG_ROM_OUT_R", "llrf$(N):config_rom_out")
alias( "$(P)GET_CONFIG_ROM_OUT_R", "llrf$(N):get_config_rom_out")
alias( "$(P)RAMTEST_R", "llrf$(N):ramtest")
alias( "$(P)GET_RAMTEST_R", "llrf$(N):get_ramtest")
alias( "$(P)SCANNER_MIRROR_VAL_R", "llrf$(N):scanner_mirror_val")
alias( "$(P)GET_SCANNER_MIRROR_VAL_R", "llrf$(N):get_scanner_mirror_val")
alias( "$(P)BANYAN_DATA_R", "llrf$(N):banyan_data")
alias( "$(P)GET_BANYAN_DATA_R", "llrf$(N):get_banyan_data")
alias( "$(P)TRACE_DATA_R", "llrf$(N):trace_data")
alias( "$(P)GET_TRACE_DATA_R", "llrf$(N):get_trace_data")
alias( "$(P)DECAY_DATA_R", "llrf$(N):decay_data")
alias( "$(P)GET_DECAY_DATA_R", "llrf$(N):get_decay_data")
alias( "$(P)ABUF_DATA_R", "llrf$(N):abuf_data")
alias( "$(P)GET_ABUF_DATA_R", "llrf$(N):get_abuf_data")
alias( "$(P)SCANNER_RESULT_VAL_R", "llrf$(N):scanner_result_val")
alias( "$(P)GET_SCANNER_RESULT_VAL_R", "llrf$(N):get_scanner_result_val")
