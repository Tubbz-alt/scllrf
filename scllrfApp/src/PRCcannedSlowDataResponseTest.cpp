	cout << "Now processing " << __FILE__ << endl;

	FpgaReg cannedSlowDataResponse[388] =
	{
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x00000000},
		{ 0x10180012, 0x00000014},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f3},
		{ 0x10180016, 0x00000042},
		{ 0x10180017, 0x0000000c},
		{ 0x10180018, 0x00000043},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x00000075},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x0000008d},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x0000005d},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x00000075},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000040},
		{ 0x10180024, 0x0000003f},
		{ 0x10180025, 0x000000b8},
		{ 0x10180026, 0x00000085},
		{ 0x10180027, 0x000000ae},
		{ 0x10180028, 0x00000003},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009a},
		{ 0x10180012, 0x00000061},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f4},
		{ 0x10180016, 0x000000c7},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x00000033},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009d},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b5},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000058},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x00000070},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x000000c3},
		{ 0x10180026, 0x0000008e},
		{ 0x10180027, 0x0000007e},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009b},
		{ 0x10180012, 0x0000008a},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f5},
		{ 0x10180016, 0x00000018},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x0000003e},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009d},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b6},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000058},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x00000070},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x0000007a},
		{ 0x10180026, 0x000000b1},
		{ 0x10180027, 0x000000a4},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009c},
		{ 0x10180012, 0x000000f6},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f5},
		{ 0x10180016, 0x00000076},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x000000db},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009d},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b6},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000057},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x0000006f},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x0000008e},
		{ 0x10180026, 0x0000006e},
		{ 0x10180027, 0x000000d3},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009c},
		{ 0x10180012, 0x000000f7},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f5},
		{ 0x10180016, 0x0000001c},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x000000b9},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009d},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b5},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000057},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x00000070},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x0000006d},
		{ 0x10180026, 0x0000008f},
		{ 0x10180027, 0x000000d3},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009c},
		{ 0x10180012, 0x000000f8},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f5},
		{ 0x10180016, 0x000000f6},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x00000018},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009c},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b5},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000057},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x0000006f},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x0000004c},
		{ 0x10180026, 0x000000b0},
		{ 0x10180027, 0x000000d3},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},
		{ 0x10180000, 0x00000000},
		{ 0x10180001, 0x00000000},
		{ 0x10180002, 0x00000000},
		{ 0x10180003, 0x00000000},
		{ 0x10180004, 0x00000000},
		{ 0x10180005, 0x00000000},
		{ 0x10180006, 0x00000000},
		{ 0x10180007, 0x00000000},
		{ 0x10180008, 0x00000000},
		{ 0x10180009, 0x00000000},
		{ 0x1018000a, 0x00000000},
		{ 0x1018000b, 0x00000000},
		{ 0x1018000c, 0x00000000},
		{ 0x1018000d, 0x00000000},
		{ 0x1018000e, 0x00000000},
		{ 0x1018000f, 0x00000000},
		{ 0x10180010, 0x00000000},
		{ 0x10180011, 0x0000009c},
		{ 0x10180012, 0x000000f9},
		{ 0x10180013, 0x00000080},
		{ 0x10180014, 0x00000000},
		{ 0x10180015, 0x000000f6},
		{ 0x10180016, 0x0000002e},
		{ 0x10180017, 0x00000009},
		{ 0x10180018, 0x0000006e},
		{ 0x10180019, 0x000000ff},
		{ 0x1018001a, 0x0000009c},
		{ 0x1018001b, 0x000000ff},
		{ 0x1018001c, 0x000000b5},
		{ 0x1018001d, 0x000000ff},
		{ 0x1018001e, 0x00000057},
		{ 0x1018001f, 0x000000ff},
		{ 0x10180020, 0x00000070},
		{ 0x10180021, 0x00000000},
		{ 0x10180022, 0x00000000},
		{ 0x10180023, 0x00000060},
		{ 0x10180024, 0x00000003},
		{ 0x10180025, 0x0000002b},
		{ 0x10180026, 0x000000d1},
		{ 0x10180027, 0x000000d3},
		{ 0x10180028, 0x00000017},
		{ 0x10180029, 0x00000000},
		{ 0x1018002a, 0x00000000},

	};

	std::fill( &cannedSlowDataResponse[302], &cannedSlowDataResponse[387], (FpgaReg)  {flagReadMask,blankData}  );


	for ( unsigned int i = 0; i< 302; i++)
	{
		cout << "Fake data read: addr 0x" << std::hex << cannedSlowDataResponse[i].addr << ", data: 0x" << cannedSlowDataResponse[i].data << endl;
		if (cannedSlowDataResponse[i].addr & flagReadMask)
		{
			processRegReadback(&cannedSlowDataResponse[i], dummy);
		}
		else
		{
			processRegWriteResponse(&cannedSlowDataResponse[i]);
		}
	}
	lastResponseCount_ += 1;
