#ifndef SCLLRFPRC_DRIVER_H
#define SCLLRFPRC_DRIVER_H

/**
 *-----------------------------------------------------------------------------
 * Title      : superconducting low level RF EPICS interface
 * ----------------------------------------------------------------------------
 * File       : scllrfPRCDriver.h
 * Author     : Garth Brown, gwbrown@slac.stanford.edu
 * Created    : June 17, 2016
 * Last update: September 6, 2016
 * ----------------------------------------------------------------------------
 * Description:
 * Header defining register interface to scllrfPRC, autogenerated from a python
 * dictionary.
 *
 * ----------------------------------------------------------------------------
 * This file is part of LCLS II. It is subject to
 * the license terms in the LICENSE.txt file found in the top-level directory
 * of this distribution and at:
    * https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
 * No part of LCLS II, including this file, may be
 * copied, modified, propagated, or distributed except according to the terms
 * contained in the LICENSE.txt file.
 * ----------------------------------------------------------------------------
**/
#include "scllrfAsynPortDriver.h"

/* Registers */
static const char *U15SpiRdbkRString = "U15_SPI_RDBK_R";
static const char *U15SpiStatusRString = "U15_SPI_STATUS_R";
static const char *U18SpiRdbkRString = "U18_SPI_RDBK_R";
static const char *U18SpiStatusRString = "U18_SPI_STATUS_R";
static const char *U2DoutLsbRString = "U2DOUT_LSB_R";
static const char *U2DoutMsbRString = "U2DOUT_MSB_R";
static const char *U3DoutLsbRString = "U3DOUT_LSB_R";
static const char *U3DoutMsbRString = "U3DOUT_MSB_R";
static const char *AdcMmcmRString = "ADC_MMCM_R";
static const char *AdcMmcmWString = "ADC_MMCM_W";
static const char *AdcTestModeRString = "ADC_TEST_MODE_R";
static const char *AdcTestModeWString = "ADC_TEST_MODE_W";
static const char *AdcTestResetRString = "ADC_TEST_RESET_R";
static const char *AdcTestResetWString = "ADC_TEST_RESET_W";
static const char *AdcTestTrigCntRString = "ADC_TEST_TRIG_CNT_R";
static const char *AdcTestWave1OutRString = "ADC_TEST_WAVE1_OUT_R";
static const char *AdcTestWave2OutRString = "ADC_TEST_WAVE2_OUT_R";
static const char *AdcTestWave3OutRString = "ADC_TEST_WAVE3_OUT_R";
static const char *AdcTestWave4OutRString = "ADC_TEST_WAVE4_OUT_R";
static const char *AmplitudeRString = "AMPLITUDE_R";
static const char *AmplitudeWString = "AMPLITUDE_W";
static const char *AverageLenRString = "AVERAGE_LEN_R";
static const char *AverageLenWString = "AVERAGE_LEN_W";
static const char *BanyanBufRString = "BANYAN_BUF_R";
static const char *BanyanStatusRString = "BANYAN_STATUS_R";
static const char *Beam0ModuloRString = "BEAM_0_MODULO_R";
static const char *Beam0ModuloWString = "BEAM_0_MODULO_W";
static const char *Beam0PhaseInitRString = "BEAM_0_PHASE_INIT_R";
static const char *Beam0PhaseInitWString = "BEAM_0_PHASE_INIT_W";
static const char *Beam0PhaseStepRString = "BEAM_0_PHASE_STEP_R";
static const char *Beam0PhaseStepWString = "BEAM_0_PHASE_STEP_W";
static const char *Beam1ModuloRString = "BEAM_1_MODULO_R";
static const char *Beam1ModuloWString = "BEAM_1_MODULO_W";
static const char *Beam1PhaseInitRString = "BEAM_1_PHASE_INIT_R";
static const char *Beam1PhaseInitWString = "BEAM_1_PHASE_INIT_W";
static const char *Beam1PhaseStepRString = "BEAM_1_PHASE_STEP_R";
static const char *Beam1PhaseStepWString = "BEAM_1_PHASE_STEP_W";
static const char *BufTrigRString = "BUF_TRIG_R";
static const char *BufTrigWString = "BUF_TRIG_W";
static const char *Cav4MechNoiseCoupleKOutWString = "CAV4_MECH_NOISE_COUPLE_K_OUT_W";
static const char *Cav4MechPrngIvaRString = "CAV4_MECH_PRNG_IVA_R";
static const char *Cav4MechPrngIvaWString = "CAV4_MECH_PRNG_IVA_W";
static const char *Cav4MechPrngIvbRString = "CAV4_MECH_PRNG_IVB_R";
static const char *Cav4MechPrngIvbWString = "CAV4_MECH_PRNG_IVB_W";
static const char *Cav4MechPrngRandomRunRString = "CAV4_MECH_PRNG_RANDOM_RUN_R";
static const char *Cav4MechPrngRandomRunWString = "CAV4_MECH_PRNG_RANDOM_RUN_W";
static const char *Cav4MechResonatorPropConstWString = "CAV4_MECH_RESONATOR_PROP_CONST_W";
static const char *Cavity0DetuneRString = "CAVITY0_DETUNE_R";
static const char *Cavity1DetuneRString = "CAVITY1_DETUNE_R";
static const char *Cavity0ACavOffsetRString = "CAVITY_0_A_CAV_OFFSET_R";
static const char *Cavity0ACavOffsetWString = "CAVITY_0_A_CAV_OFFSET_W";
static const char *Cavity0AForOffsetRString = "CAVITY_0_A_FOR_OFFSET_R";
static const char *Cavity0AForOffsetWString = "CAVITY_0_A_FOR_OFFSET_W";
static const char *Cavity0ARflOffsetRString = "CAVITY_0_A_RFL_OFFSET_R";
static const char *Cavity0ARflOffsetWString = "CAVITY_0_A_RFL_OFFSET_W";
static const char *Cavity0AmpLpBwRString = "CAVITY_0_AMP_LP_BW_R";
static const char *Cavity0AmpLpBwWString = "CAVITY_0_AMP_LP_BW_W";
static const char *Cavity0ComprSatCtlRString = "CAVITY_0_COMPR_SAT_CTL_R";
static const char *Cavity0ComprSatCtlWString = "CAVITY_0_COMPR_SAT_CTL_W";
static const char *Cavity0Dot0KOutWString = "CAVITY_0_DOT_0_K_OUT_W";
static const char *Cavity0Dot1KOutWString = "CAVITY_0_DOT_1_K_OUT_W";
static const char *Cavity0Dot2KOutWString = "CAVITY_0_DOT_2_K_OUT_W";
static const char *Cavity0DriveCoupleOutCouplingRString = "CAVITY_0_DRIVE_COUPLE_OUT_COUPLING_R";
static const char *Cavity0DriveCoupleOutCouplingWString = "CAVITY_0_DRIVE_COUPLE_OUT_COUPLING_W";
static const char *Cavity0DriveCoupleOutPhaseOffsetRString = "CAVITY_0_DRIVE_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity0DriveCoupleOutPhaseOffsetWString = "CAVITY_0_DRIVE_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity0Freq0CoarseFreqRString = "CAVITY_0_FREQ_0_COARSE_FREQ_R";
static const char *Cavity0Freq0CoarseFreqWString = "CAVITY_0_FREQ_0_COARSE_FREQ_W";
static const char *Cavity0Freq1CoarseFreqRString = "CAVITY_0_FREQ_1_COARSE_FREQ_R";
static const char *Cavity0Freq1CoarseFreqWString = "CAVITY_0_FREQ_1_COARSE_FREQ_W";
static const char *Cavity0Freq2CoarseFreqRString = "CAVITY_0_FREQ_2_COARSE_FREQ_R";
static const char *Cavity0Freq2CoarseFreqWString = "CAVITY_0_FREQ_2_COARSE_FREQ_W";
static const char *Cavity0Mode0BeamCouplingRString = "CAVITY_0_MODE_0_BEAM_COUPLING_R";
static const char *Cavity0Mode0BeamCouplingWString = "CAVITY_0_MODE_0_BEAM_COUPLING_W";
static const char *Cavity0Mode0BwRString = "CAVITY_0_MODE_0_BW_R";
static const char *Cavity0Mode0BwWString = "CAVITY_0_MODE_0_BW_W";
static const char *Cavity0Mode0CoupleOutCouplingRString = "CAVITY_0_MODE_0_COUPLE_OUT_COUPLING_R";
static const char *Cavity0Mode0CoupleOutCouplingWString = "CAVITY_0_MODE_0_COUPLE_OUT_COUPLING_W";
static const char *Cavity0Mode0CoupleOutPhaseOffsetRString = "CAVITY_0_MODE_0_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity0Mode0CoupleOutPhaseOffsetWString = "CAVITY_0_MODE_0_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity0Mode0DriveCouplingRString = "CAVITY_0_MODE_0_DRIVE_COUPLING_R";
static const char *Cavity0Mode0DriveCouplingWString = "CAVITY_0_MODE_0_DRIVE_COUPLING_W";
static const char *Cavity0Mode1BeamCouplingRString = "CAVITY_0_MODE_1_BEAM_COUPLING_R";
static const char *Cavity0Mode1BeamCouplingWString = "CAVITY_0_MODE_1_BEAM_COUPLING_W";
static const char *Cavity0Mode1BwRString = "CAVITY_0_MODE_1_BW_R";
static const char *Cavity0Mode1BwWString = "CAVITY_0_MODE_1_BW_W";
static const char *Cavity0Mode1CoupleOutCouplingRString = "CAVITY_0_MODE_1_COUPLE_OUT_COUPLING_R";
static const char *Cavity0Mode1CoupleOutCouplingWString = "CAVITY_0_MODE_1_COUPLE_OUT_COUPLING_W";
static const char *Cavity0Mode1CoupleOutPhaseOffsetRString = "CAVITY_0_MODE_1_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity0Mode1CoupleOutPhaseOffsetWString = "CAVITY_0_MODE_1_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity0Mode1DriveCouplingRString = "CAVITY_0_MODE_1_DRIVE_COUPLING_R";
static const char *Cavity0Mode1DriveCouplingWString = "CAVITY_0_MODE_1_DRIVE_COUPLING_W";
static const char *Cavity0Mode2BeamCouplingRString = "CAVITY_0_MODE_2_BEAM_COUPLING_R";
static const char *Cavity0Mode2BeamCouplingWString = "CAVITY_0_MODE_2_BEAM_COUPLING_W";
static const char *Cavity0Mode2BwRString = "CAVITY_0_MODE_2_BW_R";
static const char *Cavity0Mode2BwWString = "CAVITY_0_MODE_2_BW_W";
static const char *Cavity0Mode2CoupleOutCouplingRString = "CAVITY_0_MODE_2_COUPLE_OUT_COUPLING_R";
static const char *Cavity0Mode2CoupleOutCouplingWString = "CAVITY_0_MODE_2_COUPLE_OUT_COUPLING_W";
static const char *Cavity0Mode2CoupleOutPhaseOffsetRString = "CAVITY_0_MODE_2_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity0Mode2CoupleOutPhaseOffsetWString = "CAVITY_0_MODE_2_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity0Mode2DriveCouplingRString = "CAVITY_0_MODE_2_DRIVE_COUPLING_R";
static const char *Cavity0Mode2DriveCouplingWString = "CAVITY_0_MODE_2_DRIVE_COUPLING_W";
static const char *Cavity0ModuloRString = "CAVITY_0_MODULO_R";
static const char *Cavity0ModuloWString = "CAVITY_0_MODULO_W";
static const char *Cavity0OuterProd0KOutWString = "CAVITY_0_OUTER_PROD_0_K_OUT_W";
static const char *Cavity0OuterProd1KOutWString = "CAVITY_0_OUTER_PROD_1_K_OUT_W";
static const char *Cavity0OuterProd2KOutWString = "CAVITY_0_OUTER_PROD_2_K_OUT_W";
static const char *Cavity0PhaseStepRString = "CAVITY_0_PHASE_STEP_R";
static const char *Cavity0PhaseStepWString = "CAVITY_0_PHASE_STEP_W";
static const char *Cavity0PiezoCoupleKOutWString = "CAVITY_0_PIEZO_COUPLE_K_OUT_W";
static const char *Cavity0PrngIvaRString = "CAVITY_0_PRNG_IVA_R";
static const char *Cavity0PrngIvaWString = "CAVITY_0_PRNG_IVA_W";
static const char *Cavity0PrngIvbRString = "CAVITY_0_PRNG_IVB_R";
static const char *Cavity0PrngIvbWString = "CAVITY_0_PRNG_IVB_W";
static const char *Cavity0PrngRandomRunRString = "CAVITY_0_PRNG_RANDOM_RUN_R";
static const char *Cavity0PrngRandomRunWString = "CAVITY_0_PRNG_RANDOM_RUN_W";
static const char *Cavity1ACavOffsetRString = "CAVITY_1_A_CAV_OFFSET_R";
static const char *Cavity1ACavOffsetWString = "CAVITY_1_A_CAV_OFFSET_W";
static const char *Cavity1AForOffsetRString = "CAVITY_1_A_FOR_OFFSET_R";
static const char *Cavity1AForOffsetWString = "CAVITY_1_A_FOR_OFFSET_W";
static const char *Cavity1ARflOffsetRString = "CAVITY_1_A_RFL_OFFSET_R";
static const char *Cavity1ARflOffsetWString = "CAVITY_1_A_RFL_OFFSET_W";
static const char *Cavity1AmpLpBwRString = "CAVITY_1_AMP_LP_BW_R";
static const char *Cavity1AmpLpBwWString = "CAVITY_1_AMP_LP_BW_W";
static const char *Cavity1ComprSatCtlRString = "CAVITY_1_COMPR_SAT_CTL_R";
static const char *Cavity1ComprSatCtlWString = "CAVITY_1_COMPR_SAT_CTL_W";
static const char *Cavity1Dot0KOutWString = "CAVITY_1_DOT_0_K_OUT_W";
static const char *Cavity1Dot1KOutWString = "CAVITY_1_DOT_1_K_OUT_W";
static const char *Cavity1Dot2KOutWString = "CAVITY_1_DOT_2_K_OUT_W";
static const char *Cavity1DriveCoupleOutCouplingRString = "CAVITY_1_DRIVE_COUPLE_OUT_COUPLING_R";
static const char *Cavity1DriveCoupleOutCouplingWString = "CAVITY_1_DRIVE_COUPLE_OUT_COUPLING_W";
static const char *Cavity1DriveCoupleOutPhaseOffsetRString = "CAVITY_1_DRIVE_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity1DriveCoupleOutPhaseOffsetWString = "CAVITY_1_DRIVE_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity1Freq0CoarseFreqRString = "CAVITY_1_FREQ_0_COARSE_FREQ_R";
static const char *Cavity1Freq0CoarseFreqWString = "CAVITY_1_FREQ_0_COARSE_FREQ_W";
static const char *Cavity1Freq1CoarseFreqRString = "CAVITY_1_FREQ_1_COARSE_FREQ_R";
static const char *Cavity1Freq1CoarseFreqWString = "CAVITY_1_FREQ_1_COARSE_FREQ_W";
static const char *Cavity1Freq2CoarseFreqRString = "CAVITY_1_FREQ_2_COARSE_FREQ_R";
static const char *Cavity1Freq2CoarseFreqWString = "CAVITY_1_FREQ_2_COARSE_FREQ_W";
static const char *Cavity1Mode0BeamCouplingRString = "CAVITY_1_MODE_0_BEAM_COUPLING_R";
static const char *Cavity1Mode0BeamCouplingWString = "CAVITY_1_MODE_0_BEAM_COUPLING_W";
static const char *Cavity1Mode0BwRString = "CAVITY_1_MODE_0_BW_R";
static const char *Cavity1Mode0BwWString = "CAVITY_1_MODE_0_BW_W";
static const char *Cavity1Mode0CoupleOutCouplingRString = "CAVITY_1_MODE_0_COUPLE_OUT_COUPLING_R";
static const char *Cavity1Mode0CoupleOutCouplingWString = "CAVITY_1_MODE_0_COUPLE_OUT_COUPLING_W";
static const char *Cavity1Mode0CoupleOutPhaseOffsetRString = "CAVITY_1_MODE_0_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity1Mode0CoupleOutPhaseOffsetWString = "CAVITY_1_MODE_0_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity1Mode0DriveCouplingRString = "CAVITY_1_MODE_0_DRIVE_COUPLING_R";
static const char *Cavity1Mode0DriveCouplingWString = "CAVITY_1_MODE_0_DRIVE_COUPLING_W";
static const char *Cavity1Mode1BeamCouplingRString = "CAVITY_1_MODE_1_BEAM_COUPLING_R";
static const char *Cavity1Mode1BeamCouplingWString = "CAVITY_1_MODE_1_BEAM_COUPLING_W";
static const char *Cavity1Mode1BwRString = "CAVITY_1_MODE_1_BW_R";
static const char *Cavity1Mode1BwWString = "CAVITY_1_MODE_1_BW_W";
static const char *Cavity1Mode1CoupleOutCouplingRString = "CAVITY_1_MODE_1_COUPLE_OUT_COUPLING_R";
static const char *Cavity1Mode1CoupleOutCouplingWString = "CAVITY_1_MODE_1_COUPLE_OUT_COUPLING_W";
static const char *Cavity1Mode1CoupleOutPhaseOffsetRString = "CAVITY_1_MODE_1_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity1Mode1CoupleOutPhaseOffsetWString = "CAVITY_1_MODE_1_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity1Mode1DriveCouplingRString = "CAVITY_1_MODE_1_DRIVE_COUPLING_R";
static const char *Cavity1Mode1DriveCouplingWString = "CAVITY_1_MODE_1_DRIVE_COUPLING_W";
static const char *Cavity1Mode2BeamCouplingRString = "CAVITY_1_MODE_2_BEAM_COUPLING_R";
static const char *Cavity1Mode2BeamCouplingWString = "CAVITY_1_MODE_2_BEAM_COUPLING_W";
static const char *Cavity1Mode2BwRString = "CAVITY_1_MODE_2_BW_R";
static const char *Cavity1Mode2BwWString = "CAVITY_1_MODE_2_BW_W";
static const char *Cavity1Mode2CoupleOutCouplingRString = "CAVITY_1_MODE_2_COUPLE_OUT_COUPLING_R";
static const char *Cavity1Mode2CoupleOutCouplingWString = "CAVITY_1_MODE_2_COUPLE_OUT_COUPLING_W";
static const char *Cavity1Mode2CoupleOutPhaseOffsetRString = "CAVITY_1_MODE_2_COUPLE_OUT_PHASE_OFFSET_R";
static const char *Cavity1Mode2CoupleOutPhaseOffsetWString = "CAVITY_1_MODE_2_COUPLE_OUT_PHASE_OFFSET_W";
static const char *Cavity1Mode2DriveCouplingRString = "CAVITY_1_MODE_2_DRIVE_COUPLING_R";
static const char *Cavity1Mode2DriveCouplingWString = "CAVITY_1_MODE_2_DRIVE_COUPLING_W";
static const char *Cavity1ModuloRString = "CAVITY_1_MODULO_R";
static const char *Cavity1ModuloWString = "CAVITY_1_MODULO_W";
static const char *Cavity1OuterProd0KOutWString = "CAVITY_1_OUTER_PROD_0_K_OUT_W";
static const char *Cavity1OuterProd1KOutWString = "CAVITY_1_OUTER_PROD_1_K_OUT_W";
static const char *Cavity1OuterProd2KOutWString = "CAVITY_1_OUTER_PROD_2_K_OUT_W";
static const char *Cavity1PhaseStepRString = "CAVITY_1_PHASE_STEP_R";
static const char *Cavity1PhaseStepWString = "CAVITY_1_PHASE_STEP_W";
static const char *Cavity1PiezoCoupleKOutWString = "CAVITY_1_PIEZO_COUPLE_K_OUT_W";
static const char *Cavity1PrngIvaRString = "CAVITY_1_PRNG_IVA_R";
static const char *Cavity1PrngIvaWString = "CAVITY_1_PRNG_IVA_W";
static const char *Cavity1PrngIvbRString = "CAVITY_1_PRNG_IVB_R";
static const char *Cavity1PrngIvbWString = "CAVITY_1_PRNG_IVB_W";
static const char *Cavity1PrngRandomRunRString = "CAVITY_1_PRNG_RANDOM_RUN_R";
static const char *Cavity1PrngRandomRunWString = "CAVITY_1_PRNG_RANDOM_RUN_W";
static const char *CcErrorClearRString = "CC_ERROR_CLEAR_R";
static const char *CcErrorClearWString = "CC_ERROR_CLEAR_W";
static const char *CcLoc1RString = "CC_LOC1_R";
static const char *CcLoc1WString = "CC_LOC1_W";
static const char *Cct1Cavity0StatusAuxRString = "CCT1_CAVITY0_STATUS_AUX_R";
static const char *Cct1Cavity0StatusAuxWString = "CCT1_CAVITY0_STATUS_AUX_W";
static const char *Cct1Cavity1StatusAuxRString = "CCT1_CAVITY1_STATUS_AUX_R";
static const char *Cct1Cavity1StatusAuxWString = "CCT1_CAVITY1_STATUS_AUX_W";
static const char *CicPeriodRString = "CIC_PERIOD_R";
static const char *CicPeriodWString = "CIC_PERIOD_W";
static const char *CicShiftRString = "CIC_SHIFT_R";
static const char *CicShiftWString = "CIC_SHIFT_W";
static const char *CircleBufFlipRString = "CIRCLE_BUF_FLIP_R";
static const char *CircleBufFlipWString = "CIRCLE_BUF_FLIP_W";
static const char *ClkPhaseDiffOutU2RString = "CLK_PHASE_DIFF_OUT_U2_R";
static const char *ClkPhaseDiffOutU3RString = "CLK_PHASE_DIFF_OUT_U3_R";
static const char *ClkStatusOutRString = "CLK_STATUS_OUT_R";
static const char *ConfigU15SpiDataAddrRRString = "CONFIG_U15_SPI_DATA_ADDR_R_R";
static const char *ConfigU15SpiDataAddrRWString = "CONFIG_U15_SPI_DATA_ADDR_R_W";
static const char *ConfigU15SpiReadAndStartRRString = "CONFIG_U15_SPI_READ_AND_START_R_R";
static const char *ConfigU15SpiReadAndStartRWString = "CONFIG_U15_SPI_READ_AND_START_R_W";
static const char *ConfigU18SpiDataAddrRRString = "CONFIG_U18_SPI_DATA_ADDR_R_R";
static const char *ConfigU18SpiDataAddrRWString = "CONFIG_U18_SPI_DATA_ADDR_R_W";
static const char *ConfigU18SpiReadAndStartRRString = "CONFIG_U18_SPI_READ_AND_START_R_R";
static const char *ConfigU18SpiReadAndStartRWString = "CONFIG_U18_SPI_READ_AND_START_R_W";
static const char *ConfigU2ClkResetRRString = "CONFIG_U2_CLK_RESET_R_R";
static const char *ConfigU2ClkResetRWString = "CONFIG_U2_CLK_RESET_R_W";
static const char *ConfigU2IserdesResetRRString = "CONFIG_U2_ISERDES_RESET_R_R";
static const char *ConfigU2IserdesResetRWString = "CONFIG_U2_ISERDES_RESET_R_W";
static const char *ConfigU3ClkResetRRString = "CONFIG_U3_CLK_RESET_R_R";
static const char *ConfigU3ClkResetRWString = "CONFIG_U3_CLK_RESET_R_W";
static const char *ConfigU3IserdesResetRRString = "CONFIG_U3_ISERDES_RESET_R_R";
static const char *ConfigU3IserdesResetRWString = "CONFIG_U3_ISERDES_RESET_R_W";
static const char *ConfigU4ResetRRString = "CONFIG_U4_RESET_R_R";
static const char *ConfigU4ResetRWString = "CONFIG_U4_RESET_R_W";
static const char *ConfigBanyanMaskRString = "CONFIG_BANYAN_MASK_R";
static const char *ConfigBanyanMaskWString = "CONFIG_BANYAN_MASK_W";
static const char *ConfigBitslipRString = "CONFIG_BITSLIP_R";
static const char *ConfigBitslipWString = "CONFIG_BITSLIP_W";
static const char *ConfigClkStatusWeRString = "CONFIG_CLK_STATUS_WE_R";
static const char *ConfigClkStatusWeWString = "CONFIG_CLK_STATUS_WE_W";
static const char *ConfigIdelayctrlResetRRString = "CONFIG_IDELAYCTRL_RESET_R_R";
static const char *ConfigIdelayctrlResetRWString = "CONFIG_IDELAYCTRL_RESET_R_W";
static const char *ConfigLlspiWeRString = "CONFIG_LLSPI_WE_R";
static const char *ConfigLlspiWeWString = "CONFIG_LLSPI_WE_W";
static const char *ConfigMmcmResetRRString = "CONFIG_MMCM_RESET_R_R";
static const char *ConfigMmcmResetRWString = "CONFIG_MMCM_RESET_R_W";
static const char *ConfigPeriphConfigRString = "CONFIG_PERIPH_CONFIG_R";
static const char *ConfigPeriphConfigWString = "CONFIG_PERIPH_CONFIG_W";
static const char *ConfigPhasexTrigRString = "CONFIG_PHASEX_TRIG_R";
static const char *ConfigPhasexTrigWString = "CONFIG_PHASEX_TRIG_W";
static const char *ConfigRawadcTrigRString = "CONFIG_RAWADC_TRIG_R";
static const char *ConfigRawadcTrigWString = "CONFIG_RAWADC_TRIG_W";
static const char *ConfigScanTriggerWeRString = "CONFIG_SCAN_TRIGGER_WE_R";
static const char *ConfigScanTriggerWeWString = "CONFIG_SCAN_TRIGGER_WE_W";
static const char *ConfigScannerDebugRString = "CONFIG_SCANNER_DEBUG_R";
static const char *ConfigScannerDebugWString = "CONFIG_SCANNER_DEBUG_W";
static const char *ConfigSyncAd7794CsetRString = "CONFIG_SYNC_AD7794_CSET_R";
static const char *ConfigSyncAd7794CsetWString = "CONFIG_SYNC_AD7794_CSET_W";
static const char *ConfigSyncTps62210CsetRString = "CONFIG_SYNC_TPS62210_CSET_R";
static const char *ConfigSyncTps62210CsetWString = "CONFIG_SYNC_TPS62210_CSET_W";
static const char *CrcErrorsRString = "CRC_ERRORS_R";
static const char *CtraceRunningRString = "CTRACE_RUNNING_R";
static const char *DacDdsResetRString = "DAC_DDS_RESET_R";
static const char *DacDdsResetWString = "DAC_DDS_RESET_W";
static const char *DacIqPhaseRString = "DAC_IQ_PHASE_R";
static const char *DacIqPhaseWString = "DAC_IQ_PHASE_W";
static const char *DacModeRString = "DAC_MODE_R";
static const char *DacModeWString = "DAC_MODE_W";
static const char *DdsaModuloRString = "DDSA_MODULO_R";
static const char *DdsaModuloWString = "DDSA_MODULO_W";
static const char *DdsaPhstepHRString = "DDSA_PHSTEP_H_R";
static const char *DdsaPhstepHWString = "DDSA_PHSTEP_H_W";
static const char *DdsaPhstepLRString = "DDSA_PHSTEP_L_R";
static const char *DdsaPhstepLWString = "DDSA_PHSTEP_L_W";
static const char *DomainJumpRealignRString = "DOMAIN_JUMP_REALIGN_R";
static const char *DomainJumpRealignWString = "DOMAIN_JUMP_REALIGN_W";
static const char *FfffffffRString = "FFFFFFFF_R";
static const char *Frequency4XoutRString = "FREQUENCY_4XOUT_R";
static const char *FrequencyAdcRString = "FREQUENCY_ADC_R";
static const char *FrequencyClkout3RString = "FREQUENCY_CLKOUT3_R";
static const char *FrequencyDcoRString = "FREQUENCY_DCO_R";
static const char *FrequencyGtxRxRString = "FREQUENCY_GTX_RX_R";
static const char *FrequencyGtxTxRString = "FREQUENCY_GTX_TX_R";
static const char *Hello0RString = "HELLO_0_R";
static const char *Hello1RString = "HELLO_1_R";
static const char *Hello2RString = "HELLO_2_R";
static const char *Hello3RString = "HELLO_3_R";
static const char *HistCountWStrobeRString = "HIST_COUNT_W_STROBE_R";
static const char *HistCountWStrobeWString = "HIST_COUNT_W_STROBE_W";
static const char *HistDoutRString = "HIST_DOUT_R";
static const char *HistStatusRString = "HIST_STATUS_R";
static const char *IccCfgRString = "ICC_CFG_R";
static const char *IccCfgWString = "ICC_CFG_W";
static const char *IdelayBaseRString = "IDELAY_BASE_R";
static const char *IdelayValueOutU2LsbRString = "IDELAY_VALUE_OUT_U2_LSB_R";
static const char *IdelayValueOutU2MsbRString = "IDELAY_VALUE_OUT_U2_MSB_R";
static const char *IdelayValueOutU3LsbRString = "IDELAY_VALUE_OUT_U3_LSB_R";
static const char *IdelayValueOutU3MsbRString = "IDELAY_VALUE_OUT_U3_MSB_R";
static const char *LlrfCircleDataRString = "LLRF_CIRCLE_DATA_R";
static const char *LlrfCircleReadyRString = "LLRF_CIRCLE_READY_R";
static const char *LlrfDspDacEnRString = "LLRF_DSP_DAC_EN_R";
static const char *LlrfDspDacEnWString = "LLRF_DSP_DAC_EN_W";
static const char *LlspiResultRString = "LLSPI_RESULT_R";
static const char *LlspiStatusRString = "LLSPI_STATUS_R";
static const char *LoAmpRString = "LO_AMP_R";
static const char *LoAmpWString = "LO_AMP_W";
static const char *ModuloRString = "MODULO_R";
static const char *ModuloWString = "MODULO_W";
static const char *PhaseStepHRString = "PHASE_STEP_H_R";
static const char *PhaseStepHWString = "PHASE_STEP_H_W";
static const char *PhaseStepLRString = "PHASE_STEP_L_R";
static const char *PhaseStepLWString = "PHASE_STEP_L_W";
static const char *PhasexDoutRString = "PHASEX_DOUT_R";
static const char *PhasexStatusRString = "PHASEX_STATUS_R";
static const char *PrcDspCavSelRString = "PRC_DSP_CAV_SEL_R";
static const char *PrcDspCavSelWString = "PRC_DSP_CAV_SEL_W";
static const char *PrcDspPrlCfgRString = "PRC_DSP_PRL_CFG_R";
static const char *PrcDspPrlCfgWString = "PRC_DSP_PRL_CFG_W";
static const char *PrcDspPrlGainRString = "PRC_DSP_PRL_GAIN_R";
static const char *PrcDspPrlGainWString = "PRC_DSP_PRL_GAIN_W";
static const char *QsfpBufRString = "QSFP_BUF_R";
static const char *QsfpI2CRegRString = "QSFP_I2C_REG_R";
static const char *QsfpI2CRegWString = "QSFP_I2C_REG_W";
static const char *RewindRString = "REWIND_R";
static const char *RewindWString = "REWIND_W";
static const char *ScannerResultRString = "SCANNER_RESULT_R";
static const char *SfpAddressSetRString = "SFP_ADDRESS_SET_R";
static const char *SfpAddressSetWString = "SFP_ADDRESS_SET_W";
static const char *Shell0DspChanKeepRString = "SHELL_0_DSP_CHAN_KEEP_R";
static const char *Shell0DspChanKeepWString = "SHELL_0_DSP_CHAN_KEEP_W";
static const char *Shell0DspFdbkCoreCoarseScaleRString = "SHELL_0_DSP_FDBK_CORE_COARSE_SCALE_R";
static const char *Shell0DspFdbkCoreCoarseScaleWString = "SHELL_0_DSP_FDBK_CORE_COARSE_SCALE_W";
static const char *Shell0DspFdbkCoreMpProcCoeffRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_COEFF_R";
static const char *Shell0DspFdbkCoreMpProcCoeffWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_COEFF_W";
static const char *Shell0DspFdbkCoreMpProcLimRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_LIM_R";
static const char *Shell0DspFdbkCoreMpProcLimWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_LIM_W";
static const char *Shell0DspFdbkCoreMpProcPhOffsetRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_PH_OFFSET_R";
static const char *Shell0DspFdbkCoreMpProcPhOffsetWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_PH_OFFSET_W";
static const char *Shell0DspFdbkCoreMpProcSelEnRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SEL_EN_R";
static const char *Shell0DspFdbkCoreMpProcSelEnWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SEL_EN_W";
static const char *Shell0DspFdbkCoreMpProcSelThreshRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SEL_THRESH_R";
static const char *Shell0DspFdbkCoreMpProcSelThreshWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SEL_THRESH_W";
static const char *Shell0DspFdbkCoreMpProcSetmpRString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SETMP_R";
static const char *Shell0DspFdbkCoreMpProcSetmpWString = "SHELL_0_DSP_FDBK_CORE_MP_PROC_SETMP_W";
static const char *Shell0DspLpNotchLp1AKxRString = "SHELL_0_DSP_LP_NOTCH_LP1A_KX_R";
static const char *Shell0DspLpNotchLp1AKxWString = "SHELL_0_DSP_LP_NOTCH_LP1A_KX_W";
static const char *Shell0DspLpNotchLp1AKyRString = "SHELL_0_DSP_LP_NOTCH_LP1A_KY_R";
static const char *Shell0DspLpNotchLp1AKyWString = "SHELL_0_DSP_LP_NOTCH_LP1A_KY_W";
static const char *Shell0DspLpNotchLp1BKxRString = "SHELL_0_DSP_LP_NOTCH_LP1B_KX_R";
static const char *Shell0DspLpNotchLp1BKxWString = "SHELL_0_DSP_LP_NOTCH_LP1B_KX_W";
static const char *Shell0DspLpNotchLp1BKyRString = "SHELL_0_DSP_LP_NOTCH_LP1B_KY_R";
static const char *Shell0DspLpNotchLp1BKyWString = "SHELL_0_DSP_LP_NOTCH_LP1B_KY_W";
static const char *Shell0DspModuloRString = "SHELL_0_DSP_MODULO_R";
static const char *Shell0DspModuloWString = "SHELL_0_DSP_MODULO_W";
static const char *Shell0DspPhaseStepRString = "SHELL_0_DSP_PHASE_STEP_R";
static const char *Shell0DspPhaseStepWString = "SHELL_0_DSP_PHASE_STEP_W";
static const char *Shell0DspPiezoPiezoDcRString = "SHELL_0_DSP_PIEZO_PIEZO_DC_R";
static const char *Shell0DspPiezoPiezoDcWString = "SHELL_0_DSP_PIEZO_PIEZO_DC_W";
static const char *Shell0DspPiezoSfConstsRString = "SHELL_0_DSP_PIEZO_SF_CONSTS_R";
static const char *Shell0DspPiezoSfConstsWString = "SHELL_0_DSP_PIEZO_SF_CONSTS_W";
static const char *Shell0DspTagRString = "SHELL_0_DSP_TAG_R";
static const char *Shell0DspTagWString = "SHELL_0_DSP_TAG_W";
static const char *Shell0DspUseFiberIqRString = "SHELL_0_DSP_USE_FIBER_IQ_R";
static const char *Shell0DspUseFiberIqWString = "SHELL_0_DSP_USE_FIBER_IQ_W";
static const char *Shell0DspWaveSampPerRString = "SHELL_0_DSP_WAVE_SAMP_PER_R";
static const char *Shell0DspWaveSampPerWString = "SHELL_0_DSP_WAVE_SAMP_PER_W";
static const char *Shell0DspWaveShiftRString = "SHELL_0_DSP_WAVE_SHIFT_R";
static const char *Shell0DspWaveShiftWString = "SHELL_0_DSP_WAVE_SHIFT_W";
static const char *Shell0SlowDataRString = "SHELL_0_SLOW_DATA_R";
static const char *Shell1DspChanKeepRString = "SHELL_1_DSP_CHAN_KEEP_R";
static const char *Shell1DspChanKeepWString = "SHELL_1_DSP_CHAN_KEEP_W";
static const char *Shell1DspFdbkCoreCoarseScaleRString = "SHELL_1_DSP_FDBK_CORE_COARSE_SCALE_R";
static const char *Shell1DspFdbkCoreCoarseScaleWString = "SHELL_1_DSP_FDBK_CORE_COARSE_SCALE_W";
static const char *Shell1DspFdbkCoreMpProcCoeffRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_COEFF_R";
static const char *Shell1DspFdbkCoreMpProcCoeffWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_COEFF_W";
static const char *Shell1DspFdbkCoreMpProcLimRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_LIM_R";
static const char *Shell1DspFdbkCoreMpProcLimWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_LIM_W";
static const char *Shell1DspFdbkCoreMpProcPhOffsetRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_PH_OFFSET_R";
static const char *Shell1DspFdbkCoreMpProcPhOffsetWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_PH_OFFSET_W";
static const char *Shell1DspFdbkCoreMpProcSelEnRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SEL_EN_R";
static const char *Shell1DspFdbkCoreMpProcSelEnWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SEL_EN_W";
static const char *Shell1DspFdbkCoreMpProcSelThreshRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SEL_THRESH_R";
static const char *Shell1DspFdbkCoreMpProcSelThreshWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SEL_THRESH_W";
static const char *Shell1DspFdbkCoreMpProcSetmpRString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SETMP_R";
static const char *Shell1DspFdbkCoreMpProcSetmpWString = "SHELL_1_DSP_FDBK_CORE_MP_PROC_SETMP_W";
static const char *Shell1DspLpNotchLp1AKxRString = "SHELL_1_DSP_LP_NOTCH_LP1A_KX_R";
static const char *Shell1DspLpNotchLp1AKxWString = "SHELL_1_DSP_LP_NOTCH_LP1A_KX_W";
static const char *Shell1DspLpNotchLp1AKyRString = "SHELL_1_DSP_LP_NOTCH_LP1A_KY_R";
static const char *Shell1DspLpNotchLp1AKyWString = "SHELL_1_DSP_LP_NOTCH_LP1A_KY_W";
static const char *Shell1DspLpNotchLp1BKxRString = "SHELL_1_DSP_LP_NOTCH_LP1B_KX_R";
static const char *Shell1DspLpNotchLp1BKxWString = "SHELL_1_DSP_LP_NOTCH_LP1B_KX_W";
static const char *Shell1DspLpNotchLp1BKyRString = "SHELL_1_DSP_LP_NOTCH_LP1B_KY_R";
static const char *Shell1DspLpNotchLp1BKyWString = "SHELL_1_DSP_LP_NOTCH_LP1B_KY_W";
static const char *Shell1DspModuloRString = "SHELL_1_DSP_MODULO_R";
static const char *Shell1DspModuloWString = "SHELL_1_DSP_MODULO_W";
static const char *Shell1DspPhaseStepRString = "SHELL_1_DSP_PHASE_STEP_R";
static const char *Shell1DspPhaseStepWString = "SHELL_1_DSP_PHASE_STEP_W";
static const char *Shell1DspPiezoPiezoDcRString = "SHELL_1_DSP_PIEZO_PIEZO_DC_R";
static const char *Shell1DspPiezoPiezoDcWString = "SHELL_1_DSP_PIEZO_PIEZO_DC_W";
static const char *Shell1DspPiezoSfConstsRString = "SHELL_1_DSP_PIEZO_SF_CONSTS_R";
static const char *Shell1DspPiezoSfConstsWString = "SHELL_1_DSP_PIEZO_SF_CONSTS_W";
static const char *Shell1DspTagRString = "SHELL_1_DSP_TAG_R";
static const char *Shell1DspTagWString = "SHELL_1_DSP_TAG_W";
static const char *Shell1DspUseFiberIqRString = "SHELL_1_DSP_USE_FIBER_IQ_R";
static const char *Shell1DspUseFiberIqWString = "SHELL_1_DSP_USE_FIBER_IQ_W";
static const char *Shell1DspWaveSampPerRString = "SHELL_1_DSP_WAVE_SAMP_PER_R";
static const char *Shell1DspWaveSampPerWString = "SHELL_1_DSP_WAVE_SAMP_PER_W";
static const char *Shell1DspWaveShiftRString = "SHELL_1_DSP_WAVE_SHIFT_R";
static const char *Shell1DspWaveShiftWString = "SHELL_1_DSP_WAVE_SHIFT_W";
static const char *Shell1SlowDataRString = "SHELL_1_SLOW_DATA_R";
static const char *SlowChainOutRString = "SLOW_CHAIN_OUT_R";
static const char *SsaStimAmpstepRString = "SSA_STIM_AMPSTEP_R";
static const char *SsaStimAmpstepWString = "SSA_STIM_AMPSTEP_W";
static const char *SsaStimEnRString = "SSA_STIM_EN_R";
static const char *SsaStimEnWString = "SSA_STIM_EN_W";
static const char *SsaStimGPeriodRString = "SSA_STIM_G_PERIOD_R";
static const char *SsaStimGPeriodWString = "SSA_STIM_G_PERIOD_W";
static const char *SsaStimPertstepRString = "SSA_STIM_PERTSTEP_R";
static const char *SsaStimPertstepWString = "SSA_STIM_PERTSTEP_W";
static const char *TagNowRString = "TAG_NOW_R";
static const char *TagNowWString = "TAG_NOW_W";
static const char *Tgen0DelayPcXxxWString = "TGEN_0_DELAY_PC_XXX_W";
static const char *Tgen1DelayPcXxxWString = "TGEN_1_DELAY_PC_XXX_W";
static const char *TraceIBufRString = "TRACE_I_BUF_R";
static const char *TraceIqBufRString = "TRACE_IQ_BUF_R";
static const char *TraceKeepRString = "TRACE_KEEP_R";
static const char *TraceKeepWString = "TRACE_KEEP_W";
static const char *TraceQBufRString = "TRACE_Q_BUF_R";
static const char *TraceResetWeRString = "TRACE_RESET_WE_R";
static const char *TraceResetWeWString = "TRACE_RESET_WE_W";
static const char *TraceStatus1RString = "TRACE_STATUS1_R";
static const char *TraceStatus2RString = "TRACE_STATUS2_R";
static const char *TrigInternalRString = "TRIG_INTERNAL_R";
static const char *TrigInternalWString = "TRIG_INTERNAL_W";
static const char *TrigModeRString = "TRIG_MODE_R";
static const char *TrigModeWString = "TRIG_MODE_W";
static const char *Wave0OutRString = "WAVE0_OUT_R";
static const char *Wave0SrcRString = "WAVE0_SRC_R";
static const char *Wave0SrcWString = "WAVE0_SRC_W";
static const char *Wave1OutRString = "WAVE1_OUT_R";
static const char *Wave1SrcRString = "WAVE1_SRC_R";
static const char *Wave1SrcWString = "WAVE1_SRC_W";
static const char *WaveformsAvailableRString = "WAVEFORMS_AVAILABLE_R";

const unsigned int scllrfPRCPolledRegCount = 305;



 /* This class implements the AxiVersion driver. */
class scllrfPRCDriver : public scllrfAsynPortDriver {
public:
//    scllrfPRCDriver(const char *drvPortName, const char *netPortName);
    scllrfPRCDriver(const char *drvPortName, const char *netPortName, int maxAddr, int paramTableAdds);
    virtual ~scllrfPRCDriver();



protected:
    virtual asynStatus functionToRegister(const int function, FpgaReg *pToFpga); /**< Translate asyn function number/reason to a register address */
	virtual asynStatus processRegReadback(const FpgaReg *pFromFpga,
			bool &waveIsReady); // parse register data, write to PVs
	virtual asynStatus processRegWriteResponse(const FpgaReg *pFromFpga);



/* Registers */
    int p_U15SpiRdbkR;
    #define FIRST_SCLLRFPRC_PARAM p_U15SpiRdbkR
    int p_U15SpiStatusR;
    int p_U18SpiRdbkR;
    int p_U18SpiStatusR;
    int p_U2DoutLsbR;
    int p_U2DoutMsbR;
    int p_U3DoutLsbR;
    int p_U3DoutMsbR;
    int p_AdcMmcmR;
    int p_AdcMmcmW;
    int p_AdcTestModeR;
    int p_AdcTestModeW;
    int p_AdcTestResetR;
    int p_AdcTestResetW;
    int p_AdcTestTrigCntR;
    int p_AdcTestWave1OutR;
    int p_AdcTestWave2OutR;
    int p_AdcTestWave3OutR;
    int p_AdcTestWave4OutR;
    int p_AmplitudeR;
    int p_AmplitudeW;
    int p_AverageLenR;
    int p_AverageLenW;
    int p_BanyanBufR;
    int p_BanyanStatusR;
    int p_Beam0ModuloR;
    int p_Beam0ModuloW;
    int p_Beam0PhaseInitR;
    int p_Beam0PhaseInitW;
    int p_Beam0PhaseStepR;
    int p_Beam0PhaseStepW;
    int p_Beam1ModuloR;
    int p_Beam1ModuloW;
    int p_Beam1PhaseInitR;
    int p_Beam1PhaseInitW;
    int p_Beam1PhaseStepR;
    int p_Beam1PhaseStepW;
    int p_BufTrigR;
    int p_BufTrigW;
    int p_Cav4MechNoiseCoupleKOutW;
    int p_Cav4MechPrngIvaR;
    int p_Cav4MechPrngIvaW;
    int p_Cav4MechPrngIvbR;
    int p_Cav4MechPrngIvbW;
    int p_Cav4MechPrngRandomRunR;
    int p_Cav4MechPrngRandomRunW;
    int p_Cav4MechResonatorPropConstW;
    int p_Cavity0DetuneR;
    int p_Cavity1DetuneR;
    int p_Cavity0ACavOffsetR;
    int p_Cavity0ACavOffsetW;
    int p_Cavity0AForOffsetR;
    int p_Cavity0AForOffsetW;
    int p_Cavity0ARflOffsetR;
    int p_Cavity0ARflOffsetW;
    int p_Cavity0AmpLpBwR;
    int p_Cavity0AmpLpBwW;
    int p_Cavity0ComprSatCtlR;
    int p_Cavity0ComprSatCtlW;
    int p_Cavity0Dot0KOutW;
    int p_Cavity0Dot1KOutW;
    int p_Cavity0Dot2KOutW;
    int p_Cavity0DriveCoupleOutCouplingR;
    int p_Cavity0DriveCoupleOutCouplingW;
    int p_Cavity0DriveCoupleOutPhaseOffsetR;
    int p_Cavity0DriveCoupleOutPhaseOffsetW;
    int p_Cavity0Freq0CoarseFreqR;
    int p_Cavity0Freq0CoarseFreqW;
    int p_Cavity0Freq1CoarseFreqR;
    int p_Cavity0Freq1CoarseFreqW;
    int p_Cavity0Freq2CoarseFreqR;
    int p_Cavity0Freq2CoarseFreqW;
    int p_Cavity0Mode0BeamCouplingR;
    int p_Cavity0Mode0BeamCouplingW;
    int p_Cavity0Mode0BwR;
    int p_Cavity0Mode0BwW;
    int p_Cavity0Mode0CoupleOutCouplingR;
    int p_Cavity0Mode0CoupleOutCouplingW;
    int p_Cavity0Mode0CoupleOutPhaseOffsetR;
    int p_Cavity0Mode0CoupleOutPhaseOffsetW;
    int p_Cavity0Mode0DriveCouplingR;
    int p_Cavity0Mode0DriveCouplingW;
    int p_Cavity0Mode1BeamCouplingR;
    int p_Cavity0Mode1BeamCouplingW;
    int p_Cavity0Mode1BwR;
    int p_Cavity0Mode1BwW;
    int p_Cavity0Mode1CoupleOutCouplingR;
    int p_Cavity0Mode1CoupleOutCouplingW;
    int p_Cavity0Mode1CoupleOutPhaseOffsetR;
    int p_Cavity0Mode1CoupleOutPhaseOffsetW;
    int p_Cavity0Mode1DriveCouplingR;
    int p_Cavity0Mode1DriveCouplingW;
    int p_Cavity0Mode2BeamCouplingR;
    int p_Cavity0Mode2BeamCouplingW;
    int p_Cavity0Mode2BwR;
    int p_Cavity0Mode2BwW;
    int p_Cavity0Mode2CoupleOutCouplingR;
    int p_Cavity0Mode2CoupleOutCouplingW;
    int p_Cavity0Mode2CoupleOutPhaseOffsetR;
    int p_Cavity0Mode2CoupleOutPhaseOffsetW;
    int p_Cavity0Mode2DriveCouplingR;
    int p_Cavity0Mode2DriveCouplingW;
    int p_Cavity0ModuloR;
    int p_Cavity0ModuloW;
    int p_Cavity0OuterProd0KOutW;
    int p_Cavity0OuterProd1KOutW;
    int p_Cavity0OuterProd2KOutW;
    int p_Cavity0PhaseStepR;
    int p_Cavity0PhaseStepW;
    int p_Cavity0PiezoCoupleKOutW;
    int p_Cavity0PrngIvaR;
    int p_Cavity0PrngIvaW;
    int p_Cavity0PrngIvbR;
    int p_Cavity0PrngIvbW;
    int p_Cavity0PrngRandomRunR;
    int p_Cavity0PrngRandomRunW;
    int p_Cavity1ACavOffsetR;
    int p_Cavity1ACavOffsetW;
    int p_Cavity1AForOffsetR;
    int p_Cavity1AForOffsetW;
    int p_Cavity1ARflOffsetR;
    int p_Cavity1ARflOffsetW;
    int p_Cavity1AmpLpBwR;
    int p_Cavity1AmpLpBwW;
    int p_Cavity1ComprSatCtlR;
    int p_Cavity1ComprSatCtlW;
    int p_Cavity1Dot0KOutW;
    int p_Cavity1Dot1KOutW;
    int p_Cavity1Dot2KOutW;
    int p_Cavity1DriveCoupleOutCouplingR;
    int p_Cavity1DriveCoupleOutCouplingW;
    int p_Cavity1DriveCoupleOutPhaseOffsetR;
    int p_Cavity1DriveCoupleOutPhaseOffsetW;
    int p_Cavity1Freq0CoarseFreqR;
    int p_Cavity1Freq0CoarseFreqW;
    int p_Cavity1Freq1CoarseFreqR;
    int p_Cavity1Freq1CoarseFreqW;
    int p_Cavity1Freq2CoarseFreqR;
    int p_Cavity1Freq2CoarseFreqW;
    int p_Cavity1Mode0BeamCouplingR;
    int p_Cavity1Mode0BeamCouplingW;
    int p_Cavity1Mode0BwR;
    int p_Cavity1Mode0BwW;
    int p_Cavity1Mode0CoupleOutCouplingR;
    int p_Cavity1Mode0CoupleOutCouplingW;
    int p_Cavity1Mode0CoupleOutPhaseOffsetR;
    int p_Cavity1Mode0CoupleOutPhaseOffsetW;
    int p_Cavity1Mode0DriveCouplingR;
    int p_Cavity1Mode0DriveCouplingW;
    int p_Cavity1Mode1BeamCouplingR;
    int p_Cavity1Mode1BeamCouplingW;
    int p_Cavity1Mode1BwR;
    int p_Cavity1Mode1BwW;
    int p_Cavity1Mode1CoupleOutCouplingR;
    int p_Cavity1Mode1CoupleOutCouplingW;
    int p_Cavity1Mode1CoupleOutPhaseOffsetR;
    int p_Cavity1Mode1CoupleOutPhaseOffsetW;
    int p_Cavity1Mode1DriveCouplingR;
    int p_Cavity1Mode1DriveCouplingW;
    int p_Cavity1Mode2BeamCouplingR;
    int p_Cavity1Mode2BeamCouplingW;
    int p_Cavity1Mode2BwR;
    int p_Cavity1Mode2BwW;
    int p_Cavity1Mode2CoupleOutCouplingR;
    int p_Cavity1Mode2CoupleOutCouplingW;
    int p_Cavity1Mode2CoupleOutPhaseOffsetR;
    int p_Cavity1Mode2CoupleOutPhaseOffsetW;
    int p_Cavity1Mode2DriveCouplingR;
    int p_Cavity1Mode2DriveCouplingW;
    int p_Cavity1ModuloR;
    int p_Cavity1ModuloW;
    int p_Cavity1OuterProd0KOutW;
    int p_Cavity1OuterProd1KOutW;
    int p_Cavity1OuterProd2KOutW;
    int p_Cavity1PhaseStepR;
    int p_Cavity1PhaseStepW;
    int p_Cavity1PiezoCoupleKOutW;
    int p_Cavity1PrngIvaR;
    int p_Cavity1PrngIvaW;
    int p_Cavity1PrngIvbR;
    int p_Cavity1PrngIvbW;
    int p_Cavity1PrngRandomRunR;
    int p_Cavity1PrngRandomRunW;
    int p_CcErrorClearR;
    int p_CcErrorClearW;
    int p_CcLoc1R;
    int p_CcLoc1W;
    int p_Cct1Cavity0StatusAuxR;
    int p_Cct1Cavity0StatusAuxW;
    int p_Cct1Cavity1StatusAuxR;
    int p_Cct1Cavity1StatusAuxW;
    int p_CicPeriodR;
    int p_CicPeriodW;
    int p_CicShiftR;
    int p_CicShiftW;
    int p_CircleBufFlipR;
    int p_CircleBufFlipW;
    int p_ClkPhaseDiffOutU2R;
    int p_ClkPhaseDiffOutU3R;
    int p_ClkStatusOutR;
    int p_ConfigU15SpiDataAddrRR;
    int p_ConfigU15SpiDataAddrRW;
    int p_ConfigU15SpiReadAndStartRR;
    int p_ConfigU15SpiReadAndStartRW;
    int p_ConfigU18SpiDataAddrRR;
    int p_ConfigU18SpiDataAddrRW;
    int p_ConfigU18SpiReadAndStartRR;
    int p_ConfigU18SpiReadAndStartRW;
    int p_ConfigU2ClkResetRR;
    int p_ConfigU2ClkResetRW;
    int p_ConfigU2IserdesResetRR;
    int p_ConfigU2IserdesResetRW;
    int p_ConfigU3ClkResetRR;
    int p_ConfigU3ClkResetRW;
    int p_ConfigU3IserdesResetRR;
    int p_ConfigU3IserdesResetRW;
    int p_ConfigU4ResetRR;
    int p_ConfigU4ResetRW;
    int p_ConfigBanyanMaskR;
    int p_ConfigBanyanMaskW;
    int p_ConfigBitslipR;
    int p_ConfigBitslipW;
    int p_ConfigClkStatusWeR;
    int p_ConfigClkStatusWeW;
    int p_ConfigIdelayctrlResetRR;
    int p_ConfigIdelayctrlResetRW;
    int p_ConfigLlspiWeR;
    int p_ConfigLlspiWeW;
    int p_ConfigMmcmResetRR;
    int p_ConfigMmcmResetRW;
    int p_ConfigPeriphConfigR;
    int p_ConfigPeriphConfigW;
    int p_ConfigPhasexTrigR;
    int p_ConfigPhasexTrigW;
    int p_ConfigRawadcTrigR;
    int p_ConfigRawadcTrigW;
    int p_ConfigScanTriggerWeR;
    int p_ConfigScanTriggerWeW;
    int p_ConfigScannerDebugR;
    int p_ConfigScannerDebugW;
    int p_ConfigSyncAd7794CsetR;
    int p_ConfigSyncAd7794CsetW;
    int p_ConfigSyncTps62210CsetR;
    int p_ConfigSyncTps62210CsetW;
    int p_CrcErrorsR;
    int p_CtraceRunningR;
    int p_DacDdsResetR;
    int p_DacDdsResetW;
    int p_DacIqPhaseR;
    int p_DacIqPhaseW;
    int p_DacModeR;
    int p_DacModeW;
    int p_DdsaModuloR;
    int p_DdsaModuloW;
    int p_DdsaPhstepHR;
    int p_DdsaPhstepHW;
    int p_DdsaPhstepLR;
    int p_DdsaPhstepLW;
    int p_DomainJumpRealignR;
    int p_DomainJumpRealignW;
    int p_FfffffffR;
    int p_Frequency4XoutR;
    int p_FrequencyAdcR;
    int p_FrequencyClkout3R;
    int p_FrequencyDcoR;
    int p_FrequencyGtxRxR;
    int p_FrequencyGtxTxR;
    int p_Hello0R;
    int p_Hello1R;
    int p_Hello2R;
    int p_Hello3R;
    int p_HistCountWStrobeR;
    int p_HistCountWStrobeW;
    int p_HistDoutR;
    int p_HistStatusR;
    int p_IccCfgR;
    int p_IccCfgW;
    int p_IdelayBaseR;
    int p_IdelayValueOutU2LsbR;
    int p_IdelayValueOutU2MsbR;
    int p_IdelayValueOutU3LsbR;
    int p_IdelayValueOutU3MsbR;
    int p_LlrfCircleDataR;
    int p_LlrfCircleReadyR;
    int p_LlrfDspDacEnR;
    int p_LlrfDspDacEnW;
    int p_LlspiResultR;
    int p_LlspiStatusR;
    int p_LoAmpR;
    int p_LoAmpW;
    int p_ModuloR;
    int p_ModuloW;
    int p_PhaseStepHR;
    int p_PhaseStepHW;
    int p_PhaseStepLR;
    int p_PhaseStepLW;
    int p_PhasexDoutR;
    int p_PhasexStatusR;
    int p_PrcDspCavSelR;
    int p_PrcDspCavSelW;
    int p_PrcDspPrlCfgR;
    int p_PrcDspPrlCfgW;
    int p_PrcDspPrlGainR;
    int p_PrcDspPrlGainW;
    int p_QsfpBufR;
    int p_QsfpI2CRegR;
    int p_QsfpI2CRegW;
    int p_RewindR;
    int p_RewindW;
    int p_ScannerResultR;
    int p_SfpAddressSetR;
    int p_SfpAddressSetW;
    int p_Shell0DspChanKeepR;
    int p_Shell0DspChanKeepW;
    int p_Shell0DspFdbkCoreCoarseScaleR;
    int p_Shell0DspFdbkCoreCoarseScaleW;
    int p_Shell0DspFdbkCoreMpProcCoeffR;
    int p_Shell0DspFdbkCoreMpProcCoeffW;
    int p_Shell0DspFdbkCoreMpProcLimR;
    int p_Shell0DspFdbkCoreMpProcLimW;
    int p_Shell0DspFdbkCoreMpProcPhOffsetR;
    int p_Shell0DspFdbkCoreMpProcPhOffsetW;
    int p_Shell0DspFdbkCoreMpProcSelEnR;
    int p_Shell0DspFdbkCoreMpProcSelEnW;
    int p_Shell0DspFdbkCoreMpProcSelThreshR;
    int p_Shell0DspFdbkCoreMpProcSelThreshW;
    int p_Shell0DspFdbkCoreMpProcSetmpR;
    int p_Shell0DspFdbkCoreMpProcSetmpW;
    int p_Shell0DspLpNotchLp1AKxR;
    int p_Shell0DspLpNotchLp1AKxW;
    int p_Shell0DspLpNotchLp1AKyR;
    int p_Shell0DspLpNotchLp1AKyW;
    int p_Shell0DspLpNotchLp1BKxR;
    int p_Shell0DspLpNotchLp1BKxW;
    int p_Shell0DspLpNotchLp1BKyR;
    int p_Shell0DspLpNotchLp1BKyW;
    int p_Shell0DspModuloR;
    int p_Shell0DspModuloW;
    int p_Shell0DspPhaseStepR;
    int p_Shell0DspPhaseStepW;
    int p_Shell0DspPiezoPiezoDcR;
    int p_Shell0DspPiezoPiezoDcW;
    int p_Shell0DspPiezoSfConstsR;
    int p_Shell0DspPiezoSfConstsW;
    int p_Shell0DspTagR;
    int p_Shell0DspTagW;
    int p_Shell0DspUseFiberIqR;
    int p_Shell0DspUseFiberIqW;
    int p_Shell0DspWaveSampPerR;
    int p_Shell0DspWaveSampPerW;
    int p_Shell0DspWaveShiftR;
    int p_Shell0DspWaveShiftW;
    int p_Shell0SlowDataR;
    int p_Shell1DspChanKeepR;
    int p_Shell1DspChanKeepW;
    int p_Shell1DspFdbkCoreCoarseScaleR;
    int p_Shell1DspFdbkCoreCoarseScaleW;
    int p_Shell1DspFdbkCoreMpProcCoeffR;
    int p_Shell1DspFdbkCoreMpProcCoeffW;
    int p_Shell1DspFdbkCoreMpProcLimR;
    int p_Shell1DspFdbkCoreMpProcLimW;
    int p_Shell1DspFdbkCoreMpProcPhOffsetR;
    int p_Shell1DspFdbkCoreMpProcPhOffsetW;
    int p_Shell1DspFdbkCoreMpProcSelEnR;
    int p_Shell1DspFdbkCoreMpProcSelEnW;
    int p_Shell1DspFdbkCoreMpProcSelThreshR;
    int p_Shell1DspFdbkCoreMpProcSelThreshW;
    int p_Shell1DspFdbkCoreMpProcSetmpR;
    int p_Shell1DspFdbkCoreMpProcSetmpW;
    int p_Shell1DspLpNotchLp1AKxR;
    int p_Shell1DspLpNotchLp1AKxW;
    int p_Shell1DspLpNotchLp1AKyR;
    int p_Shell1DspLpNotchLp1AKyW;
    int p_Shell1DspLpNotchLp1BKxR;
    int p_Shell1DspLpNotchLp1BKxW;
    int p_Shell1DspLpNotchLp1BKyR;
    int p_Shell1DspLpNotchLp1BKyW;
    int p_Shell1DspModuloR;
    int p_Shell1DspModuloW;
    int p_Shell1DspPhaseStepR;
    int p_Shell1DspPhaseStepW;
    int p_Shell1DspPiezoPiezoDcR;
    int p_Shell1DspPiezoPiezoDcW;
    int p_Shell1DspPiezoSfConstsR;
    int p_Shell1DspPiezoSfConstsW;
    int p_Shell1DspTagR;
    int p_Shell1DspTagW;
    int p_Shell1DspUseFiberIqR;
    int p_Shell1DspUseFiberIqW;
    int p_Shell1DspWaveSampPerR;
    int p_Shell1DspWaveSampPerW;
    int p_Shell1DspWaveShiftR;
    int p_Shell1DspWaveShiftW;
    int p_Shell1SlowDataR;
    int p_SlowChainOutR;
    int p_SsaStimAmpstepR;
    int p_SsaStimAmpstepW;
    int p_SsaStimEnR;
    int p_SsaStimEnW;
    int p_SsaStimGPeriodR;
    int p_SsaStimGPeriodW;
    int p_SsaStimPertstepR;
    int p_SsaStimPertstepW;
    int p_TagNowR;
    int p_TagNowW;
    int p_Tgen0DelayPcXxxW;
    int p_Tgen1DelayPcXxxW;
    int p_TraceIBufR;
    int p_TraceIqBufR;
    int p_TraceKeepR;
    int p_TraceKeepW;
    int p_TraceQBufR;
    int p_TraceResetWeR;
    int p_TraceResetWeW;
    int p_TraceStatus1R;
    int p_TraceStatus2R;
    int p_TrigInternalR;
    int p_TrigInternalW;
    int p_TrigModeR;
    int p_TrigModeW;
    int p_Wave0OutR;
    int p_Wave0SrcR;
    int p_Wave0SrcW;
    int p_Wave1OutR;
    int p_Wave1SrcR;
    int p_Wave1SrcW;
    int p_WaveformsAvailableR;
    #define LAST_SCLLRFPRC_PARAM p_WaveformsAvailableR

#define NUM_SCLLRFPRC_PARAMS (&LAST_SCLLRFPRC_PARAM - &FIRST_SCLLRFPRC_PARAM + NUM_SCLLRF_PARAMS + 1)


    // mapping of register names to addresses
    enum ReadRegAddrs
    {
    	Hello0RAdr = 0x00000000,
    	Hello1RAdr = 0x00000001,
    	Hello2RAdr = 0x00000002,
    	Hello3RAdr = 0x00000003,
    	LlspiStatusRAdr = 0x00000004,
    	LlspiResultRAdr = 0x00000005,
    	ClkStatusOutRAdr = 0x00000006,
    	FfffffffRAdr = 0x00000007,
    	FrequencyAdcRAdr = 0x00000008,
    	Frequency4XoutRAdr = 0x00000009,
    	FrequencyClkout3RAdr = 0x0000000A,
    	FrequencyDcoRAdr = 0x0000000B,
    	U2DoutLsbRAdr = 0x0000000C,
    	U2DoutMsbRAdr = 0x0000000D,
    	IdelayValueOutU2LsbRAdr = 0x0000000E,
    	IdelayValueOutU2MsbRAdr = 0x0000000F,
    	U3DoutLsbRAdr = 0x00000010,
    	U3DoutMsbRAdr = 0x00000011,
    	IdelayValueOutU3LsbRAdr = 0x00000012,
    	IdelayValueOutU3MsbRAdr = 0x00000013,
    	Wave0OutRAdr = 0x00000014,
    	Wave1OutRAdr = 0x00000015,
    	AdcTestWave1OutRAdr = 0x00000016,
    	AdcTestWave2OutRAdr = 0x00000017,
    	AdcTestWave3OutRAdr = 0x00000018,
    	AdcTestWave4OutRAdr = 0x00000019,
    	CtraceRunningRAdr = 0x0000001C,
    	FrequencyGtxTxRAdr = 0x0000001D,
    	FrequencyGtxRxRAdr = 0x0000001E,
    	HistStatusRAdr = 0x0000001F,
    	PhasexStatusRAdr = 0x0000002E,
    	ClkPhaseDiffOutU2RAdr = 0x0000002F,
    	ClkPhaseDiffOutU3RAdr = 0x00000030,
    	CrcErrorsRAdr = 0x00000031,
    	Cavity0DetuneRAdr = 0x00000032,
    	Cavity1DetuneRAdr = 0x00000033,
    	U15SpiRdbkRAdr = 0x00000038,
    	U15SpiStatusRAdr = 0x00000039,
    	U18SpiRdbkRAdr = 0x0000003C,
    	U18SpiStatusRAdr = 0x0000003D,
    	AdcTestTrigCntRAdr = 0x00000040,
    	WaveformsAvailableRAdr = 0x00000041,
    	BanyanStatusRAdr = 0x00000042,
    	SlowChainOutRAdr = 0x00000043,
    	TraceStatus1RAdr = 0x00000044,
    	TraceStatus2RAdr = 0x00000045,
    	LlrfCircleReadyRAdr = 0x00000046,
    	IdelayBaseRAdr = 0x00000070,
    	HistDoutRAdr = 0x00100000,
    	PhasexDoutRAdr = 0x00110000,
    	BanyanBufRAdr = 0x00120000,
    	ScannerResultRAdr = 0x00130000,
    	TraceIqBufRAdr = 0x00140000,
    	TraceIBufRAdr = 0x00148000,
    	TraceQBufRAdr = 0x0014C000,
    	QsfpBufRAdr = 0x00153000,
    	LlrfCircleDataRAdr = 0x00170000,
    	Shell0SlowDataRAdr = 0x00180000,
    	Shell1SlowDataRAdr = 0x00190000,
    	Shell0DspPiezoSfConstsRAdr = 0x00804800,
    	Shell1DspPiezoSfConstsRAdr = 0x00804808,
    	Shell0DspFdbkCoreMpProcCoeffRAdr = 0x00804810,
    	Shell0DspFdbkCoreMpProcLimRAdr = 0x00804814,
    	Shell0DspFdbkCoreMpProcSetmpRAdr = 0x00804818,
    	Shell1DspFdbkCoreMpProcCoeffRAdr = 0x0080481C,
    	Shell1DspFdbkCoreMpProcLimRAdr = 0x00804820,
    	Shell1DspFdbkCoreMpProcSetmpRAdr = 0x00804824,
    	Cavity0DriveCoupleOutCouplingRAdr = 0x00804828,
    	Cavity0DriveCoupleOutPhaseOffsetRAdr = 0x0080482A,
    	Cavity0Mode0CoupleOutCouplingRAdr = 0x0080482C,
    	Cavity0Mode0CoupleOutPhaseOffsetRAdr = 0x0080482E,
    	Cavity0Mode1CoupleOutCouplingRAdr = 0x00804830,
    	Cavity0Mode1CoupleOutPhaseOffsetRAdr = 0x00804832,
    	Cavity0Mode2CoupleOutCouplingRAdr = 0x00804834,
    	Cavity0Mode2CoupleOutPhaseOffsetRAdr = 0x00804836,
    	Cavity1DriveCoupleOutCouplingRAdr = 0x00804838,
    	Cavity1DriveCoupleOutPhaseOffsetRAdr = 0x0080483A,
    	Cavity1Mode0CoupleOutCouplingRAdr = 0x0080483C,
    	Cavity1Mode0CoupleOutPhaseOffsetRAdr = 0x0080483E,
    	Cavity1Mode1CoupleOutCouplingRAdr = 0x00804840,
    	Cavity1Mode1CoupleOutPhaseOffsetRAdr = 0x00804842,
    	Cavity1Mode2CoupleOutCouplingRAdr = 0x00804844,
    	Cavity1Mode2CoupleOutPhaseOffsetRAdr = 0x00804846,
    	Shell0DspLpNotchLp1AKxRAdr = 0x00804848,
    	Shell0DspLpNotchLp1AKyRAdr = 0x0080484A,
    	Shell0DspLpNotchLp1BKxRAdr = 0x0080484C,
    	Shell0DspLpNotchLp1BKyRAdr = 0x0080484E,
    	Shell1DspLpNotchLp1AKxRAdr = 0x00804850,
    	Shell1DspLpNotchLp1AKyRAdr = 0x00804852,
    	Shell1DspLpNotchLp1BKxRAdr = 0x00804854,
    	Shell1DspLpNotchLp1BKyRAdr = 0x00804856,
    	AdcMmcmRAdr = 0x00804858,
    	CcErrorClearRAdr = 0x00804859,
    	CcLoc1RAdr = 0x0080485A,
    	Cct1Cavity0StatusAuxRAdr = 0x0080485B,
    	Cct1Cavity1StatusAuxRAdr = 0x0080485C,
    	ConfigU15SpiDataAddrRRAdr = 0x0080485D,
    	ConfigU15SpiReadAndStartRRAdr = 0x0080485E,
    	ConfigU18SpiDataAddrRRAdr = 0x0080485F,
    	ConfigU18SpiReadAndStartRRAdr = 0x00804860,
    	ConfigU2ClkResetRRAdr = 0x00804861,
    	ConfigU2IserdesResetRRAdr = 0x00804862,
    	ConfigU3ClkResetRRAdr = 0x00804863,
    	ConfigU3IserdesResetRRAdr = 0x00804864,
    	ConfigU4ResetRRAdr = 0x00804865,
    	ConfigBanyanMaskRAdr = 0x00804866,
    	ConfigBitslipRAdr = 0x00804867,
    	ConfigClkStatusWeRAdr = 0x00804868,
    	ConfigIdelayctrlResetRRAdr = 0x00804869,
    	ConfigLlspiWeRAdr = 0x0080486A,
    	ConfigMmcmResetRRAdr = 0x0080486B,
    	ConfigPeriphConfigRAdr = 0x0080486C,
    	ConfigPhasexTrigRAdr = 0x0080486D,
    	ConfigRawadcTrigRAdr = 0x0080486E,
    	ConfigScanTriggerWeRAdr = 0x0080486F,
    	ConfigScannerDebugRAdr = 0x00804870,
    	ConfigSyncAd7794CsetRAdr = 0x00804871,
    	ConfigSyncTps62210CsetRAdr = 0x00804872,
    	AdcTestModeRAdr = 0x00804873,
    	AdcTestResetRAdr = 0x00804874,
    	AmplitudeRAdr = 0x00804875,
    	AverageLenRAdr = 0x00804876,
    	BufTrigRAdr = 0x00804877,
    	CicPeriodRAdr = 0x00804878,
    	CicShiftRAdr = 0x00804879,
    	CircleBufFlipRAdr = 0x0080487A,
    	DacDdsResetRAdr = 0x0080487B,
    	DacModeRAdr = 0x0080487C,
    	DdsaModuloRAdr = 0x0080487D,
    	DdsaPhstepHRAdr = 0x0080487E,
    	DdsaPhstepLRAdr = 0x0080487F,
    	HistCountWStrobeRAdr = 0x00804880,
    	LlrfDspDacEnRAdr = 0x00804881,
    	LoAmpRAdr = 0x00804882,
    	ModuloRAdr = 0x00804883,
    	PhaseStepHRAdr = 0x00804884,
    	PhaseStepLRAdr = 0x00804885,
    	PrcDspCavSelRAdr = 0x00804886,
    	PrcDspPrlCfgRAdr = 0x00804887,
    	PrcDspPrlGainRAdr = 0x00804888,
    	Beam0ModuloRAdr = 0x00804889,
    	Beam0PhaseInitRAdr = 0x0080488A,
    	Beam0PhaseStepRAdr = 0x0080488B,
    	Beam1ModuloRAdr = 0x0080488C,
    	Beam1PhaseInitRAdr = 0x0080488D,
    	Beam1PhaseStepRAdr = 0x0080488E,
    	Cav4MechPrngIvaRAdr = 0x0080488F,
    	Cav4MechPrngIvbRAdr = 0x00804890,
    	Cav4MechPrngRandomRunRAdr = 0x00804891,
    	Cavity0ACavOffsetRAdr = 0x00804892,
    	Cavity0AForOffsetRAdr = 0x00804893,
    	Cavity0ARflOffsetRAdr = 0x00804894,
    	Cavity0AmpLpBwRAdr = 0x00804895,
    	Cavity0Freq0CoarseFreqRAdr = 0x00804896,
    	Cavity0Freq1CoarseFreqRAdr = 0x00804897,
    	Cavity0Freq2CoarseFreqRAdr = 0x00804898,
    	Cavity0Mode0BeamCouplingRAdr = 0x00804899,
    	Cavity0Mode0BwRAdr = 0x0080489A,
    	Cavity0Mode0DriveCouplingRAdr = 0x0080489B,
    	Cavity0Mode1BeamCouplingRAdr = 0x0080489C,
    	Cavity0Mode1BwRAdr = 0x0080489D,
    	Cavity0Mode1DriveCouplingRAdr = 0x0080489E,
    	Cavity0Mode2BeamCouplingRAdr = 0x0080489F,
    	Cavity0Mode2BwRAdr = 0x008048A0,
    	Cavity0Mode2DriveCouplingRAdr = 0x008048A1,
    	Cavity0ModuloRAdr = 0x008048A2,
    	Cavity0PhaseStepRAdr = 0x008048A3,
    	Cavity0ComprSatCtlRAdr = 0x008048A4,
    	Cavity0PrngIvaRAdr = 0x008048A5,
    	Cavity0PrngIvbRAdr = 0x008048A6,
    	Cavity0PrngRandomRunRAdr = 0x008048A7,
    	Cavity1ACavOffsetRAdr = 0x008048A8,
    	Cavity1AForOffsetRAdr = 0x008048A9,
    	Cavity1ARflOffsetRAdr = 0x008048AA,
    	Cavity1AmpLpBwRAdr = 0x008048AB,
    	Cavity1Freq0CoarseFreqRAdr = 0x008048AC,
    	Cavity1Freq1CoarseFreqRAdr = 0x008048AD,
    	Cavity1Freq2CoarseFreqRAdr = 0x008048AE,
    	Cavity1Mode0BeamCouplingRAdr = 0x008048AF,
    	Cavity1Mode0BwRAdr = 0x008048B0,
    	Cavity1Mode0DriveCouplingRAdr = 0x008048B1,
    	Cavity1Mode1BeamCouplingRAdr = 0x008048B2,
    	Cavity1Mode1BwRAdr = 0x008048B3,
    	Cavity1Mode1DriveCouplingRAdr = 0x008048B4,
    	Cavity1Mode2BeamCouplingRAdr = 0x008048B5,
    	Cavity1Mode2BwRAdr = 0x008048B6,
    	Cavity1Mode2DriveCouplingRAdr = 0x008048B7,
    	Cavity1ModuloRAdr = 0x008048B8,
    	Cavity1PhaseStepRAdr = 0x008048B9,
    	Cavity1ComprSatCtlRAdr = 0x008048BA,
    	Cavity1PrngIvaRAdr = 0x008048BB,
    	Cavity1PrngIvbRAdr = 0x008048BC,
    	Cavity1PrngRandomRunRAdr = 0x008048BD,
    	DacIqPhaseRAdr = 0x008048BE,
    	Shell0DspChanKeepRAdr = 0x008048BF,
    	Shell0DspFdbkCoreCoarseScaleRAdr = 0x008048C0,
    	Shell0DspFdbkCoreMpProcPhOffsetRAdr = 0x008048C1,
    	Shell0DspFdbkCoreMpProcSelEnRAdr = 0x008048C2,
    	Shell0DspFdbkCoreMpProcSelThreshRAdr = 0x008048C3,
    	Shell0DspModuloRAdr = 0x008048C4,
    	Shell0DspPhaseStepRAdr = 0x008048C5,
    	Shell0DspPiezoPiezoDcRAdr = 0x008048C6,
    	Shell0DspTagRAdr = 0x008048C7,
    	Shell0DspUseFiberIqRAdr = 0x008048C8,
    	Shell0DspWaveSampPerRAdr = 0x008048C9,
    	Shell0DspWaveShiftRAdr = 0x008048CA,
    	Shell1DspChanKeepRAdr = 0x008048CB,
    	Shell1DspFdbkCoreCoarseScaleRAdr = 0x008048CC,
    	Shell1DspFdbkCoreMpProcPhOffsetRAdr = 0x008048CD,
    	Shell1DspFdbkCoreMpProcSelEnRAdr = 0x008048CE,
    	Shell1DspFdbkCoreMpProcSelThreshRAdr = 0x008048CF,
    	Shell1DspModuloRAdr = 0x008048D0,
    	Shell1DspPhaseStepRAdr = 0x008048D1,
    	Shell1DspPiezoPiezoDcRAdr = 0x008048D2,
    	Shell1DspTagRAdr = 0x008048D3,
    	Shell1DspUseFiberIqRAdr = 0x008048D4,
    	Shell1DspWaveSampPerRAdr = 0x008048D5,
    	Shell1DspWaveShiftRAdr = 0x008048D6,
    	RewindRAdr = 0x008048D7,
    	SsaStimAmpstepRAdr = 0x008048D8,
    	SsaStimEnRAdr = 0x008048D9,
    	SsaStimGPeriodRAdr = 0x008048DA,
    	SsaStimPertstepRAdr = 0x008048DB,
    	TraceKeepRAdr = 0x008048DC,
    	TraceResetWeRAdr = 0x008048DD,
    	TrigInternalRAdr = 0x008048DE,
    	TrigModeRAdr = 0x008048DF,
    	Wave0SrcRAdr = 0x008048E0,
    	Wave1SrcRAdr = 0x008048E1,
    	DomainJumpRealignRAdr = 0x008048E2,
    	IccCfgRAdr = 0x008048E3,
    	QsfpI2CRegRAdr = 0x008048E4,
    	SfpAddressSetRAdr = 0x008048E5,
    	TagNowRAdr = 0x008048E6,
    };

    // mapping of register names to addresses
    enum RegWriteAddrs
    {
    	Cav4MechNoiseCoupleKOutWAdr = 0x00800000,
    	Cav4MechResonatorPropConstWAdr = 0x00800400,
    	Cavity0Dot0KOutWAdr = 0x00800800,
    	Cavity0Dot1KOutWAdr = 0x00800C00,
    	Cavity0Dot2KOutWAdr = 0x00801000,
    	Cavity0OuterProd0KOutWAdr = 0x00801400,
    	Cavity0OuterProd1KOutWAdr = 0x00801800,
    	Cavity0OuterProd2KOutWAdr = 0x00801C00,
    	Cavity0PiezoCoupleKOutWAdr = 0x00802000,
    	Cavity1Dot0KOutWAdr = 0x00802400,
    	Cavity1Dot1KOutWAdr = 0x00802800,
    	Cavity1Dot2KOutWAdr = 0x00802C00,
    	Cavity1OuterProd0KOutWAdr = 0x00803000,
    	Cavity1OuterProd1KOutWAdr = 0x00803400,
    	Cavity1OuterProd2KOutWAdr = 0x00803800,
    	Cavity1PiezoCoupleKOutWAdr = 0x00803C00,
    	Tgen0DelayPcXxxWAdr = 0x00804000,
    	Tgen1DelayPcXxxWAdr = 0x00804400,
    	Shell0DspPiezoSfConstsWAdr = 0x00804800,
    	Shell1DspPiezoSfConstsWAdr = 0x00804808,
    	Shell0DspFdbkCoreMpProcCoeffWAdr = 0x00804810,
    	Shell0DspFdbkCoreMpProcLimWAdr = 0x00804814,
    	Shell0DspFdbkCoreMpProcSetmpWAdr = 0x00804818,
    	Shell1DspFdbkCoreMpProcCoeffWAdr = 0x0080481C,
    	Shell1DspFdbkCoreMpProcLimWAdr = 0x00804820,
    	Shell1DspFdbkCoreMpProcSetmpWAdr = 0x00804824,
    	Cavity0DriveCoupleOutCouplingWAdr = 0x00804828,
    	Cavity0DriveCoupleOutPhaseOffsetWAdr = 0x0080482A,
    	Cavity0Mode0CoupleOutCouplingWAdr = 0x0080482C,
    	Cavity0Mode0CoupleOutPhaseOffsetWAdr = 0x0080482E,
    	Cavity0Mode1CoupleOutCouplingWAdr = 0x00804830,
    	Cavity0Mode1CoupleOutPhaseOffsetWAdr = 0x00804832,
    	Cavity0Mode2CoupleOutCouplingWAdr = 0x00804834,
    	Cavity0Mode2CoupleOutPhaseOffsetWAdr = 0x00804836,
    	Cavity1DriveCoupleOutCouplingWAdr = 0x00804838,
    	Cavity1DriveCoupleOutPhaseOffsetWAdr = 0x0080483A,
    	Cavity1Mode0CoupleOutCouplingWAdr = 0x0080483C,
    	Cavity1Mode0CoupleOutPhaseOffsetWAdr = 0x0080483E,
    	Cavity1Mode1CoupleOutCouplingWAdr = 0x00804840,
    	Cavity1Mode1CoupleOutPhaseOffsetWAdr = 0x00804842,
    	Cavity1Mode2CoupleOutCouplingWAdr = 0x00804844,
    	Cavity1Mode2CoupleOutPhaseOffsetWAdr = 0x00804846,
    	Shell0DspLpNotchLp1AKxWAdr = 0x00804848,
    	Shell0DspLpNotchLp1AKyWAdr = 0x0080484A,
    	Shell0DspLpNotchLp1BKxWAdr = 0x0080484C,
    	Shell0DspLpNotchLp1BKyWAdr = 0x0080484E,
    	Shell1DspLpNotchLp1AKxWAdr = 0x00804850,
    	Shell1DspLpNotchLp1AKyWAdr = 0x00804852,
    	Shell1DspLpNotchLp1BKxWAdr = 0x00804854,
    	Shell1DspLpNotchLp1BKyWAdr = 0x00804856,
    	AdcMmcmWAdr = 0x00804858,
    	CcErrorClearWAdr = 0x00804859,
    	CcLoc1WAdr = 0x0080485A,
    	Cct1Cavity0StatusAuxWAdr = 0x0080485B,
    	Cct1Cavity1StatusAuxWAdr = 0x0080485C,
    	ConfigU15SpiDataAddrRWAdr = 0x0080485D,
    	ConfigU15SpiReadAndStartRWAdr = 0x0080485E,
    	ConfigU18SpiDataAddrRWAdr = 0x0080485F,
    	ConfigU18SpiReadAndStartRWAdr = 0x00804860,
    	ConfigU2ClkResetRWAdr = 0x00804861,
    	ConfigU2IserdesResetRWAdr = 0x00804862,
    	ConfigU3ClkResetRWAdr = 0x00804863,
    	ConfigU3IserdesResetRWAdr = 0x00804864,
    	ConfigU4ResetRWAdr = 0x00804865,
    	ConfigBanyanMaskWAdr = 0x00804866,
    	ConfigBitslipWAdr = 0x00804867,
    	ConfigClkStatusWeWAdr = 0x00804868,
    	ConfigIdelayctrlResetRWAdr = 0x00804869,
    	ConfigLlspiWeWAdr = 0x0080486A,
    	ConfigMmcmResetRWAdr = 0x0080486B,
    	ConfigPeriphConfigWAdr = 0x0080486C,
    	ConfigPhasexTrigWAdr = 0x0080486D,
    	ConfigRawadcTrigWAdr = 0x0080486E,
    	ConfigScanTriggerWeWAdr = 0x0080486F,
    	ConfigScannerDebugWAdr = 0x00804870,
    	ConfigSyncAd7794CsetWAdr = 0x00804871,
    	ConfigSyncTps62210CsetWAdr = 0x00804872,
    	AdcTestModeWAdr = 0x00804873,
    	AdcTestResetWAdr = 0x00804874,
    	AmplitudeWAdr = 0x00804875,
    	AverageLenWAdr = 0x00804876,
    	BufTrigWAdr = 0x00804877,
    	CicPeriodWAdr = 0x00804878,
    	CicShiftWAdr = 0x00804879,
    	CircleBufFlipWAdr = 0x0080487A,
    	DacDdsResetWAdr = 0x0080487B,
    	DacModeWAdr = 0x0080487C,
    	DdsaModuloWAdr = 0x0080487D,
    	DdsaPhstepHWAdr = 0x0080487E,
    	DdsaPhstepLWAdr = 0x0080487F,
    	HistCountWStrobeWAdr = 0x00804880,
    	LlrfDspDacEnWAdr = 0x00804881,
    	LoAmpWAdr = 0x00804882,
    	ModuloWAdr = 0x00804883,
    	PhaseStepHWAdr = 0x00804884,
    	PhaseStepLWAdr = 0x00804885,
    	PrcDspCavSelWAdr = 0x00804886,
    	PrcDspPrlCfgWAdr = 0x00804887,
    	PrcDspPrlGainWAdr = 0x00804888,
    	Beam0ModuloWAdr = 0x00804889,
    	Beam0PhaseInitWAdr = 0x0080488A,
    	Beam0PhaseStepWAdr = 0x0080488B,
    	Beam1ModuloWAdr = 0x0080488C,
    	Beam1PhaseInitWAdr = 0x0080488D,
    	Beam1PhaseStepWAdr = 0x0080488E,
    	Cav4MechPrngIvaWAdr = 0x0080488F,
    	Cav4MechPrngIvbWAdr = 0x00804890,
    	Cav4MechPrngRandomRunWAdr = 0x00804891,
    	Cavity0ACavOffsetWAdr = 0x00804892,
    	Cavity0AForOffsetWAdr = 0x00804893,
    	Cavity0ARflOffsetWAdr = 0x00804894,
    	Cavity0AmpLpBwWAdr = 0x00804895,
    	Cavity0Freq0CoarseFreqWAdr = 0x00804896,
    	Cavity0Freq1CoarseFreqWAdr = 0x00804897,
    	Cavity0Freq2CoarseFreqWAdr = 0x00804898,
    	Cavity0Mode0BeamCouplingWAdr = 0x00804899,
    	Cavity0Mode0BwWAdr = 0x0080489A,
    	Cavity0Mode0DriveCouplingWAdr = 0x0080489B,
    	Cavity0Mode1BeamCouplingWAdr = 0x0080489C,
    	Cavity0Mode1BwWAdr = 0x0080489D,
    	Cavity0Mode1DriveCouplingWAdr = 0x0080489E,
    	Cavity0Mode2BeamCouplingWAdr = 0x0080489F,
    	Cavity0Mode2BwWAdr = 0x008048A0,
    	Cavity0Mode2DriveCouplingWAdr = 0x008048A1,
    	Cavity0ModuloWAdr = 0x008048A2,
    	Cavity0PhaseStepWAdr = 0x008048A3,
    	Cavity0ComprSatCtlWAdr = 0x008048A4,
    	Cavity0PrngIvaWAdr = 0x008048A5,
    	Cavity0PrngIvbWAdr = 0x008048A6,
    	Cavity0PrngRandomRunWAdr = 0x008048A7,
    	Cavity1ACavOffsetWAdr = 0x008048A8,
    	Cavity1AForOffsetWAdr = 0x008048A9,
    	Cavity1ARflOffsetWAdr = 0x008048AA,
    	Cavity1AmpLpBwWAdr = 0x008048AB,
    	Cavity1Freq0CoarseFreqWAdr = 0x008048AC,
    	Cavity1Freq1CoarseFreqWAdr = 0x008048AD,
    	Cavity1Freq2CoarseFreqWAdr = 0x008048AE,
    	Cavity1Mode0BeamCouplingWAdr = 0x008048AF,
    	Cavity1Mode0BwWAdr = 0x008048B0,
    	Cavity1Mode0DriveCouplingWAdr = 0x008048B1,
    	Cavity1Mode1BeamCouplingWAdr = 0x008048B2,
    	Cavity1Mode1BwWAdr = 0x008048B3,
    	Cavity1Mode1DriveCouplingWAdr = 0x008048B4,
    	Cavity1Mode2BeamCouplingWAdr = 0x008048B5,
    	Cavity1Mode2BwWAdr = 0x008048B6,
    	Cavity1Mode2DriveCouplingWAdr = 0x008048B7,
    	Cavity1ModuloWAdr = 0x008048B8,
    	Cavity1PhaseStepWAdr = 0x008048B9,
    	Cavity1ComprSatCtlWAdr = 0x008048BA,
    	Cavity1PrngIvaWAdr = 0x008048BB,
    	Cavity1PrngIvbWAdr = 0x008048BC,
    	Cavity1PrngRandomRunWAdr = 0x008048BD,
    	DacIqPhaseWAdr = 0x008048BE,
    	Shell0DspChanKeepWAdr = 0x008048BF,
    	Shell0DspFdbkCoreCoarseScaleWAdr = 0x008048C0,
    	Shell0DspFdbkCoreMpProcPhOffsetWAdr = 0x008048C1,
    	Shell0DspFdbkCoreMpProcSelEnWAdr = 0x008048C2,
    	Shell0DspFdbkCoreMpProcSelThreshWAdr = 0x008048C3,
    	Shell0DspModuloWAdr = 0x008048C4,
    	Shell0DspPhaseStepWAdr = 0x008048C5,
    	Shell0DspPiezoPiezoDcWAdr = 0x008048C6,
    	Shell0DspTagWAdr = 0x008048C7,
    	Shell0DspUseFiberIqWAdr = 0x008048C8,
    	Shell0DspWaveSampPerWAdr = 0x008048C9,
    	Shell0DspWaveShiftWAdr = 0x008048CA,
    	Shell1DspChanKeepWAdr = 0x008048CB,
    	Shell1DspFdbkCoreCoarseScaleWAdr = 0x008048CC,
    	Shell1DspFdbkCoreMpProcPhOffsetWAdr = 0x008048CD,
    	Shell1DspFdbkCoreMpProcSelEnWAdr = 0x008048CE,
    	Shell1DspFdbkCoreMpProcSelThreshWAdr = 0x008048CF,
    	Shell1DspModuloWAdr = 0x008048D0,
    	Shell1DspPhaseStepWAdr = 0x008048D1,
    	Shell1DspPiezoPiezoDcWAdr = 0x008048D2,
    	Shell1DspTagWAdr = 0x008048D3,
    	Shell1DspUseFiberIqWAdr = 0x008048D4,
    	Shell1DspWaveSampPerWAdr = 0x008048D5,
    	Shell1DspWaveShiftWAdr = 0x008048D6,
    	RewindWAdr = 0x008048D7,
    	SsaStimAmpstepWAdr = 0x008048D8,
    	SsaStimEnWAdr = 0x008048D9,
    	SsaStimGPeriodWAdr = 0x008048DA,
    	SsaStimPertstepWAdr = 0x008048DB,
    	TraceKeepWAdr = 0x008048DC,
    	TraceResetWeWAdr = 0x008048DD,
    	TrigInternalWAdr = 0x008048DE,
    	TrigModeWAdr = 0x008048DF,
    	Wave0SrcWAdr = 0x008048E0,
    	Wave1SrcWAdr = 0x008048E1,
    	DomainJumpRealignWAdr = 0x008048E2,
    	IccCfgWAdr = 0x008048E3,
    	QsfpI2CRegWAdr = 0x008048E4,
    	SfpAddressSetWAdr = 0x008048E5,
    	TagNowWAdr = 0x008048E6,
    };

    // masks applied to returned register data
    enum RegMasks
    {
    	Hello0Mask =  0xFFFFFFFF,
    	Hello1Mask =  0xFFFFFFFF,
    	Hello2Mask =  0xFFFFFFFF,
    	Hello3Mask =  0xFFFFFFFF,
    	LlspiStatusMask =  0x000000FF,
    	LlspiResultMask =  0x000000FF,
    	ClkStatusOutMask =  0x00000003,
    	FfffffffMask =  0xFFFFFFFF,
    	FrequencyAdcMask =  0x0FFFFFFF,
    	Frequency4XoutMask =  0x0FFFFFFF,
    	FrequencyClkout3Mask =  0x0FFFFFFF,
    	FrequencyDcoMask =  0x0FFFFFFF,
    	U2DoutLsbMask =  0xFFFFFFFF,
    	U2DoutMsbMask =  0xFFFFFFFF,
    	IdelayValueOutU2LsbMask =  0x000FFFFF,
    	IdelayValueOutU2MsbMask =  0x000FFFFF,
    	U3DoutLsbMask =  0xFFFFFFFF,
    	U3DoutMsbMask =  0xFFFFFFFF,
    	IdelayValueOutU3LsbMask =  0x000FFFFF,
    	IdelayValueOutU3MsbMask =  0x000FFFFF,
    	Wave0OutMask =  0x000FFFFF,
    	Wave1OutMask =  0x000FFFFF,
    	AdcTestWave1OutMask =  0x000FFFFF,
    	AdcTestWave2OutMask =  0x000FFFFF,
    	AdcTestWave3OutMask =  0x000FFFFF,
    	AdcTestWave4OutMask =  0x000FFFFF,
    	CtraceRunningMask =  0x00003FFF,
    	FrequencyGtxTxMask =  0xFFFFFFFF,
    	FrequencyGtxRxMask =  0x0FFFFFFF,
    	HistStatusMask =  0x00000003,
    	PhasexStatusMask =  0x00000003,
    	ClkPhaseDiffOutU2Mask =  0x00001FFF,
    	ClkPhaseDiffOutU3Mask =  0x00001FFF,
    	CrcErrorsMask =  0x0000FFFF,
    	Cavity0DetuneMask =  0x0000FFFF,
    	Cavity1DetuneMask =  0x0000FFFF,
    	U15SpiRdbkMask =  0xFFFFFFFF,
    	U15SpiStatusMask =  0x00000003,
    	U18SpiRdbkMask =  0xFFFFFFFF,
    	U18SpiStatusMask =  0x00000003,
    	AdcTestTrigCntMask =  0xFFFFFFFF,
    	WaveformsAvailableMask =  0xFFFFFFFF,
    	BanyanStatusMask =  0xFFFFFFFF,
    	SlowChainOutMask =  0x000000FF,
    	TraceStatus1Mask =  0xFFFFFFFF,
    	TraceStatus2Mask =  0xFFFFFFFF,
    	LlrfCircleReadyMask =  0x00000003,
    	IdelayBaseMask =  0x0000007F,
    	HistDoutMask =  0x0000FFFF,
    	PhasexDoutMask =  0x0000FFFF,
    	BanyanBufMask =  0xFFFFFFFF,
    	ScannerResultMask =  0x000000FF,
    	TraceIqBufMask =  0xFFFFFFFF,
    	TraceIBufMask =  0xFFFFFFFF,
    	TraceQBufMask =  0xFFFFFFFF,
    	QsfpBufMask =  0x000000FF,
    	LlrfCircleDataMask =  0x0000FFFF,
    	Shell0SlowDataMask =  0x000000FF,
    	Shell1SlowDataMask =  0x000000FF,
    	Cav4MechNoiseCoupleKOutMask =  0x0003FFFF,
    	Cav4MechResonatorPropConstMask =  0x001FFFFF,
    	Cavity0Dot0KOutMask =  0x0003FFFF,
    	Cavity0Dot1KOutMask =  0x0003FFFF,
    	Cavity0Dot2KOutMask =  0x0003FFFF,
    	Cavity0OuterProd0KOutMask =  0x0003FFFF,
    	Cavity0OuterProd1KOutMask =  0x0003FFFF,
    	Cavity0OuterProd2KOutMask =  0x0003FFFF,
    	Cavity0PiezoCoupleKOutMask =  0x0003FFFF,
    	Cavity1Dot0KOutMask =  0x0003FFFF,
    	Cavity1Dot1KOutMask =  0x0003FFFF,
    	Cavity1Dot2KOutMask =  0x0003FFFF,
    	Cavity1OuterProd0KOutMask =  0x0003FFFF,
    	Cavity1OuterProd1KOutMask =  0x0003FFFF,
    	Cavity1OuterProd2KOutMask =  0x0003FFFF,
    	Cavity1PiezoCoupleKOutMask =  0x0003FFFF,
    	Tgen0DelayPcXxxMask =  0xFFFFFFFF,
    	Tgen1DelayPcXxxMask =  0xFFFFFFFF,
    	Shell0DspPiezoSfConstsMask =  0x000FFFFF,
    	Shell1DspPiezoSfConstsMask =  0x000FFFFF,
    	Shell0DspFdbkCoreMpProcCoeffMask =  0x0003FFFF,
    	Shell0DspFdbkCoreMpProcLimMask =  0x0003FFFF,
    	Shell0DspFdbkCoreMpProcSetmpMask =  0x0003FFFF,
    	Shell1DspFdbkCoreMpProcCoeffMask =  0x0003FFFF,
    	Shell1DspFdbkCoreMpProcLimMask =  0x0003FFFF,
    	Shell1DspFdbkCoreMpProcSetmpMask =  0x0003FFFF,
    	Cavity0DriveCoupleOutCouplingMask =  0x0003FFFF,
    	Cavity0DriveCoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity0Mode0CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity0Mode0CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity0Mode1CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity0Mode1CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity0Mode2CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity0Mode2CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity1DriveCoupleOutCouplingMask =  0x0003FFFF,
    	Cavity1DriveCoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity1Mode0CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity1Mode0CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity1Mode1CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity1Mode1CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Cavity1Mode2CoupleOutCouplingMask =  0x0003FFFF,
    	Cavity1Mode2CoupleOutPhaseOffsetMask =  0x0007FFFF,
    	Shell0DspLpNotchLp1AKxMask =  0x0003FFFF,
    	Shell0DspLpNotchLp1AKyMask =  0x0003FFFF,
    	Shell0DspLpNotchLp1BKxMask =  0x0003FFFF,
    	Shell0DspLpNotchLp1BKyMask =  0x0003FFFF,
    	Shell1DspLpNotchLp1AKxMask =  0x0003FFFF,
    	Shell1DspLpNotchLp1AKyMask =  0x0003FFFF,
    	Shell1DspLpNotchLp1BKxMask =  0x0003FFFF,
    	Shell1DspLpNotchLp1BKyMask =  0x0003FFFF,
    	AdcMmcmMask =  0x00000003,
    	CcErrorClearMask =  0x00000001,
    	CcLoc1Mask =  0x00000007,
    	Cct1Cavity0StatusAuxMask =  0x0000FFFF,
    	Cct1Cavity1StatusAuxMask =  0x0000FFFF,
    	ConfigU15SpiDataAddrRMask =  0xFFFFFFFF,
    	ConfigU15SpiReadAndStartRMask =  0x00000003,
    	ConfigU18SpiDataAddrRMask =  0xFFFFFFFF,
    	ConfigU18SpiReadAndStartRMask =  0x00000003,
    	ConfigU2ClkResetRMask =  0x00000001,
    	ConfigU2IserdesResetRMask =  0x00000001,
    	ConfigU3ClkResetRMask =  0x00000001,
    	ConfigU3IserdesResetRMask =  0x00000001,
    	ConfigU4ResetRMask =  0x00000001,
    	ConfigBanyanMaskMask =  0x000000FF,
    	ConfigBitslipMask =  0x0000FFFF,
    	ConfigClkStatusWeMask =  0x00000001,
    	ConfigIdelayctrlResetRMask =  0x00000001,
    	ConfigLlspiWeMask =  0x00000001,
    	ConfigMmcmResetRMask =  0x00000001,
    	ConfigPeriphConfigMask =  0xFFFFFFFF,
    	ConfigPhasexTrigMask =  0x00000001,
    	ConfigRawadcTrigMask =  0x00000001,
    	ConfigScanTriggerWeMask =  0x00000001,
    	ConfigScannerDebugMask =  0x0000001F,
    	ConfigSyncAd7794CsetMask =  0x000003FF,
    	ConfigSyncTps62210CsetMask =  0x0000003F,
    	AdcTestModeMask =  0x00000007,
    	AdcTestResetMask =  0x00000001,
    	AmplitudeMask =  0x0000FFFF,
    	AverageLenMask =  0x3FFFFFFF,
    	BufTrigMask =  0x00000001,
    	CicPeriodMask =  0x00003FFF,
    	CicShiftMask =  0x0000000F,
    	CircleBufFlipMask =  0x00000003,
    	DacDdsResetMask =  0x00000001,
    	DacModeMask =  0x0000000F,
    	DdsaModuloMask =  0x00000FFF,
    	DdsaPhstepHMask =  0x000FFFFF,
    	DdsaPhstepLMask =  0x00000FFF,
    	HistCountWStrobeMask =  0x00000001,
    	LlrfDspDacEnMask =  0x00000001,
    	LoAmpMask =  0x0003FFFF,
    	ModuloMask =  0x00000FFF,
    	PhaseStepHMask =  0x000FFFFF,
    	PhaseStepLMask =  0x00000FFF,
    	PrcDspCavSelMask =  0x00000003,
    	PrcDspPrlCfgMask =  0x000001FF,
    	PrcDspPrlGainMask =  0x0000FFFF,
    	Beam0ModuloMask =  0x00000FFF,
    	Beam0PhaseInitMask =  0x00000FFF,
    	Beam0PhaseStepMask =  0x00000FFF,
    	Beam1ModuloMask =  0x00000FFF,
    	Beam1PhaseInitMask =  0x00000FFF,
    	Beam1PhaseStepMask =  0x00000FFF,
    	Cav4MechPrngIvaMask =  0xFFFFFFFF,
    	Cav4MechPrngIvbMask =  0xFFFFFFFF,
    	Cav4MechPrngRandomRunMask =  0x00000001,
    	Cavity0ACavOffsetMask =  0x000003FF,
    	Cavity0AForOffsetMask =  0x000003FF,
    	Cavity0ARflOffsetMask =  0x000003FF,
    	Cavity0AmpLpBwMask =  0x0003FFFF,
    	Cavity0Freq0CoarseFreqMask =  0x0FFFFFFF,
    	Cavity0Freq1CoarseFreqMask =  0x0FFFFFFF,
    	Cavity0Freq2CoarseFreqMask =  0x0FFFFFFF,
    	Cavity0Mode0BeamCouplingMask =  0x0003FFFF,
    	Cavity0Mode0BwMask =  0x0003FFFF,
    	Cavity0Mode0DriveCouplingMask =  0x0003FFFF,
    	Cavity0Mode1BeamCouplingMask =  0x0003FFFF,
    	Cavity0Mode1BwMask =  0x0003FFFF,
    	Cavity0Mode1DriveCouplingMask =  0x0003FFFF,
    	Cavity0Mode2BeamCouplingMask =  0x0003FFFF,
    	Cavity0Mode2BwMask =  0x0003FFFF,
    	Cavity0Mode2DriveCouplingMask =  0x0003FFFF,
    	Cavity0ModuloMask =  0x00000FFF,
    	Cavity0PhaseStepMask =  0xFFFFFFFF,
    	Cavity0ComprSatCtlMask =  0x0000FFFF,
    	Cavity0PrngIvaMask =  0xFFFFFFFF,
    	Cavity0PrngIvbMask =  0xFFFFFFFF,
    	Cavity0PrngRandomRunMask =  0x00000001,
    	Cavity1ACavOffsetMask =  0x000003FF,
    	Cavity1AForOffsetMask =  0x000003FF,
    	Cavity1ARflOffsetMask =  0x000003FF,
    	Cavity1AmpLpBwMask =  0x0003FFFF,
    	Cavity1Freq0CoarseFreqMask =  0x0FFFFFFF,
    	Cavity1Freq1CoarseFreqMask =  0x0FFFFFFF,
    	Cavity1Freq2CoarseFreqMask =  0x0FFFFFFF,
    	Cavity1Mode0BeamCouplingMask =  0x0003FFFF,
    	Cavity1Mode0BwMask =  0x0003FFFF,
    	Cavity1Mode0DriveCouplingMask =  0x0003FFFF,
    	Cavity1Mode1BeamCouplingMask =  0x0003FFFF,
    	Cavity1Mode1BwMask =  0x0003FFFF,
    	Cavity1Mode1DriveCouplingMask =  0x0003FFFF,
    	Cavity1Mode2BeamCouplingMask =  0x0003FFFF,
    	Cavity1Mode2BwMask =  0x0003FFFF,
    	Cavity1Mode2DriveCouplingMask =  0x0003FFFF,
    	Cavity1ModuloMask =  0x00000FFF,
    	Cavity1PhaseStepMask =  0xFFFFFFFF,
    	Cavity1ComprSatCtlMask =  0x0000FFFF,
    	Cavity1PrngIvaMask =  0xFFFFFFFF,
    	Cavity1PrngIvbMask =  0xFFFFFFFF,
    	Cavity1PrngRandomRunMask =  0x00000001,
    	DacIqPhaseMask =  0x00000001,
    	Shell0DspChanKeepMask =  0x00000FFF,
    	Shell0DspFdbkCoreCoarseScaleMask =  0x00000003,
    	Shell0DspFdbkCoreMpProcPhOffsetMask =  0x0003FFFF,
    	Shell0DspFdbkCoreMpProcSelEnMask =  0x00000001,
    	Shell0DspFdbkCoreMpProcSelThreshMask =  0x0003FFFF,
    	Shell0DspModuloMask =  0x00000FFF,
    	Shell0DspPhaseStepMask =  0xFFFFFFFF,
    	Shell0DspPiezoPiezoDcMask =  0x0000FFFF,
    	Shell0DspTagMask =  0x000000FF,
    	Shell0DspUseFiberIqMask =  0x00000003,
    	Shell0DspWaveSampPerMask =  0x000000FF,
    	Shell0DspWaveShiftMask =  0x00000007,
    	Shell1DspChanKeepMask =  0x00000FFF,
    	Shell1DspFdbkCoreCoarseScaleMask =  0x00000003,
    	Shell1DspFdbkCoreMpProcPhOffsetMask =  0x0003FFFF,
    	Shell1DspFdbkCoreMpProcSelEnMask =  0x00000001,
    	Shell1DspFdbkCoreMpProcSelThreshMask =  0x0003FFFF,
    	Shell1DspModuloMask =  0x00000FFF,
    	Shell1DspPhaseStepMask =  0xFFFFFFFF,
    	Shell1DspPiezoPiezoDcMask =  0x0000FFFF,
    	Shell1DspTagMask =  0x000000FF,
    	Shell1DspUseFiberIqMask =  0x00000003,
    	Shell1DspWaveSampPerMask =  0x000000FF,
    	Shell1DspWaveShiftMask =  0x00000007,
    	RewindMask =  0x00000001,
    	SsaStimAmpstepMask =  0x0000FFFF,
    	SsaStimEnMask =  0x00000001,
    	SsaStimGPeriodMask =  0x000003FF,
    	SsaStimPertstepMask =  0x0000FFFF,
    	TraceKeepMask =  0x000000FF,
    	TraceResetWeMask =  0x00000001,
    	TrigInternalMask =  0x00000001,
    	TrigModeMask =  0x00000003,
    	Wave0SrcMask =  0x00000007,
    	Wave1SrcMask =  0x00000007,
    	DomainJumpRealignMask =  0x00000003,
    	IccCfgMask =  0xFFFFFFFF,
    	QsfpI2CRegMask =  0xFFFFFFFF,
    	SfpAddressSetMask =  0x0000FFFF,
    	TagNowMask =  0x000000FF,

    };
};

#endif

