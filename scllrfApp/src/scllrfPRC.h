#ifndef SCLLRFPRC_DRIVER_H
#define SCLLRFPRC_DRIVER_H

/**
 *-----------------------------------------------------------------------------
 * Title      : superconducting low level RF EPICS interface
 * ----------------------------------------------------------------------------
 * File       : scllrfPRCDriver.h
 * Author     : Garth Brown, gwbrown@slac.stanford.edu
 * Created    : June 17, 2016
 * Last update: September 6, 2016
 * ----------------------------------------------------------------------------
 * Description:
 * Header defining register interface to scllrfPRC, autogenerated from a python
 * dictionary.
 *
 * ----------------------------------------------------------------------------
 * This file is part of LCLS II. It is subject to
 * the license terms in the LICENSE.txt file found in the top-level directory
 * of this distribution and at:
    * https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
 * No part of LCLS II, including this file, may be
 * copied, modified, propagated, or distributed except according to the terms
 * contained in the LICENSE.txt file.
 * ----------------------------------------------------------------------------
**/
#include "scllrfAsynPortDriver.h"

/* Registers */
static const char *AdcMmcmRString = "ADC_MMCM_R";
static const char *AdcMmcmWString = "ADC_MMCM_W";
static const char *AdcTestModeRString = "ADC_TEST_MODE_R";
static const char *AdcTestModeWString = "ADC_TEST_MODE_W";
static const char *AdcTestResetRString = "ADC_TEST_RESET_R";
static const char *AdcTestResetWString = "ADC_TEST_RESET_W";
static const char *AdcTestTrigCntRString = "ADC_TEST_TRIG_CNT_R";
static const char *AdcTestWave1OutRString = "ADC_TEST_WAVE1_OUT_R";
static const char *AdcTestWave2OutRString = "ADC_TEST_WAVE2_OUT_R";
static const char *AdcTestWave3OutRString = "ADC_TEST_WAVE3_OUT_R";
static const char *AdcTestWave4OutRString = "ADC_TEST_WAVE4_OUT_R";
static const char *AmpstepRString = "AMPSTEP_R";
static const char *AmpstepWString = "AMPSTEP_W";
static const char *Atopdigcfgu2ClkResetRRString = "ATOPDIGCFGU2_CLK_RESET_R_R";
static const char *Atopdigcfgu2ClkResetRWString = "ATOPDIGCFGU2_CLK_RESET_R_W";
static const char *AtopdigdsprewindRString = "ATOPDIGDSPREWIND_R";
static const char *AtopdigdsprewindWString = "ATOPDIGDSPREWIND_W";
static const char *Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingRString = "ATOPDIGDSPRSMCAV0CAV4_ELECMODE1BEAM_COUPLING_R";
static const char *Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingWString = "ATOPDIGDSPRSMCAV0CAV4_ELECMODE1BEAM_COUPLING_W";
static const char *Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingRString = "ATOPDIGDSPRSMCAV0CAV4_ELECMODE2BEAM_COUPLING_R";
static const char *Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingWString = "ATOPDIGDSPRSMCAV0CAV4_ELECMODE2BEAM_COUPLING_W";
static const char *Atopdigdsprsmshell1DsplpNotchlp1AkyRString = "ATOPDIGDSPRSMSHELL1DSPLP_NOTCHLP1AKY_R";
static const char *Atopdigdsprsmshell1DsplpNotchlp1AkyWString = "ATOPDIGDSPRSMSHELL1DSPLP_NOTCHLP1AKY_W";
static const char *AverageLenRString = "AVERAGE_LEN_R";
static const char *AverageLenWString = "AVERAGE_LEN_W";
static const char *BanyanBufRString = "BANYAN_BUF_R";
static const char *BanyanMaskRString = "BANYAN_MASK_R";
static const char *BanyanMaskWString = "BANYAN_MASK_W";
static const char *BanyanStatusRString = "BANYAN_STATUS_R";
static const char *Beam0ModuloRString = "BEAM0MODULO_R";
static const char *Beam0ModuloWString = "BEAM0MODULO_W";
static const char *BitslipRString = "BITSLIP_R";
static const char *BitslipWString = "BITSLIP_W";
static const char *BufTrigRString = "BUF_TRIG_R";
static const char *BufTrigWString = "BUF_TRIG_W";
static const char *C0AForoffsRString = "C0A_FOROFFS_R";
static const char *C0AForoffsWString = "C0A_FOROFFS_W";
static const char *C0ARfloffsRString = "C0A_RFLOFFS_R";
static const char *C0ARfloffsWString = "C0A_RFLOFFS_W";
static const char *C0AmpLpbwRString = "C0AMP_LPBW_R";
static const char *C0AmpLpbwWString = "C0AMP_LPBW_W";
static const char *C0Cav4Elecdot0KOutRString = "C0CAV4_ELECDOT0K_OUT_R";
static const char *C0Cav4Elecdot0KOutWString = "C0CAV4_ELECDOT0K_OUT_W";
static const char *C0Cav4Elecdot1KOutRString = "C0CAV4_ELECDOT1K_OUT_R";
static const char *C0Cav4Elecdot1KOutWString = "C0CAV4_ELECDOT1K_OUT_W";
static const char *C0Cav4ElecdriveCoupleoutCouplingRString = "C0CAV4_ELECDRIVE_COUPLEOUT_COUPLING_R";
static const char *C0Cav4ElecdriveCoupleoutCouplingWString = "C0CAV4_ELECDRIVE_COUPLEOUT_COUPLING_W";
static const char *C0Cav4Elecfq0CoarseFreqRString = "C0CAV4_ELECFQ0COARSE_FREQ_R";
static const char *C0Cav4Elecfq0CoarseFreqWString = "C0CAV4_ELECFQ0COARSE_FREQ_W";
static const char *C0Cav4Elecfq1CoarseFreqRString = "C0CAV4_ELECFQ1COARSE_FREQ_R";
static const char *C0Cav4Elecfq1CoarseFreqWString = "C0CAV4_ELECFQ1COARSE_FREQ_W";
static const char *C0Cav4Elecfq2CoarseFreqRString = "C0CAV4_ELECFQ2COARSE_FREQ_R";
static const char *C0Cav4Elecfq2CoarseFreqWString = "C0CAV4_ELECFQ2COARSE_FREQ_W";
static const char *C0Cav4Elecmode0BwRString = "C0CAV4_ELECMODE0BW_R";
static const char *C0Cav4Elecmode0BwWString = "C0CAV4_ELECMODE0BW_W";
static const char *C0Cav4Elecmode0DriveCouplingRString = "C0CAV4_ELECMODE0DRIVE_COUPLING_R";
static const char *C0Cav4Elecmode0DriveCouplingWString = "C0CAV4_ELECMODE0DRIVE_COUPLING_W";
static const char *C0Cav4Elecmode1DriveCouplingRString = "C0CAV4_ELECMODE1DRIVE_COUPLING_R";
static const char *C0Cav4Elecmode1DriveCouplingWString = "C0CAV4_ELECMODE1DRIVE_COUPLING_W";
static const char *C0Cav4Elecmode2BwRString = "C0CAV4_ELECMODE2BW_R";
static const char *C0Cav4Elecmode2BwWString = "C0CAV4_ELECMODE2BW_W";
static const char *C0Cav4Elecmode2DriveCouplingRString = "C0CAV4_ELECMODE2DRIVE_COUPLING_R";
static const char *C0Cav4Elecmode2DriveCouplingWString = "C0CAV4_ELECMODE2DRIVE_COUPLING_W";
static const char *C0Cav4Elecmode2OcoupophoffRString = "C0CAV4_ELECMODE2OCOUPOPHOFF_R";
static const char *C0Cav4Elecmode2OcoupophoffWString = "C0CAV4_ELECMODE2OCOUPOPHOFF_W";
static const char *C0Cav4Elecmode2OcoupoutCouplingRString = "C0CAV4_ELECMODE2OCOUPOUT_COUPLING_R";
static const char *C0Cav4Elecmode2OcoupoutCouplingWString = "C0CAV4_ELECMODE2OCOUPOUT_COUPLING_W";
static const char *C0Cav4ElecmoduloRString = "C0CAV4_ELECMODULO_R";
static const char *C0Cav4ElecmoduloWString = "C0CAV4_ELECMODULO_W";
static const char *C0Cav4ElecouterProd2KOutRString = "C0CAV4_ELECOUTER_PROD2K_OUT_R";
static const char *C0Cav4ElecouterProd2KOutWString = "C0CAV4_ELECOUTER_PROD2K_OUT_W";
static const char *C0ComprsatCtlRString = "C0COMPRSAT_CTL_R";
static const char *C0ComprsatCtlWString = "C0COMPRSAT_CTL_W";
static const char *C0DelayPcXxxRString = "C0DELAY_PC_XXX_R";
static const char *C0DelayPcXxxWString = "C0DELAY_PC_XXX_W";
static const char *C0DspchanKeepRString = "C0DSPCHAN_KEEP_R";
static const char *C0DspchanKeepWString = "C0DSPCHAN_KEEP_W";
static const char *C0DspfdbkCorecoarseScaleRString = "C0DSPFDBK_CORECOARSE_SCALE_R";
static const char *C0DspfdbkCorecoarseScaleWString = "C0DSPFDBK_CORECOARSE_SCALE_W";
static const char *C0DspfdbkCorempProclimRString = "C0DSPFDBK_COREMP_PROCLIM_R";
static const char *C0DspfdbkCorempProclimWString = "C0DSPFDBK_COREMP_PROCLIM_W";
static const char *C0DspfdbkCorempProcselThreshRString = "C0DSPFDBK_COREMP_PROCSEL_THRESH_R";
static const char *C0DspfdbkCorempProcselThreshWString = "C0DSPFDBK_COREMP_PROCSEL_THRESH_W";
static const char *C0DspfdbkCorempProcsetmp0RString = "C0DSPFDBK_COREMP_PROCSETMP_0R";
static const char *C0DspfdbkCorempProcsetmp0WString = "C0DSPFDBK_COREMP_PROCSETMP_0W";
static const char *C0DspfdbkCorempProcsetmp1RString = "C0DSPFDBK_COREMP_PROCSETMP_1R";
static const char *C0DspfdbkCorempProcsetmp1WString = "C0DSPFDBK_COREMP_PROCSETMP_1W";
static const char *C0DspfdbkCorempProcsetmp2RString = "C0DSPFDBK_COREMP_PROCSETMP_2R";
static const char *C0DspfdbkCorempProcsetmp2WString = "C0DSPFDBK_COREMP_PROCSETMP_2W";
static const char *C0DspfdbkCorempProcsetmp3RString = "C0DSPFDBK_COREMP_PROCSETMP_3R";
static const char *C0DspfdbkCorempProcsetmp3WString = "C0DSPFDBK_COREMP_PROCSETMP_3W";
static const char *C0DsplpNotchlp1AkyRString = "C0DSPLP_NOTCHLP1AKY_R";
static const char *C0DsplpNotchlp1AkyWString = "C0DSPLP_NOTCHLP1AKY_W";
static const char *C0DsplpNotchlp1BkyRString = "C0DSPLP_NOTCHLP1BKY_R";
static const char *C0DsplpNotchlp1BkyWString = "C0DSPLP_NOTCHLP1BKY_W";
static const char *C0DsppiezopiezoDcRString = "C0DSPPIEZOPIEZO_DC_R";
static const char *C0DsppiezopiezoDcWString = "C0DSPPIEZOPIEZO_DC_W";
static const char *C0DsppiezosfConstsRString = "C0DSPPIEZOSF_CONSTS_R";
static const char *C0DsppiezosfConstsWString = "C0DSPPIEZOSF_CONSTS_W";
static const char *C0DspuseFiberIqRString = "C0DSPUSE_FIBER_IQ_R";
static const char *C0DspuseFiberIqWString = "C0DSPUSE_FIBER_IQ_W";
static const char *C0DspwaveSampPerRString = "C0DSPWAVE_SAMP_PER_R";
static const char *C0DspwaveSampPerWString = "C0DSPWAVE_SAMP_PER_W";
static const char *C0DspwaveShiftRString = "C0DSPWAVE_SHIFT_R";
static const char *C0DspwaveShiftWString = "C0DSPWAVE_SHIFT_W";
static const char *C0PhaseStepRString = "C0PHASE_STEP_R";
static const char *C0PhaseStepWString = "C0PHASE_STEP_W";
static const char *C0PrngivbRString = "C0PRNGIVB_R";
static const char *C0PrngivbWString = "C0PRNGIVB_W";
static const char *C0PrngrandomRunRString = "C0PRNGRANDOM_RUN_R";
static const char *C0PrngrandomRunWString = "C0PRNGRANDOM_RUN_W";
static const char *C1ACavoffsRString = "C1A_CAVOFFS_R";
static const char *C1ACavoffsWString = "C1A_CAVOFFS_W";
static const char *C1ARfloffsRString = "C1A_RFLOFFS_R";
static const char *C1ARfloffsWString = "C1A_RFLOFFS_W";
static const char *C1Cav4Elecdot0KOutRString = "C1CAV4_ELECDOT0K_OUT_R";
static const char *C1Cav4Elecdot0KOutWString = "C1CAV4_ELECDOT0K_OUT_W";
static const char *C1Cav4Elecdot2KOutRString = "C1CAV4_ELECDOT2K_OUT_R";
static const char *C1Cav4Elecdot2KOutWString = "C1CAV4_ELECDOT2K_OUT_W";
static const char *C1Cav4ElecdriveCoupleophoffRString = "C1CAV4_ELECDRIVE_COUPLEOPHOFF_R";
static const char *C1Cav4ElecdriveCoupleophoffWString = "C1CAV4_ELECDRIVE_COUPLEOPHOFF_W";
static const char *C1Cav4Elecfq0CoarseFreqRString = "C1CAV4_ELECFQ0COARSE_FREQ_R";
static const char *C1Cav4Elecfq0CoarseFreqWString = "C1CAV4_ELECFQ0COARSE_FREQ_W";
static const char *C1Cav4Elecfq1CoarseFreqRString = "C1CAV4_ELECFQ1COARSE_FREQ_R";
static const char *C1Cav4Elecfq1CoarseFreqWString = "C1CAV4_ELECFQ1COARSE_FREQ_W";
static const char *C1Cav4Elecfq2CoarseFreqRString = "C1CAV4_ELECFQ2COARSE_FREQ_R";
static const char *C1Cav4Elecfq2CoarseFreqWString = "C1CAV4_ELECFQ2COARSE_FREQ_W";
static const char *C1Cav4Elecmode0BeamCouplingRString = "C1CAV4_ELECMODE0BEAM_COUPLING_R";
static const char *C1Cav4Elecmode0BeamCouplingWString = "C1CAV4_ELECMODE0BEAM_COUPLING_W";
static const char *C1Cav4Elecmode0DriveCouplingRString = "C1CAV4_ELECMODE0DRIVE_COUPLING_R";
static const char *C1Cav4Elecmode0DriveCouplingWString = "C1CAV4_ELECMODE0DRIVE_COUPLING_W";
static const char *C1Cav4Elecmode0OcoupoutCouplingRString = "C1CAV4_ELECMODE0OCOUPOUT_COUPLING_R";
static const char *C1Cav4Elecmode0OcoupoutCouplingWString = "C1CAV4_ELECMODE0OCOUPOUT_COUPLING_W";
static const char *C1Cav4Elecmode1BeamCouplingRString = "C1CAV4_ELECMODE1BEAM_COUPLING_R";
static const char *C1Cav4Elecmode1BeamCouplingWString = "C1CAV4_ELECMODE1BEAM_COUPLING_W";
static const char *C1Cav4Elecmode1DriveCouplingRString = "C1CAV4_ELECMODE1DRIVE_COUPLING_R";
static const char *C1Cav4Elecmode1DriveCouplingWString = "C1CAV4_ELECMODE1DRIVE_COUPLING_W";
static const char *C1Cav4Elecmode1OcoupophoffRString = "C1CAV4_ELECMODE1OCOUPOPHOFF_R";
static const char *C1Cav4Elecmode1OcoupophoffWString = "C1CAV4_ELECMODE1OCOUPOPHOFF_W";
static const char *C1Cav4Elecmode2OcoupophoffRString = "C1CAV4_ELECMODE2OCOUPOPHOFF_R";
static const char *C1Cav4Elecmode2OcoupophoffWString = "C1CAV4_ELECMODE2OCOUPOPHOFF_W";
static const char *C1Cav4ElecmoduloRString = "C1CAV4_ELECMODULO_R";
static const char *C1Cav4ElecmoduloWString = "C1CAV4_ELECMODULO_W";
static const char *C1Cav4ElecouterProd2KOutRString = "C1CAV4_ELECOUTER_PROD2K_OUT_R";
static const char *C1Cav4ElecouterProd2KOutWString = "C1CAV4_ELECOUTER_PROD2K_OUT_W";
static const char *C1Cav4ElecphaseStepRString = "C1CAV4_ELECPHASE_STEP_R";
static const char *C1Cav4ElecphaseStepWString = "C1CAV4_ELECPHASE_STEP_W";
static const char *C1DelayPcXxxRString = "C1DELAY_PC_XXX_R";
static const char *C1DelayPcXxxWString = "C1DELAY_PC_XXX_W";
static const char *C1DspfdbkCorecoarseScaleRString = "C1DSPFDBK_CORECOARSE_SCALE_R";
static const char *C1DspfdbkCorecoarseScaleWString = "C1DSPFDBK_CORECOARSE_SCALE_W";
static const char *C1DspfdbkCorempProclimRString = "C1DSPFDBK_COREMP_PROCLIM_R";
static const char *C1DspfdbkCorempProclimWString = "C1DSPFDBK_COREMP_PROCLIM_W";
static const char *C1DspfdbkCorempProcphOffsetRString = "C1DSPFDBK_COREMP_PROCPH_OFFSET_R";
static const char *C1DspfdbkCorempProcphOffsetWString = "C1DSPFDBK_COREMP_PROCPH_OFFSET_W";
static const char *C1DspfdbkCorempProcselEnRString = "C1DSPFDBK_COREMP_PROCSEL_EN_R";
static const char *C1DspfdbkCorempProcselEnWString = "C1DSPFDBK_COREMP_PROCSEL_EN_W";
static const char *C1DspfdbkCorempProcselThreshRString = "C1DSPFDBK_COREMP_PROCSEL_THRESH_R";
static const char *C1DspfdbkCorempProcselThreshWString = "C1DSPFDBK_COREMP_PROCSEL_THRESH_W";
static const char *C1DsplpNotchlp1AkxRString = "C1DSPLP_NOTCHLP1AKX_R";
static const char *C1DsplpNotchlp1AkxWString = "C1DSPLP_NOTCHLP1AKX_W";
static const char *C1DsplpNotchlp1BkxRString = "C1DSPLP_NOTCHLP1BKX_R";
static const char *C1DsplpNotchlp1BkxWString = "C1DSPLP_NOTCHLP1BKX_W";
static const char *C1DsplpNotchlp1BkyRString = "C1DSPLP_NOTCHLP1BKY_R";
static const char *C1DsplpNotchlp1BkyWString = "C1DSPLP_NOTCHLP1BKY_W";
static const char *C1DspmoduloRString = "C1DSPMODULO_R";
static const char *C1DspmoduloWString = "C1DSPMODULO_W";
static const char *C1DspphaseStepRString = "C1DSPPHASE_STEP_R";
static const char *C1DspphaseStepWString = "C1DSPPHASE_STEP_W";
static const char *C1DsppiezopiezoDcRString = "C1DSPPIEZOPIEZO_DC_R";
static const char *C1DsppiezopiezoDcWString = "C1DSPPIEZOPIEZO_DC_W";
static const char *C1DsptagRString = "C1DSPTAG_R";
static const char *C1DsptagWString = "C1DSPTAG_W";
static const char *C1DspuseFiberIqRString = "C1DSPUSE_FIBER_IQ_R";
static const char *C1DspuseFiberIqWString = "C1DSPUSE_FIBER_IQ_W";
static const char *C1DspwaveSampPerRString = "C1DSPWAVE_SAMP_PER_R";
static const char *C1DspwaveSampPerWString = "C1DSPWAVE_SAMP_PER_W";
static const char *C1ModuloRString = "C1MODULO_R";
static const char *C1ModuloWString = "C1MODULO_W";
static const char *C1PhaseInitRString = "C1PHASE_INIT_R";
static const char *C1PhaseInitWString = "C1PHASE_INIT_W";
static const char *C1PiezoCouplekOutRString = "C1PIEZO_COUPLEK_OUT_R";
static const char *C1PiezoCouplekOutWString = "C1PIEZO_COUPLEK_OUT_W";
static const char *C1PrngivaRString = "C1PRNGIVA_R";
static const char *C1PrngivaWString = "C1PRNGIVA_W";
static const char *C1PrngrandomRunRString = "C1PRNGRANDOM_RUN_R";
static const char *C1PrngrandomRunWString = "C1PRNGRANDOM_RUN_W";
static const char *Cav0ACavoffsRString = "CAV0A_CAVOFFS_R";
static const char *Cav0ACavoffsWString = "CAV0A_CAVOFFS_W";
static const char *Cav0Cav4Elecdot2KOutRString = "CAV0CAV4_ELECDOT2K_OUT_R";
static const char *Cav0Cav4Elecdot2KOutWString = "CAV0CAV4_ELECDOT2K_OUT_W";
static const char *Cav0Cav4Elecmode0OcoupoutCouplingRString = "CAV0CAV4_ELECMODE0OCOUPOUT_COUPLING_R";
static const char *Cav0Cav4Elecmode0OcoupoutCouplingWString = "CAV0CAV4_ELECMODE0OCOUPOUT_COUPLING_W";
static const char *Cav0Cav4Elecmode1BwRString = "CAV0CAV4_ELECMODE1BW_R";
static const char *Cav0Cav4Elecmode1BwWString = "CAV0CAV4_ELECMODE1BW_W";
static const char *Cav0Cav4Elecmode1OcoupophoffRString = "CAV0CAV4_ELECMODE1OCOUPOPHOFF_R";
static const char *Cav0Cav4Elecmode1OcoupophoffWString = "CAV0CAV4_ELECMODE1OCOUPOPHOFF_W";
static const char *Cav0Cav4Elecmode1OcoupoutCouplingRString = "CAV0CAV4_ELECMODE1OCOUPOUT_COUPLING_R";
static const char *Cav0Cav4Elecmode1OcoupoutCouplingWString = "CAV0CAV4_ELECMODE1OCOUPOUT_COUPLING_W";
static const char *Cav0Cav4ElecouterProd1KOutRString = "CAV0CAV4_ELECOUTER_PROD1K_OUT_R";
static const char *Cav0Cav4ElecouterProd1KOutWString = "CAV0CAV4_ELECOUTER_PROD1K_OUT_W";
static const char *Cav0Cav4ElecphaseStepRString = "CAV0CAV4_ELECPHASE_STEP_R";
static const char *Cav0Cav4ElecphaseStepWString = "CAV0CAV4_ELECPHASE_STEP_W";
static const char *Cav0PiezoCouplekOutRString = "CAV0PIEZO_COUPLEK_OUT_R";
static const char *Cav0PiezoCouplekOutWString = "CAV0PIEZO_COUPLEK_OUT_W";
static const char *Cav0PrngivaRString = "CAV0PRNGIVA_R";
static const char *Cav0PrngivaWString = "CAV0PRNGIVA_W";
static const char *Cav1Cav4Elecdot1KOutRString = "CAV1CAV4_ELECDOT1K_OUT_R";
static const char *Cav1Cav4Elecdot1KOutWString = "CAV1CAV4_ELECDOT1K_OUT_W";
static const char *Cav1Cav4ElecdriveCoupleoutCouplingRString = "CAV1CAV4_ELECDRIVE_COUPLEOUT_COUPLING_R";
static const char *Cav1Cav4ElecdriveCoupleoutCouplingWString = "CAV1CAV4_ELECDRIVE_COUPLEOUT_COUPLING_W";
static const char *Cav1Cav4Elecmode0BwRString = "CAV1CAV4_ELECMODE0BW_R";
static const char *Cav1Cav4Elecmode0BwWString = "CAV1CAV4_ELECMODE0BW_W";
static const char *Cav1Cav4Elecmode0OcoupophoffRString = "CAV1CAV4_ELECMODE0OCOUPOPHOFF_R";
static const char *Cav1Cav4Elecmode0OcoupophoffWString = "CAV1CAV4_ELECMODE0OCOUPOPHOFF_W";
static const char *Cav1Cav4Elecmode1OcoupoutCouplingRString = "CAV1CAV4_ELECMODE1OCOUPOUT_COUPLING_R";
static const char *Cav1Cav4Elecmode1OcoupoutCouplingWString = "CAV1CAV4_ELECMODE1OCOUPOUT_COUPLING_W";
static const char *Cav1Cav4Elecmode2BwRString = "CAV1CAV4_ELECMODE2BW_R";
static const char *Cav1Cav4Elecmode2BwWString = "CAV1CAV4_ELECMODE2BW_W";
static const char *Cav1Cav4ElecouterProd1KOutRString = "CAV1CAV4_ELECOUTER_PROD1K_OUT_R";
static const char *Cav1Cav4ElecouterProd1KOutWString = "CAV1CAV4_ELECOUTER_PROD1K_OUT_W";
static const char *Cav1PrngivbRString = "CAV1PRNGIVB_R";
static const char *Cav1PrngivbWString = "CAV1PRNGIVB_W";
static const char *Cav4MechprngivaRString = "CAV4_MECHPRNGIVA_R";
static const char *Cav4MechprngivaWString = "CAV4_MECHPRNGIVA_W";
static const char *Cav4MechprngrandomRunRString = "CAV4_MECHPRNGRANDOM_RUN_R";
static const char *Cav4MechprngrandomRunWString = "CAV4_MECHPRNGRANDOM_RUN_W";
static const char *CavSelRString = "CAV_SEL_R";
static const char *CavSelWString = "CAV_SEL_W";
static const char *CicPeriodRString = "CIC_PERIOD_R";
static const char *CicPeriodWString = "CIC_PERIOD_W";
static const char *CicShiftRString = "CIC_SHIFT_R";
static const char *CicShiftWString = "CIC_SHIFT_W";
static const char *CircleBufFlipRString = "CIRCLE_BUF_FLIP_R";
static const char *CircleBufFlipWString = "CIRCLE_BUF_FLIP_W";
static const char *ClkPhaseDiffOutU2RString = "CLK_PHASE_DIFF_OUT_U2_R";
static const char *ClkPhaseDiffOutU3RString = "CLK_PHASE_DIFF_OUT_U3_R";
static const char *ClkStatusOutRString = "CLK_STATUS_OUT_R";
static const char *ClkStatusWeRString = "CLK_STATUS_WE_R";
static const char *ClkStatusWeWString = "CLK_STATUS_WE_W";
static const char *CrcErrorsRString = "CRC_ERRORS_R";
static const char *CtraceRunningRString = "CTRACE_RUNNING_R";
static const char *DacDdsResetRString = "DAC_DDS_RESET_R";
static const char *DacDdsResetWString = "DAC_DDS_RESET_W";
static const char *DdsaModuloRString = "DDSA_MODULO_R";
static const char *DdsaModuloWString = "DDSA_MODULO_W";
static const char *DdsaPhstepHRString = "DDSA_PHSTEP_H_R";
static const char *DdsaPhstepHWString = "DDSA_PHSTEP_H_W";
static const char *DigcfgidelayctrlResetRRString = "DIGCFGIDELAYCTRL_RESET_R_R";
static const char *DigcfgidelayctrlResetRWString = "DIGCFGIDELAYCTRL_RESET_R_W";
static const char *DigcfgrawadcTrigRString = "DIGCFGRAWADC_TRIG_R";
static const char *DigcfgrawadcTrigWString = "DIGCFGRAWADC_TRIG_W";
static const char *DigcfgsyncTps62210CsetRString = "DIGCFGSYNC_TPS62210_CSET_R";
static const char *DigcfgsyncTps62210CsetWString = "DIGCFGSYNC_TPS62210_CSET_W";
static const char *Digcfgu18SpiDataAddrRRString = "DIGCFGU18_SPI_DATA_ADDR_R_R";
static const char *Digcfgu18SpiDataAddrRWString = "DIGCFGU18_SPI_DATA_ADDR_R_W";
static const char *Digcfgu18SpiReadAndStartRRString = "DIGCFGU18_SPI_READ_AND_START_R_R";
static const char *Digcfgu18SpiReadAndStartRWString = "DIGCFGU18_SPI_READ_AND_START_R_W";
static const char *Digcfgu4ResetRRString = "DIGCFGU4_RESET_R_R";
static const char *Digcfgu4ResetRWString = "DIGCFGU4_RESET_R_W";
static const char *DigdspamplitudeRString = "DIGDSPAMPLITUDE_R";
static const char *DigdspamplitudeWString = "DIGDSPAMPLITUDE_W";
static const char *DigdspdacModeRString = "DIGDSPDAC_MODE_R";
static const char *DigdspdacModeWString = "DIGDSPDAC_MODE_W";
static const char *DigdspddsaPhstepLRString = "DIGDSPDDSA_PHSTEP_L_R";
static const char *DigdspddsaPhstepLWString = "DIGDSPDDSA_PHSTEP_L_W";
static const char *DigdspmoduloRString = "DIGDSPMODULO_R";
static const char *DigdspmoduloWString = "DIGDSPMODULO_W";
static const char *DigdspphaseStepHRString = "DIGDSPPHASE_STEP_H_R";
static const char *DigdspphaseStepHWString = "DIGDSPPHASE_STEP_H_W";
static const char *Digdsprsmcav0Cav4ElecouterProd0KOutRString = "DIGDSPRSMCAV0CAV4_ELECOUTER_PROD0K_OUT_R";
static const char *Digdsprsmcav0Cav4ElecouterProd0KOutWString = "DIGDSPRSMCAV0CAV4_ELECOUTER_PROD0K_OUT_W";
static const char *Digdsprsmcav1AForoffsRString = "DIGDSPRSMCAV1A_FOROFFS_R";
static const char *Digdsprsmcav1AForoffsWString = "DIGDSPRSMCAV1A_FOROFFS_W";
static const char *Digdsprsmshell0DsplpNotchlp1AkxRString = "DIGDSPRSMSHELL0DSPLP_NOTCHLP1AKX_R";
static const char *Digdsprsmshell0DsplpNotchlp1AkxWString = "DIGDSPRSMSHELL0DSPLP_NOTCHLP1AKX_W";
static const char *Digdsprsmshell1DspfdbkCorempProccoeffRString = "DIGDSPRSMSHELL1DSPFDBK_COREMP_PROCCOEFF_R";
static const char *Digdsprsmshell1DspfdbkCorempProccoeffWString = "DIGDSPRSMSHELL1DSPFDBK_COREMP_PROCCOEFF_W";
static const char *DigdsptraceKeepRString = "DIGDSPTRACE_KEEP_R";
static const char *DigdsptraceKeepWString = "DIGDSPTRACE_KEEP_W";
static const char *DomainJumpRealignRString = "DOMAIN_JUMP_REALIGN_R";
static const char *DomainJumpRealignWString = "DOMAIN_JUMP_REALIGN_W";
static const char *FfffffffRString = "FFFFFFFF_R";
static const char *Frequency4XoutRString = "FREQUENCY_4XOUT_R";
static const char *FrequencyAdcRString = "FREQUENCY_ADC_R";
static const char *FrequencyClkout3RString = "FREQUENCY_CLKOUT3_R";
static const char *FrequencyDcoRString = "FREQUENCY_DCO_R";
static const char *FrequencyGtxRxRString = "FREQUENCY_GTX_RX_R";
static const char *FrequencyGtxTxRString = "FREQUENCY_GTX_TX_R";
static const char *H0D0A0D0ARString = "H0D0A0D0A_R";
static const char *HellRString = "HELL_R";
static const char *HistCountWStrobeRString = "HIST_COUNT_W_STROBE_R";
static const char *HistCountWStrobeWString = "HIST_COUNT_W_STROBE_W";
static const char *HistDoutRString = "HIST_DOUT_R";
static const char *HistStatusRString = "HIST_STATUS_R";
static const char *IccCfgRString = "ICC_CFG_R";
static const char *IccCfgWString = "ICC_CFG_W";
static const char *IdelayBaseRString = "IDELAY_BASE_R";
static const char *IdelayValueOutU2Bits19To0RString = "IDELAY_VALUE_OUT_U2BITS19TO0_R";
static const char *IdelayValueOutU2Bits39To20RString = "IDELAY_VALUE_OUT_U2BITS39TO20_R";
static const char *IdelayValueOutU3Bits19To0RString = "IDELAY_VALUE_OUT_U3BITS19TO0_R";
static const char *IdelayValueOutU3Bits39To20RString = "IDELAY_VALUE_OUT_U3BITS39TO20_R";
static const char *LlrfCircleDataRString = "LLRF_CIRCLE_DATA_R";
static const char *LlrfCircleReadyRString = "LLRF_CIRCLE_READY_R";
static const char *LlrfDspDacEnRString = "LLRF_DSP_DAC_EN_R";
static const char *LlrfDspDacEnWString = "LLRF_DSP_DAC_EN_W";
static const char *LlspiResultRString = "LLSPI_RESULT_R";
static const char *LlspiStatusRString = "LLSPI_STATUS_R";
static const char *LlspiWeRString = "LLSPI_WE_R";
static const char *LlspiWeWString = "LLSPI_WE_W";
static const char *LoAmpRString = "LO_AMP_R";
static const char *LoAmpWString = "LO_AMP_W";
static const char *MmcmResetRRString = "MMCM_RESET_R_R";
static const char *MmcmResetRWString = "MMCM_RESET_R_W";
static const char *NoiseCouplekOutRString = "NOISE_COUPLEK_OUT_R";
static const char *NoiseCouplekOutWString = "NOISE_COUPLEK_OUT_W";
static const char *OWoRString = "O_WO_R";
static const char *PeriphConfigRString = "PERIPH_CONFIG_R";
static const char *PeriphConfigWString = "PERIPH_CONFIG_W";
static const char *PhaseStepLRString = "PHASE_STEP_L_R";
static const char *PhaseStepLWString = "PHASE_STEP_L_W";
static const char *PhasexDoutRString = "PHASEX_DOUT_R";
static const char *PhasexStatusRString = "PHASEX_STATUS_R";
static const char *PhasexTrigRString = "PHASEX_TRIG_R";
static const char *PhasexTrigWString = "PHASEX_TRIG_W";
static const char *PrcDspprlGainRString = "PRC_DSPPRL_GAIN_R";
static const char *PrcDspprlGainWString = "PRC_DSPPRL_GAIN_W";
static const char *PrlCfgRString = "PRL_CFG_R";
static const char *PrlCfgWString = "PRL_CFG_W";
static const char *PropConstRString = "PROP_CONST_R";
static const char *PropConstWString = "PROP_CONST_W";
static const char *QsfpBufRString = "QSFP_BUF_R";
static const char *QsfpI2CRegRString = "QSFP_I2C_REG_R";
static const char *QsfpI2CRegWString = "QSFP_I2C_REG_W";
static const char *RldRString = "RLD__R";
static const char *Rsmbeam0PhaseInitRString = "RSMBEAM0PHASE_INIT_R";
static const char *Rsmbeam0PhaseInitWString = "RSMBEAM0PHASE_INIT_W";
static const char *Rsmbeam1PhaseStepRString = "RSMBEAM1PHASE_STEP_R";
static const char *Rsmbeam1PhaseStepWString = "RSMBEAM1PHASE_STEP_W";
static const char *Rsmcav0Cav4ElecdriveCoupleophoffRString = "RSMCAV0CAV4_ELECDRIVE_COUPLEOPHOFF_R";
static const char *Rsmcav0Cav4ElecdriveCoupleophoffWString = "RSMCAV0CAV4_ELECDRIVE_COUPLEOPHOFF_W";
static const char *Rsmcav0Cav4Elecmode0BeamCouplingRString = "RSMCAV0CAV4_ELECMODE0BEAM_COUPLING_R";
static const char *Rsmcav0Cav4Elecmode0BeamCouplingWString = "RSMCAV0CAV4_ELECMODE0BEAM_COUPLING_W";
static const char *Rsmcav0Cav4Elecmode0OcoupophoffRString = "RSMCAV0CAV4_ELECMODE0OCOUPOPHOFF_R";
static const char *Rsmcav0Cav4Elecmode0OcoupophoffWString = "RSMCAV0CAV4_ELECMODE0OCOUPOPHOFF_W";
static const char *Rsmcav1AmpLpbwRString = "RSMCAV1AMP_LPBW_R";
static const char *Rsmcav1AmpLpbwWString = "RSMCAV1AMP_LPBW_W";
static const char *Rsmcav1Cav4Elecmode1BwRString = "RSMCAV1CAV4_ELECMODE1BW_R";
static const char *Rsmcav1Cav4Elecmode1BwWString = "RSMCAV1CAV4_ELECMODE1BW_W";
static const char *Rsmcav1Cav4Elecmode2BeamCouplingRString = "RSMCAV1CAV4_ELECMODE2BEAM_COUPLING_R";
static const char *Rsmcav1Cav4Elecmode2BeamCouplingWString = "RSMCAV1CAV4_ELECMODE2BEAM_COUPLING_W";
static const char *Rsmcav1Cav4Elecmode2OcoupoutCouplingRString = "RSMCAV1CAV4_ELECMODE2OCOUPOUT_COUPLING_R";
static const char *Rsmcav1Cav4Elecmode2OcoupoutCouplingWString = "RSMCAV1CAV4_ELECMODE2OCOUPOUT_COUPLING_W";
static const char *Rsmcav1Cav4ElecouterProd0KOutRString = "RSMCAV1CAV4_ELECOUTER_PROD0K_OUT_R";
static const char *Rsmcav1Cav4ElecouterProd0KOutWString = "RSMCAV1CAV4_ELECOUTER_PROD0K_OUT_W";
static const char *Rsmcav1ComprsatCtlRString = "RSMCAV1COMPRSAT_CTL_R";
static const char *Rsmcav1ComprsatCtlWString = "RSMCAV1COMPRSAT_CTL_W";
static const char *Rsmcav4MechprngivbRString = "RSMCAV4_MECHPRNGIVB_R";
static const char *Rsmcav4MechprngivbWString = "RSMCAV4_MECHPRNGIVB_W";
static const char *RsmdacIqPhaseRString = "RSMDAC_IQ_PHASE_R";
static const char *RsmdacIqPhaseWString = "RSMDAC_IQ_PHASE_W";
static const char *Rsmshell0DsplpNotchlp1BkxRString = "RSMSHELL0DSPLP_NOTCHLP1BKX_R";
static const char *Rsmshell0DsplpNotchlp1BkxWString = "RSMSHELL0DSPLP_NOTCHLP1BKX_W";
static const char *Rsmshell1DsppiezosfConstsRString = "RSMSHELL1DSPPIEZOSF_CONSTS_R";
static const char *Rsmshell1DsppiezosfConstsWString = "RSMSHELL1DSPPIEZOSF_CONSTS_W";
static const char *ScanTriggerWeRString = "SCAN_TRIGGER_WE_R";
static const char *ScanTriggerWeWString = "SCAN_TRIGGER_WE_W";
static const char *ScannerDebugRString = "SCANNER_DEBUG_R";
static const char *ScannerDebugWString = "SCANNER_DEBUG_W";
static const char *ScannerResultRString = "SCANNER_RESULT_R";
static const char *SfpAddressSetRString = "SFP_ADDRESS_SET_R";
static const char *SfpAddressSetWString = "SFP_ADDRESS_SET_W";
static const char *Shell0DspfdbkCorempProccoeffRString = "SHELL0DSPFDBK_COREMP_PROCCOEFF_R";
static const char *Shell0DspfdbkCorempProccoeffWString = "SHELL0DSPFDBK_COREMP_PROCCOEFF_W";
static const char *Shell0DspfdbkCorempProcphOffsetRString = "SHELL0DSPFDBK_COREMP_PROCPH_OFFSET_R";
static const char *Shell0DspfdbkCorempProcphOffsetWString = "SHELL0DSPFDBK_COREMP_PROCPH_OFFSET_W";
static const char *Shell0DspfdbkCorempProcselEnRString = "SHELL0DSPFDBK_COREMP_PROCSEL_EN_R";
static const char *Shell0DspfdbkCorempProcselEnWString = "SHELL0DSPFDBK_COREMP_PROCSEL_EN_W";
static const char *Shell0DspmoduloRString = "SHELL0DSPMODULO_R";
static const char *Shell0DspmoduloWString = "SHELL0DSPMODULO_W";
static const char *Shell0DspphaseStepRString = "SHELL0DSPPHASE_STEP_R";
static const char *Shell0DspphaseStepWString = "SHELL0DSPPHASE_STEP_W";
static const char *Shell0DsptagRString = "SHELL0DSPTAG_R";
static const char *Shell0DsptagWString = "SHELL0DSPTAG_W";
static const char *Shell1DspchanKeepRString = "SHELL1DSPCHAN_KEEP_R";
static const char *Shell1DspchanKeepWString = "SHELL1DSPCHAN_KEEP_W";
static const char *Shell1DspfdbkCorempProcsetmp0RString = "SHELL1DSPFDBK_COREMP_PROCSETMP_0R";
static const char *Shell1DspfdbkCorempProcsetmp0WString = "SHELL1DSPFDBK_COREMP_PROCSETMP_0W";
static const char *Shell1DspfdbkCorempProcsetmp1RString = "SHELL1DSPFDBK_COREMP_PROCSETMP_1R";
static const char *Shell1DspfdbkCorempProcsetmp1WString = "SHELL1DSPFDBK_COREMP_PROCSETMP_1W";
static const char *Shell1DspfdbkCorempProcsetmp2RString = "SHELL1DSPFDBK_COREMP_PROCSETMP_2R";
static const char *Shell1DspfdbkCorempProcsetmp2WString = "SHELL1DSPFDBK_COREMP_PROCSETMP_2W";
static const char *Shell1DspfdbkCorempProcsetmp3RString = "SHELL1DSPFDBK_COREMP_PROCSETMP_3R";
static const char *Shell1DspfdbkCorempProcsetmp3WString = "SHELL1DSPFDBK_COREMP_PROCSETMP_3W";
static const char *Shell1DspwaveShiftRString = "SHELL1DSPWAVE_SHIFT_R";
static const char *Shell1DspwaveShiftWString = "SHELL1DSPWAVE_SHIFT_W";
static const char *Shell0SlowDataRString = "SHELL_0_SLOW_DATA_R";
static const char *Shell1SlowDataRString = "SHELL_1_SLOW_DATA_R";
static const char *SlowChainOutRString = "SLOW_CHAIN_OUT_R";
static const char *SsaStimgPeriodRString = "SSA_STIMG_PERIOD_R";
static const char *SsaStimgPeriodWString = "SSA_STIMG_PERIOD_W";
static const char *SsaStimpertstepRString = "SSA_STIMPERTSTEP_R";
static const char *SsaStimpertstepWString = "SSA_STIMPERTSTEP_W";
static const char *SsaStimEnRString = "SSA_STIM_EN_R";
static const char *SsaStimEnWString = "SSA_STIM_EN_W";
static const char *SyncAd7794CsetRString = "SYNC_AD7794_CSET_R";
static const char *SyncAd7794CsetWString = "SYNC_AD7794_CSET_W";
static const char *TagNowRString = "TAG_NOW_R";
static const char *TagNowWString = "TAG_NOW_W";
static const char *TraceIBufRString = "TRACE_I_BUF_R";
static const char *TraceIqBufRString = "TRACE_IQ_BUF_R";
static const char *TraceQBufRString = "TRACE_Q_BUF_R";
static const char *TraceResetWeRString = "TRACE_RESET_WE_R";
static const char *TraceResetWeWString = "TRACE_RESET_WE_W";
static const char *TraceStatus1RString = "TRACE_STATUS1_R";
static const char *TraceStatus2RString = "TRACE_STATUS2_R";
static const char *TrigInternalRString = "TRIG_INTERNAL_R";
static const char *TrigInternalWString = "TRIG_INTERNAL_W";
static const char *TrigModeRString = "TRIG_MODE_R";
static const char *TrigModeWString = "TRIG_MODE_W";
static const char *U15SdioAsSdoRString = "U15_SDIO_AS_SDO_R";
static const char *U15SdoAddrRString = "U15_SDO_ADDR_R";
static const char *U15SpiDataAddrRRString = "U15_SPI_DATA_ADDR_R_R";
static const char *U15SpiDataAddrRWString = "U15_SPI_DATA_ADDR_R_W";
static const char *U15SpiReadAndStartRRString = "U15_SPI_READ_AND_START_R_R";
static const char *U15SpiReadAndStartRWString = "U15_SPI_READ_AND_START_R_W";
static const char *U15SpiReadyRString = "U15_SPI_READY_R";
// shared address 57 for U15_Spi_Ready
static const char *U18SdioAsSdoRString = "U18_SDIO_AS_SDO_R";
static const char *U18SdoAddrRString = "U18_SDO_ADDR_R";
static const char *U18SpiReadyRString = "U18_SPI_READY_R";
// shared address 61 for U18_Spi_Ready
static const char *U2Doutbits31To0RString = "U2DOUTBITS31TO0_R";
static const char *U2Doutbits63To32RString = "U2DOUTBITS63TO32_R";
static const char *U2IserdesResetRRString = "U2_ISERDES_RESET_R_R";
static const char *U2IserdesResetRWString = "U2_ISERDES_RESET_R_W";
static const char *U3Doutbits31To0RString = "U3DOUTBITS31TO0_R";
static const char *U3Doutbits63To32RString = "U3DOUTBITS63TO32_R";
static const char *U3ClkResetRRString = "U3_CLK_RESET_R_R";
static const char *U3ClkResetRWString = "U3_CLK_RESET_R_W";
static const char *U3IserdesResetRRString = "U3_ISERDES_RESET_R_R";
static const char *U3IserdesResetRWString = "U3_ISERDES_RESET_R_W";
static const char *Wave0OutRString = "WAVE0_OUT_R";
static const char *Wave0SrcRString = "WAVE0_SRC_R";
static const char *Wave0SrcWString = "WAVE0_SRC_W";
static const char *Wave1OutRString = "WAVE1_OUT_R";
static const char *Wave1SrcRString = "WAVE1_SRC_R";
static const char *Wave1SrcWString = "WAVE1_SRC_W";
static const char *WaveformsAvailableRString = "WAVEFORMS_AVAILABLE_R";
static const char *U15SpiRdbkRString = "_U15_SPI_RDBK_R";
// shared address 56 for _U15_Spi_Rdbk
static const char *U18SpiRdbkRString = "_U18_SPI_RDBK_R";
// shared address 60 for _U18_Spi_Rdbk

const unsigned int scllrfPRCReadRegCount = 252;
const unsigned int scllrfPRCWriteRegCount = 195;



 /* This class implements the AxiVersion driver. */
class scllrfPRCDriver : public scllrfAsynPortDriver {
public:
    scllrfPRCDriver(const char *drvPortName, const char *netPortName);
    scllrfPRCDriver(const char *drvPortName, const char *netPortName, int maxAddr, int paramTableAdds);
    virtual ~scllrfPRCDriver();



protected:
    virtual asynStatus functionToRegister(const int function, FpgaReg *pToFpga); /**< Translate asyn function number/reason to a register address */
	virtual asynStatus processRegReadback(const FpgaReg *pFromFpga,
			bool &waveIsReady); // parse register data, write to PVs
	virtual asynStatus processRegWriteResponse(const FpgaReg *pFromFpga);

/* Registers */
    int p_AdcMmcmR;
    #define FIRST_SCLLRFPRC_PARAM p_AdcMmcmR
    int p_AdcMmcmW;
    int p_AdcTestModeR;
    int p_AdcTestModeW;
    int p_AdcTestResetR;
    int p_AdcTestResetW;
    int p_AdcTestTrigCntR;
    int p_AdcTestWave1OutR;
    int p_AdcTestWave2OutR;
    int p_AdcTestWave3OutR;
    int p_AdcTestWave4OutR;
    int p_AmpstepR;
    int p_AmpstepW;
    int p_Atopdigcfgu2ClkResetRR;
    int p_Atopdigcfgu2ClkResetRW;
    int p_AtopdigdsprewindR;
    int p_AtopdigdsprewindW;
    int p_Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingR;
    int p_Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingW;
    int p_Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingR;
    int p_Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingW;
    int p_Atopdigdsprsmshell1DsplpNotchlp1AkyR;
    int p_Atopdigdsprsmshell1DsplpNotchlp1AkyW;
    int p_AverageLenR;
    int p_AverageLenW;
    int p_BanyanBufR;
    int p_BanyanMaskR;
    int p_BanyanMaskW;
    int p_BanyanStatusR;
    int p_Beam0ModuloR;
    int p_Beam0ModuloW;
    int p_BitslipR;
    int p_BitslipW;
    int p_BufTrigR;
    int p_BufTrigW;
    int p_C0AForoffsR;
    int p_C0AForoffsW;
    int p_C0ARfloffsR;
    int p_C0ARfloffsW;
    int p_C0AmpLpbwR;
    int p_C0AmpLpbwW;
    int p_C0Cav4Elecdot0KOutR;
    int p_C0Cav4Elecdot0KOutW;
    int p_C0Cav4Elecdot1KOutR;
    int p_C0Cav4Elecdot1KOutW;
    int p_C0Cav4ElecdriveCoupleoutCouplingR;
    int p_C0Cav4ElecdriveCoupleoutCouplingW;
    int p_C0Cav4Elecfq0CoarseFreqR;
    int p_C0Cav4Elecfq0CoarseFreqW;
    int p_C0Cav4Elecfq1CoarseFreqR;
    int p_C0Cav4Elecfq1CoarseFreqW;
    int p_C0Cav4Elecfq2CoarseFreqR;
    int p_C0Cav4Elecfq2CoarseFreqW;
    int p_C0Cav4Elecmode0BwR;
    int p_C0Cav4Elecmode0BwW;
    int p_C0Cav4Elecmode0DriveCouplingR;
    int p_C0Cav4Elecmode0DriveCouplingW;
    int p_C0Cav4Elecmode1DriveCouplingR;
    int p_C0Cav4Elecmode1DriveCouplingW;
    int p_C0Cav4Elecmode2BwR;
    int p_C0Cav4Elecmode2BwW;
    int p_C0Cav4Elecmode2DriveCouplingR;
    int p_C0Cav4Elecmode2DriveCouplingW;
    int p_C0Cav4Elecmode2OcoupophoffR;
    int p_C0Cav4Elecmode2OcoupophoffW;
    int p_C0Cav4Elecmode2OcoupoutCouplingR;
    int p_C0Cav4Elecmode2OcoupoutCouplingW;
    int p_C0Cav4ElecmoduloR;
    int p_C0Cav4ElecmoduloW;
    int p_C0Cav4ElecouterProd2KOutR;
    int p_C0Cav4ElecouterProd2KOutW;
    int p_C0ComprsatCtlR;
    int p_C0ComprsatCtlW;
    int p_C0DelayPcXxxR;
    int p_C0DelayPcXxxW;
    int p_C0DspchanKeepR;
    int p_C0DspchanKeepW;
    int p_C0DspfdbkCorecoarseScaleR;
    int p_C0DspfdbkCorecoarseScaleW;
    int p_C0DspfdbkCorempProclimR;
    int p_C0DspfdbkCorempProclimW;
    int p_C0DspfdbkCorempProcselThreshR;
    int p_C0DspfdbkCorempProcselThreshW;
    int p_C0DspfdbkCorempProcsetmp0R;
    int p_C0DspfdbkCorempProcsetmp0W;
    int p_C0DspfdbkCorempProcsetmp1R;
    int p_C0DspfdbkCorempProcsetmp1W;
    int p_C0DspfdbkCorempProcsetmp2R;
    int p_C0DspfdbkCorempProcsetmp2W;
    int p_C0DspfdbkCorempProcsetmp3R;
    int p_C0DspfdbkCorempProcsetmp3W;
    int p_C0DsplpNotchlp1AkyR;
    int p_C0DsplpNotchlp1AkyW;
    int p_C0DsplpNotchlp1BkyR;
    int p_C0DsplpNotchlp1BkyW;
    int p_C0DsppiezopiezoDcR;
    int p_C0DsppiezopiezoDcW;
    int p_C0DsppiezosfConstsR;
    int p_C0DsppiezosfConstsW;
    int p_C0DspuseFiberIqR;
    int p_C0DspuseFiberIqW;
    int p_C0DspwaveSampPerR;
    int p_C0DspwaveSampPerW;
    int p_C0DspwaveShiftR;
    int p_C0DspwaveShiftW;
    int p_C0PhaseStepR;
    int p_C0PhaseStepW;
    int p_C0PrngivbR;
    int p_C0PrngivbW;
    int p_C0PrngrandomRunR;
    int p_C0PrngrandomRunW;
    int p_C1ACavoffsR;
    int p_C1ACavoffsW;
    int p_C1ARfloffsR;
    int p_C1ARfloffsW;
    int p_C1Cav4Elecdot0KOutR;
    int p_C1Cav4Elecdot0KOutW;
    int p_C1Cav4Elecdot2KOutR;
    int p_C1Cav4Elecdot2KOutW;
    int p_C1Cav4ElecdriveCoupleophoffR;
    int p_C1Cav4ElecdriveCoupleophoffW;
    int p_C1Cav4Elecfq0CoarseFreqR;
    int p_C1Cav4Elecfq0CoarseFreqW;
    int p_C1Cav4Elecfq1CoarseFreqR;
    int p_C1Cav4Elecfq1CoarseFreqW;
    int p_C1Cav4Elecfq2CoarseFreqR;
    int p_C1Cav4Elecfq2CoarseFreqW;
    int p_C1Cav4Elecmode0BeamCouplingR;
    int p_C1Cav4Elecmode0BeamCouplingW;
    int p_C1Cav4Elecmode0DriveCouplingR;
    int p_C1Cav4Elecmode0DriveCouplingW;
    int p_C1Cav4Elecmode0OcoupoutCouplingR;
    int p_C1Cav4Elecmode0OcoupoutCouplingW;
    int p_C1Cav4Elecmode1BeamCouplingR;
    int p_C1Cav4Elecmode1BeamCouplingW;
    int p_C1Cav4Elecmode1DriveCouplingR;
    int p_C1Cav4Elecmode1DriveCouplingW;
    int p_C1Cav4Elecmode1OcoupophoffR;
    int p_C1Cav4Elecmode1OcoupophoffW;
    int p_C1Cav4Elecmode2OcoupophoffR;
    int p_C1Cav4Elecmode2OcoupophoffW;
    int p_C1Cav4ElecmoduloR;
    int p_C1Cav4ElecmoduloW;
    int p_C1Cav4ElecouterProd2KOutR;
    int p_C1Cav4ElecouterProd2KOutW;
    int p_C1Cav4ElecphaseStepR;
    int p_C1Cav4ElecphaseStepW;
    int p_C1DelayPcXxxR;
    int p_C1DelayPcXxxW;
    int p_C1DspfdbkCorecoarseScaleR;
    int p_C1DspfdbkCorecoarseScaleW;
    int p_C1DspfdbkCorempProclimR;
    int p_C1DspfdbkCorempProclimW;
    int p_C1DspfdbkCorempProcphOffsetR;
    int p_C1DspfdbkCorempProcphOffsetW;
    int p_C1DspfdbkCorempProcselEnR;
    int p_C1DspfdbkCorempProcselEnW;
    int p_C1DspfdbkCorempProcselThreshR;
    int p_C1DspfdbkCorempProcselThreshW;
    int p_C1DsplpNotchlp1AkxR;
    int p_C1DsplpNotchlp1AkxW;
    int p_C1DsplpNotchlp1BkxR;
    int p_C1DsplpNotchlp1BkxW;
    int p_C1DsplpNotchlp1BkyR;
    int p_C1DsplpNotchlp1BkyW;
    int p_C1DspmoduloR;
    int p_C1DspmoduloW;
    int p_C1DspphaseStepR;
    int p_C1DspphaseStepW;
    int p_C1DsppiezopiezoDcR;
    int p_C1DsppiezopiezoDcW;
    int p_C1DsptagR;
    int p_C1DsptagW;
    int p_C1DspuseFiberIqR;
    int p_C1DspuseFiberIqW;
    int p_C1DspwaveSampPerR;
    int p_C1DspwaveSampPerW;
    int p_C1ModuloR;
    int p_C1ModuloW;
    int p_C1PhaseInitR;
    int p_C1PhaseInitW;
    int p_C1PiezoCouplekOutR;
    int p_C1PiezoCouplekOutW;
    int p_C1PrngivaR;
    int p_C1PrngivaW;
    int p_C1PrngrandomRunR;
    int p_C1PrngrandomRunW;
    int p_Cav0ACavoffsR;
    int p_Cav0ACavoffsW;
    int p_Cav0Cav4Elecdot2KOutR;
    int p_Cav0Cav4Elecdot2KOutW;
    int p_Cav0Cav4Elecmode0OcoupoutCouplingR;
    int p_Cav0Cav4Elecmode0OcoupoutCouplingW;
    int p_Cav0Cav4Elecmode1BwR;
    int p_Cav0Cav4Elecmode1BwW;
    int p_Cav0Cav4Elecmode1OcoupophoffR;
    int p_Cav0Cav4Elecmode1OcoupophoffW;
    int p_Cav0Cav4Elecmode1OcoupoutCouplingR;
    int p_Cav0Cav4Elecmode1OcoupoutCouplingW;
    int p_Cav0Cav4ElecouterProd1KOutR;
    int p_Cav0Cav4ElecouterProd1KOutW;
    int p_Cav0Cav4ElecphaseStepR;
    int p_Cav0Cav4ElecphaseStepW;
    int p_Cav0PiezoCouplekOutR;
    int p_Cav0PiezoCouplekOutW;
    int p_Cav0PrngivaR;
    int p_Cav0PrngivaW;
    int p_Cav1Cav4Elecdot1KOutR;
    int p_Cav1Cav4Elecdot1KOutW;
    int p_Cav1Cav4ElecdriveCoupleoutCouplingR;
    int p_Cav1Cav4ElecdriveCoupleoutCouplingW;
    int p_Cav1Cav4Elecmode0BwR;
    int p_Cav1Cav4Elecmode0BwW;
    int p_Cav1Cav4Elecmode0OcoupophoffR;
    int p_Cav1Cav4Elecmode0OcoupophoffW;
    int p_Cav1Cav4Elecmode1OcoupoutCouplingR;
    int p_Cav1Cav4Elecmode1OcoupoutCouplingW;
    int p_Cav1Cav4Elecmode2BwR;
    int p_Cav1Cav4Elecmode2BwW;
    int p_Cav1Cav4ElecouterProd1KOutR;
    int p_Cav1Cav4ElecouterProd1KOutW;
    int p_Cav1PrngivbR;
    int p_Cav1PrngivbW;
    int p_Cav4MechprngivaR;
    int p_Cav4MechprngivaW;
    int p_Cav4MechprngrandomRunR;
    int p_Cav4MechprngrandomRunW;
    int p_CavSelR;
    int p_CavSelW;
    int p_CicPeriodR;
    int p_CicPeriodW;
    int p_CicShiftR;
    int p_CicShiftW;
    int p_CircleBufFlipR;
    int p_CircleBufFlipW;
    int p_ClkPhaseDiffOutU2R;
    int p_ClkPhaseDiffOutU3R;
    int p_ClkStatusOutR;
    int p_ClkStatusWeR;
    int p_ClkStatusWeW;
    int p_CrcErrorsR;
    int p_CtraceRunningR;
    int p_DacDdsResetR;
    int p_DacDdsResetW;
    int p_DdsaModuloR;
    int p_DdsaModuloW;
    int p_DdsaPhstepHR;
    int p_DdsaPhstepHW;
    int p_DigcfgidelayctrlResetRR;
    int p_DigcfgidelayctrlResetRW;
    int p_DigcfgrawadcTrigR;
    int p_DigcfgrawadcTrigW;
    int p_DigcfgsyncTps62210CsetR;
    int p_DigcfgsyncTps62210CsetW;
    int p_Digcfgu18SpiDataAddrRR;
    int p_Digcfgu18SpiDataAddrRW;
    int p_Digcfgu18SpiReadAndStartRR;
    int p_Digcfgu18SpiReadAndStartRW;
    int p_Digcfgu4ResetRR;
    int p_Digcfgu4ResetRW;
    int p_DigdspamplitudeR;
    int p_DigdspamplitudeW;
    int p_DigdspdacModeR;
    int p_DigdspdacModeW;
    int p_DigdspddsaPhstepLR;
    int p_DigdspddsaPhstepLW;
    int p_DigdspmoduloR;
    int p_DigdspmoduloW;
    int p_DigdspphaseStepHR;
    int p_DigdspphaseStepHW;
    int p_Digdsprsmcav0Cav4ElecouterProd0KOutR;
    int p_Digdsprsmcav0Cav4ElecouterProd0KOutW;
    int p_Digdsprsmcav1AForoffsR;
    int p_Digdsprsmcav1AForoffsW;
    int p_Digdsprsmshell0DsplpNotchlp1AkxR;
    int p_Digdsprsmshell0DsplpNotchlp1AkxW;
    int p_Digdsprsmshell1DspfdbkCorempProccoeffR;
    int p_Digdsprsmshell1DspfdbkCorempProccoeffW;
    int p_DigdsptraceKeepR;
    int p_DigdsptraceKeepW;
    int p_DomainJumpRealignR;
    int p_DomainJumpRealignW;
    int p_FfffffffR;
    int p_Frequency4XoutR;
    int p_FrequencyAdcR;
    int p_FrequencyClkout3R;
    int p_FrequencyDcoR;
    int p_FrequencyGtxRxR;
    int p_FrequencyGtxTxR;
    int p_H0D0A0D0AR;
    int p_HellR;
    int p_HistCountWStrobeR;
    int p_HistCountWStrobeW;
    int p_HistDoutR;
    int p_HistStatusR;
    int p_IccCfgR;
    int p_IccCfgW;
    int p_IdelayBaseR;
    int p_IdelayValueOutU2Bits19To0R;
    int p_IdelayValueOutU2Bits39To20R;
    int p_IdelayValueOutU3Bits19To0R;
    int p_IdelayValueOutU3Bits39To20R;
    int p_LlrfCircleDataR;
    int p_LlrfCircleReadyR;
    int p_LlrfDspDacEnR;
    int p_LlrfDspDacEnW;
    int p_LlspiResultR;
    int p_LlspiStatusR;
    int p_LlspiWeR;
    int p_LlspiWeW;
    int p_LoAmpR;
    int p_LoAmpW;
    int p_MmcmResetRR;
    int p_MmcmResetRW;
    int p_NoiseCouplekOutR;
    int p_NoiseCouplekOutW;
    int p_OWoR;
    int p_PeriphConfigR;
    int p_PeriphConfigW;
    int p_PhaseStepLR;
    int p_PhaseStepLW;
    int p_PhasexDoutR;
    int p_PhasexStatusR;
    int p_PhasexTrigR;
    int p_PhasexTrigW;
    int p_PrcDspprlGainR;
    int p_PrcDspprlGainW;
    int p_PrlCfgR;
    int p_PrlCfgW;
    int p_PropConstR;
    int p_PropConstW;
    int p_QsfpBufR;
    int p_QsfpI2CRegR;
    int p_QsfpI2CRegW;
    int p_RldR;
    int p_Rsmbeam0PhaseInitR;
    int p_Rsmbeam0PhaseInitW;
    int p_Rsmbeam1PhaseStepR;
    int p_Rsmbeam1PhaseStepW;
    int p_Rsmcav0Cav4ElecdriveCoupleophoffR;
    int p_Rsmcav0Cav4ElecdriveCoupleophoffW;
    int p_Rsmcav0Cav4Elecmode0BeamCouplingR;
    int p_Rsmcav0Cav4Elecmode0BeamCouplingW;
    int p_Rsmcav0Cav4Elecmode0OcoupophoffR;
    int p_Rsmcav0Cav4Elecmode0OcoupophoffW;
    int p_Rsmcav1AmpLpbwR;
    int p_Rsmcav1AmpLpbwW;
    int p_Rsmcav1Cav4Elecmode1BwR;
    int p_Rsmcav1Cav4Elecmode1BwW;
    int p_Rsmcav1Cav4Elecmode2BeamCouplingR;
    int p_Rsmcav1Cav4Elecmode2BeamCouplingW;
    int p_Rsmcav1Cav4Elecmode2OcoupoutCouplingR;
    int p_Rsmcav1Cav4Elecmode2OcoupoutCouplingW;
    int p_Rsmcav1Cav4ElecouterProd0KOutR;
    int p_Rsmcav1Cav4ElecouterProd0KOutW;
    int p_Rsmcav1ComprsatCtlR;
    int p_Rsmcav1ComprsatCtlW;
    int p_Rsmcav4MechprngivbR;
    int p_Rsmcav4MechprngivbW;
    int p_RsmdacIqPhaseR;
    int p_RsmdacIqPhaseW;
    int p_Rsmshell0DsplpNotchlp1BkxR;
    int p_Rsmshell0DsplpNotchlp1BkxW;
    int p_Rsmshell1DsppiezosfConstsR;
    int p_Rsmshell1DsppiezosfConstsW;
    int p_ScanTriggerWeR;
    int p_ScanTriggerWeW;
    int p_ScannerDebugR;
    int p_ScannerDebugW;
    int p_ScannerResultR;
    int p_SfpAddressSetR;
    int p_SfpAddressSetW;
    int p_Shell0DspfdbkCorempProccoeffR;
    int p_Shell0DspfdbkCorempProccoeffW;
    int p_Shell0DspfdbkCorempProcphOffsetR;
    int p_Shell0DspfdbkCorempProcphOffsetW;
    int p_Shell0DspfdbkCorempProcselEnR;
    int p_Shell0DspfdbkCorempProcselEnW;
    int p_Shell0DspmoduloR;
    int p_Shell0DspmoduloW;
    int p_Shell0DspphaseStepR;
    int p_Shell0DspphaseStepW;
    int p_Shell0DsptagR;
    int p_Shell0DsptagW;
    int p_Shell1DspchanKeepR;
    int p_Shell1DspchanKeepW;
    int p_Shell1DspfdbkCorempProcsetmp0R;
    int p_Shell1DspfdbkCorempProcsetmp0W;
    int p_Shell1DspfdbkCorempProcsetmp1R;
    int p_Shell1DspfdbkCorempProcsetmp1W;
    int p_Shell1DspfdbkCorempProcsetmp2R;
    int p_Shell1DspfdbkCorempProcsetmp2W;
    int p_Shell1DspfdbkCorempProcsetmp3R;
    int p_Shell1DspfdbkCorempProcsetmp3W;
    int p_Shell1DspwaveShiftR;
    int p_Shell1DspwaveShiftW;
    int p_Shell0SlowDataR;
    int p_Shell1SlowDataR;
    int p_SlowChainOutR;
    int p_SsaStimgPeriodR;
    int p_SsaStimgPeriodW;
    int p_SsaStimpertstepR;
    int p_SsaStimpertstepW;
    int p_SsaStimEnR;
    int p_SsaStimEnW;
    int p_SyncAd7794CsetR;
    int p_SyncAd7794CsetW;
    int p_TagNowR;
    int p_TagNowW;
    int p_TraceIBufR;
    int p_TraceIqBufR;
    int p_TraceQBufR;
    int p_TraceResetWeR;
    int p_TraceResetWeW;
    int p_TraceStatus1R;
    int p_TraceStatus2R;
    int p_TrigInternalR;
    int p_TrigInternalW;
    int p_TrigModeR;
    int p_TrigModeW;
    int p_U15SdioAsSdoR;
    int p_U15SdoAddrR;
    int p_U15SpiDataAddrRR;
    int p_U15SpiDataAddrRW;
    int p_U15SpiReadAndStartRR;
    int p_U15SpiReadAndStartRW;
    int p_U15SpiReadyR;
    int p_U18SdioAsSdoR;
    int p_U18SdoAddrR;
    int p_U18SpiReadyR;
    int p_U2Doutbits31To0R;
    int p_U2Doutbits63To32R;
    int p_U2IserdesResetRR;
    int p_U2IserdesResetRW;
    int p_U3Doutbits31To0R;
    int p_U3Doutbits63To32R;
    int p_U3ClkResetRR;
    int p_U3ClkResetRW;
    int p_U3IserdesResetRR;
    int p_U3IserdesResetRW;
    int p_Wave0OutR;
    int p_Wave0SrcR;
    int p_Wave0SrcW;
    int p_Wave1OutR;
    int p_Wave1SrcR;
    int p_Wave1SrcW;
    int p_WaveformsAvailableR;
    int p_U15SpiRdbkR;
    int p_U18SpiRdbkR;
    #define LAST_SCLLRFPRC_PARAM p_U18SpiRdbkR

#define NUM_SCLLRFPRC_PARAMS (&LAST_SCLLRFPRC_PARAM - &FIRST_SCLLRFPRC_PARAM + NUM_SCLLRF_PARAMS + 1)


    // mapping of register names to addresses
    enum ReadRegAddrs
    {
    	HellRAdr = 0x00000000,
    	OWoRAdr = 0x00000001,
    	RldRAdr = 0x00000002,
    	H0D0A0D0ARAdr = 0x00000003,
    	LlspiStatusRAdr = 0x00000004,
    	LlspiResultRAdr = 0x00000005,
    	ClkStatusOutRAdr = 0x00000006,
    	FfffffffRAdr = 0x00000007,
    	FrequencyAdcRAdr = 0x00000008,
    	Frequency4XoutRAdr = 0x00000009,
    	FrequencyClkout3RAdr = 0x0000000A,
    	FrequencyDcoRAdr = 0x0000000B,
    	U2Doutbits31To0RAdr = 0x0000000C,
    	U2Doutbits63To32RAdr = 0x0000000D,
    	IdelayValueOutU2Bits19To0RAdr = 0x0000000E,
    	IdelayValueOutU2Bits39To20RAdr = 0x0000000F,
    	U3Doutbits31To0RAdr = 0x00000010,
    	U3Doutbits63To32RAdr = 0x00000011,
    	IdelayValueOutU3Bits19To0RAdr = 0x00000012,
    	IdelayValueOutU3Bits39To20RAdr = 0x00000013,
    	Wave0OutRAdr = 0x00000014,
    	Wave1OutRAdr = 0x00000015,
    	AdcTestWave1OutRAdr = 0x00000016,
    	AdcTestWave2OutRAdr = 0x00000017,
    	AdcTestWave3OutRAdr = 0x00000018,
    	AdcTestWave4OutRAdr = 0x00000019,
    	CtraceRunningRAdr = 0x0000001C,
    	FrequencyGtxTxRAdr = 0x0000001D,
    	FrequencyGtxRxRAdr = 0x0000001E,
    	HistStatusRAdr = 0x0000001F,
    	PhasexStatusRAdr = 0x0000002E,
    	ClkPhaseDiffOutU2RAdr = 0x0000002F,
    	ClkPhaseDiffOutU3RAdr = 0x00000030,
    	CrcErrorsRAdr = 0x00000031,
    	U15SdoAddrRAdr = 0x00000038,
    	U15SpiRdbkRAdr = 0x00000038,
    	U15SpiReadyRAdr = 0x00000039,
    	U15SdioAsSdoRAdr = 0x00000039,
    	U18SdoAddrRAdr = 0x0000003C,
    	U18SpiRdbkRAdr = 0x0000003C,
    	U18SdioAsSdoRAdr = 0x0000003D,
    	U18SpiReadyRAdr = 0x0000003D,
    	AdcTestTrigCntRAdr = 0x00000040,
    	WaveformsAvailableRAdr = 0x00000041,
    	BanyanStatusRAdr = 0x00000042,
    	SlowChainOutRAdr = 0x00000043,
    	TraceStatus1RAdr = 0x00000044,
    	TraceStatus2RAdr = 0x00000045,
    	LlrfCircleReadyRAdr = 0x00000046,
    	IdelayBaseRAdr = 0x00000070,
    	HistDoutRAdr = 0x00100000,
    	PhasexDoutRAdr = 0x00110000,
    	BanyanBufRAdr = 0x00120000,
    	ScannerResultRAdr = 0x00130000,
    	TraceIqBufRAdr = 0x00140000,
    	TraceIBufRAdr = 0x00148000,
    	TraceQBufRAdr = 0x0014C000,
    	QsfpBufRAdr = 0x00153000,
    	LlrfCircleDataRAdr = 0x00170000,
    	Shell0SlowDataRAdr = 0x00180000,
    	Shell1SlowDataRAdr = 0x00190000,
    	NoiseCouplekOutRAdr = 0x00800000,
    	PropConstRAdr = 0x00800400,
    	C0Cav4Elecdot0KOutRAdr = 0x00800800,
    	C0Cav4Elecdot1KOutRAdr = 0x00800C00,
    	Cav0Cav4Elecdot2KOutRAdr = 0x00801000,
    	Digdsprsmcav0Cav4ElecouterProd0KOutRAdr = 0x00801400,
    	Cav0Cav4ElecouterProd1KOutRAdr = 0x00801800,
    	C0Cav4ElecouterProd2KOutRAdr = 0x00801C00,
    	Cav0PiezoCouplekOutRAdr = 0x00802000,
    	C1Cav4Elecdot0KOutRAdr = 0x00802400,
    	Cav1Cav4Elecdot1KOutRAdr = 0x00802800,
    	C1Cav4Elecdot2KOutRAdr = 0x00802C00,
    	Rsmcav1Cav4ElecouterProd0KOutRAdr = 0x00803000,
    	Cav1Cav4ElecouterProd1KOutRAdr = 0x00803400,
    	C1Cav4ElecouterProd2KOutRAdr = 0x00803800,
    	C1PiezoCouplekOutRAdr = 0x00803C00,
    	C0DelayPcXxxRAdr = 0x00804000,
    	C1DelayPcXxxRAdr = 0x00804400,
    	C0DsppiezosfConstsRAdr = 0x00804800,
    	Rsmshell1DsppiezosfConstsRAdr = 0x00804808,
    	Shell0DspfdbkCorempProccoeffRAdr = 0x00804810,
    	C0DspfdbkCorempProclimRAdr = 0x00804814,
    	C0DspfdbkCorempProcsetmp0RAdr = 0x00804818,
    	C0DspfdbkCorempProcsetmp1RAdr = 0x00804819,
    	C0DspfdbkCorempProcsetmp2RAdr = 0x0080481A,
    	C0DspfdbkCorempProcsetmp3RAdr = 0x0080481B,
    	Digdsprsmshell1DspfdbkCorempProccoeffRAdr = 0x0080481C,
    	C1DspfdbkCorempProclimRAdr = 0x00804820,
    	Shell1DspfdbkCorempProcsetmp0RAdr = 0x00804824,
    	Shell1DspfdbkCorempProcsetmp1RAdr = 0x00804825,
    	Shell1DspfdbkCorempProcsetmp2RAdr = 0x00804826,
    	Shell1DspfdbkCorempProcsetmp3RAdr = 0x00804827,
    	C0Cav4ElecdriveCoupleoutCouplingRAdr = 0x00804828,
    	Rsmcav0Cav4ElecdriveCoupleophoffRAdr = 0x0080482A,
    	Cav0Cav4Elecmode0OcoupoutCouplingRAdr = 0x0080482C,
    	Rsmcav0Cav4Elecmode0OcoupophoffRAdr = 0x0080482E,
    	Cav0Cav4Elecmode1OcoupoutCouplingRAdr = 0x00804830,
    	Cav0Cav4Elecmode1OcoupophoffRAdr = 0x00804832,
    	C0Cav4Elecmode2OcoupoutCouplingRAdr = 0x00804834,
    	C0Cav4Elecmode2OcoupophoffRAdr = 0x00804836,
    	Cav1Cav4ElecdriveCoupleoutCouplingRAdr = 0x00804838,
    	C1Cav4ElecdriveCoupleophoffRAdr = 0x0080483A,
    	C1Cav4Elecmode0OcoupoutCouplingRAdr = 0x0080483C,
    	Cav1Cav4Elecmode0OcoupophoffRAdr = 0x0080483E,
    	Cav1Cav4Elecmode1OcoupoutCouplingRAdr = 0x00804840,
    	C1Cav4Elecmode1OcoupophoffRAdr = 0x00804842,
    	Rsmcav1Cav4Elecmode2OcoupoutCouplingRAdr = 0x00804844,
    	C1Cav4Elecmode2OcoupophoffRAdr = 0x00804846,
    	Digdsprsmshell0DsplpNotchlp1AkxRAdr = 0x00804848,
    	C0DsplpNotchlp1AkyRAdr = 0x0080484A,
    	Rsmshell0DsplpNotchlp1BkxRAdr = 0x0080484C,
    	C0DsplpNotchlp1BkyRAdr = 0x0080484E,
    	C1DsplpNotchlp1AkxRAdr = 0x00804850,
    	Atopdigdsprsmshell1DsplpNotchlp1AkyRAdr = 0x00804852,
    	C1DsplpNotchlp1BkxRAdr = 0x00804854,
    	C1DsplpNotchlp1BkyRAdr = 0x00804856,
    	AdcMmcmRAdr = 0x00804858,
    	U15SpiDataAddrRRAdr = 0x00804859,
    	U15SpiReadAndStartRRAdr = 0x0080485A,
    	Digcfgu18SpiDataAddrRRAdr = 0x0080485B,
    	Digcfgu18SpiReadAndStartRRAdr = 0x0080485C,
    	Atopdigcfgu2ClkResetRRAdr = 0x0080485D,
    	U2IserdesResetRRAdr = 0x0080485E,
    	U3ClkResetRRAdr = 0x0080485F,
    	U3IserdesResetRRAdr = 0x00804860,
    	Digcfgu4ResetRRAdr = 0x00804861,
    	BanyanMaskRAdr = 0x00804862,
    	BitslipRAdr = 0x00804863,
    	ClkStatusWeRAdr = 0x00804864,
    	DigcfgidelayctrlResetRRAdr = 0x00804865,
    	LlspiWeRAdr = 0x00804866,
    	MmcmResetRRAdr = 0x00804867,
    	PeriphConfigRAdr = 0x00804868,
    	PhasexTrigRAdr = 0x00804869,
    	DigcfgrawadcTrigRAdr = 0x0080486A,
    	ScanTriggerWeRAdr = 0x0080486B,
    	ScannerDebugRAdr = 0x0080486C,
    	SyncAd7794CsetRAdr = 0x0080486D,
    	DigcfgsyncTps62210CsetRAdr = 0x0080486E,
    	AdcTestModeRAdr = 0x0080486F,
    	AdcTestResetRAdr = 0x00804870,
    	DigdspamplitudeRAdr = 0x00804871,
    	AverageLenRAdr = 0x00804872,
    	BufTrigRAdr = 0x00804873,
    	CicPeriodRAdr = 0x00804874,
    	CicShiftRAdr = 0x00804875,
    	CircleBufFlipRAdr = 0x00804876,
    	DacDdsResetRAdr = 0x00804877,
    	DigdspdacModeRAdr = 0x00804878,
    	DdsaModuloRAdr = 0x00804879,
    	DdsaPhstepHRAdr = 0x0080487A,
    	DigdspddsaPhstepLRAdr = 0x0080487B,
    	HistCountWStrobeRAdr = 0x0080487C,
    	LlrfDspDacEnRAdr = 0x0080487D,
    	LoAmpRAdr = 0x0080487E,
    	DigdspmoduloRAdr = 0x0080487F,
    	DigdspphaseStepHRAdr = 0x00804880,
    	PhaseStepLRAdr = 0x00804881,
    	CavSelRAdr = 0x00804882,
    	PrlCfgRAdr = 0x00804883,
    	PrcDspprlGainRAdr = 0x00804884,
    	Beam0ModuloRAdr = 0x00804885,
    	Rsmbeam0PhaseInitRAdr = 0x00804886,
    	C0PhaseStepRAdr = 0x00804887,
    	C1ModuloRAdr = 0x00804888,
    	C1PhaseInitRAdr = 0x00804889,
    	Rsmbeam1PhaseStepRAdr = 0x0080488A,
    	Cav4MechprngivaRAdr = 0x0080488B,
    	Rsmcav4MechprngivbRAdr = 0x0080488C,
    	Cav4MechprngrandomRunRAdr = 0x0080488D,
    	Cav0ACavoffsRAdr = 0x0080488E,
    	C0AForoffsRAdr = 0x0080488F,
    	C0ARfloffsRAdr = 0x00804890,
    	C0AmpLpbwRAdr = 0x00804891,
    	C0Cav4Elecfq0CoarseFreqRAdr = 0x00804892,
    	C0Cav4Elecfq1CoarseFreqRAdr = 0x00804893,
    	C0Cav4Elecfq2CoarseFreqRAdr = 0x00804894,
    	Rsmcav0Cav4Elecmode0BeamCouplingRAdr = 0x00804895,
    	C0Cav4Elecmode0BwRAdr = 0x00804896,
    	C0Cav4Elecmode0DriveCouplingRAdr = 0x00804897,
    	Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingRAdr = 0x00804898,
    	Cav0Cav4Elecmode1BwRAdr = 0x00804899,
    	C0Cav4Elecmode1DriveCouplingRAdr = 0x0080489A,
    	Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingRAdr = 0x0080489B,
    	C0Cav4Elecmode2BwRAdr = 0x0080489C,
    	C0Cav4Elecmode2DriveCouplingRAdr = 0x0080489D,
    	C0Cav4ElecmoduloRAdr = 0x0080489E,
    	Cav0Cav4ElecphaseStepRAdr = 0x0080489F,
    	C0ComprsatCtlRAdr = 0x008048A0,
    	Cav0PrngivaRAdr = 0x008048A1,
    	C0PrngivbRAdr = 0x008048A2,
    	C0PrngrandomRunRAdr = 0x008048A3,
    	C1ACavoffsRAdr = 0x008048A4,
    	Digdsprsmcav1AForoffsRAdr = 0x008048A5,
    	C1ARfloffsRAdr = 0x008048A6,
    	Rsmcav1AmpLpbwRAdr = 0x008048A7,
    	C1Cav4Elecfq0CoarseFreqRAdr = 0x008048A8,
    	C1Cav4Elecfq1CoarseFreqRAdr = 0x008048A9,
    	C1Cav4Elecfq2CoarseFreqRAdr = 0x008048AA,
    	C1Cav4Elecmode0BeamCouplingRAdr = 0x008048AB,
    	Cav1Cav4Elecmode0BwRAdr = 0x008048AC,
    	C1Cav4Elecmode0DriveCouplingRAdr = 0x008048AD,
    	C1Cav4Elecmode1BeamCouplingRAdr = 0x008048AE,
    	Rsmcav1Cav4Elecmode1BwRAdr = 0x008048AF,
    	C1Cav4Elecmode1DriveCouplingRAdr = 0x008048B0,
    	Rsmcav1Cav4Elecmode2BeamCouplingRAdr = 0x008048B1,
    	Cav1Cav4Elecmode2BwRAdr = 0x008048B2,
    	C1Cav4ElecmoduloRAdr = 0x008048B4,
    	C1Cav4ElecphaseStepRAdr = 0x008048B5,
    	Rsmcav1ComprsatCtlRAdr = 0x008048B6,
    	C1PrngivaRAdr = 0x008048B7,
    	Cav1PrngivbRAdr = 0x008048B8,
    	C1PrngrandomRunRAdr = 0x008048B9,
    	RsmdacIqPhaseRAdr = 0x008048BA,
    	C0DspchanKeepRAdr = 0x008048BB,
    	C0DspfdbkCorecoarseScaleRAdr = 0x008048BC,
    	Shell0DspfdbkCorempProcphOffsetRAdr = 0x008048BD,
    	Shell0DspfdbkCorempProcselEnRAdr = 0x008048BE,
    	C0DspfdbkCorempProcselThreshRAdr = 0x008048BF,
    	Shell0DspmoduloRAdr = 0x008048C0,
    	Shell0DspphaseStepRAdr = 0x008048C1,
    	C0DsppiezopiezoDcRAdr = 0x008048C2,
    	Shell0DsptagRAdr = 0x008048C3,
    	C0DspuseFiberIqRAdr = 0x008048C4,
    	C0DspwaveSampPerRAdr = 0x008048C5,
    	C0DspwaveShiftRAdr = 0x008048C6,
    	Shell1DspchanKeepRAdr = 0x008048C7,
    	C1DspfdbkCorecoarseScaleRAdr = 0x008048C8,
    	C1DspfdbkCorempProcphOffsetRAdr = 0x008048C9,
    	C1DspfdbkCorempProcselEnRAdr = 0x008048CA,
    	C1DspfdbkCorempProcselThreshRAdr = 0x008048CB,
    	C1DspmoduloRAdr = 0x008048CC,
    	C1DspphaseStepRAdr = 0x008048CD,
    	C1DsppiezopiezoDcRAdr = 0x008048CE,
    	C1DsptagRAdr = 0x008048CF,
    	C1DspuseFiberIqRAdr = 0x008048D0,
    	C1DspwaveSampPerRAdr = 0x008048D1,
    	Shell1DspwaveShiftRAdr = 0x008048D2,
    	AtopdigdsprewindRAdr = 0x008048D3,
    	AmpstepRAdr = 0x008048D4,
    	SsaStimEnRAdr = 0x008048D5,
    	SsaStimgPeriodRAdr = 0x008048D6,
    	SsaStimpertstepRAdr = 0x008048D7,
    	DigdsptraceKeepRAdr = 0x008048D8,
    	TraceResetWeRAdr = 0x008048D9,
    	TrigInternalRAdr = 0x008048DA,
    	TrigModeRAdr = 0x008048DB,
    	Wave0SrcRAdr = 0x008048DC,
    	Wave1SrcRAdr = 0x008048DD,
    	DomainJumpRealignRAdr = 0x008048DE,
    	IccCfgRAdr = 0x008048DF,
    	QsfpI2CRegRAdr = 0x008048E0,
    	SfpAddressSetRAdr = 0x008048E1,
    	TagNowRAdr = 0x008048E2,
    };

    // mapping of register names to addresses
    enum RegWriteAddrs
    {
    	NoiseCouplekOutWAdr = 0x00800000,
    	PropConstWAdr = 0x00800400,
    	C0Cav4Elecdot0KOutWAdr = 0x00800800,
    	C0Cav4Elecdot1KOutWAdr = 0x00800C00,
    	Cav0Cav4Elecdot2KOutWAdr = 0x00801000,
    	Digdsprsmcav0Cav4ElecouterProd0KOutWAdr = 0x00801400,
    	Cav0Cav4ElecouterProd1KOutWAdr = 0x00801800,
    	C0Cav4ElecouterProd2KOutWAdr = 0x00801C00,
    	Cav0PiezoCouplekOutWAdr = 0x00802000,
    	C1Cav4Elecdot0KOutWAdr = 0x00802400,
    	Cav1Cav4Elecdot1KOutWAdr = 0x00802800,
    	C1Cav4Elecdot2KOutWAdr = 0x00802C00,
    	Rsmcav1Cav4ElecouterProd0KOutWAdr = 0x00803000,
    	Cav1Cav4ElecouterProd1KOutWAdr = 0x00803400,
    	C1Cav4ElecouterProd2KOutWAdr = 0x00803800,
    	C1PiezoCouplekOutWAdr = 0x00803C00,
    	C0DelayPcXxxWAdr = 0x00804000,
    	C1DelayPcXxxWAdr = 0x00804400,
    	C0DsppiezosfConstsWAdr = 0x00804800,
    	Rsmshell1DsppiezosfConstsWAdr = 0x00804808,
    	Shell0DspfdbkCorempProccoeffWAdr = 0x00804810,
    	C0DspfdbkCorempProclimWAdr = 0x00804814,
    	C0DspfdbkCorempProcsetmp0WAdr = 0x00804818,
    	C0DspfdbkCorempProcsetmp1WAdr = 0x00804819,
    	C0DspfdbkCorempProcsetmp2WAdr = 0x0080481A,
    	C0DspfdbkCorempProcsetmp3WAdr = 0x0080481B,
    	Digdsprsmshell1DspfdbkCorempProccoeffWAdr = 0x0080481C,
    	C1DspfdbkCorempProclimWAdr = 0x00804820,
    	Shell1DspfdbkCorempProcsetmp0WAdr = 0x00804824,
    	Shell1DspfdbkCorempProcsetmp1WAdr = 0x00804825,
    	Shell1DspfdbkCorempProcsetmp2WAdr = 0x00804826,
    	Shell1DspfdbkCorempProcsetmp3WAdr = 0x00804827,
    	C0Cav4ElecdriveCoupleoutCouplingWAdr = 0x00804828,
    	Rsmcav0Cav4ElecdriveCoupleophoffWAdr = 0x0080482A,
    	Cav0Cav4Elecmode0OcoupoutCouplingWAdr = 0x0080482C,
    	Rsmcav0Cav4Elecmode0OcoupophoffWAdr = 0x0080482E,
    	Cav0Cav4Elecmode1OcoupoutCouplingWAdr = 0x00804830,
    	Cav0Cav4Elecmode1OcoupophoffWAdr = 0x00804832,
    	C0Cav4Elecmode2OcoupoutCouplingWAdr = 0x00804834,
    	C0Cav4Elecmode2OcoupophoffWAdr = 0x00804836,
    	Cav1Cav4ElecdriveCoupleoutCouplingWAdr = 0x00804838,
    	C1Cav4ElecdriveCoupleophoffWAdr = 0x0080483A,
    	C1Cav4Elecmode0OcoupoutCouplingWAdr = 0x0080483C,
    	Cav1Cav4Elecmode0OcoupophoffWAdr = 0x0080483E,
    	Cav1Cav4Elecmode1OcoupoutCouplingWAdr = 0x00804840,
    	C1Cav4Elecmode1OcoupophoffWAdr = 0x00804842,
    	Rsmcav1Cav4Elecmode2OcoupoutCouplingWAdr = 0x00804844,
    	C1Cav4Elecmode2OcoupophoffWAdr = 0x00804846,
    	Digdsprsmshell0DsplpNotchlp1AkxWAdr = 0x00804848,
    	C0DsplpNotchlp1AkyWAdr = 0x0080484A,
    	Rsmshell0DsplpNotchlp1BkxWAdr = 0x0080484C,
    	C0DsplpNotchlp1BkyWAdr = 0x0080484E,
    	C1DsplpNotchlp1AkxWAdr = 0x00804850,
    	Atopdigdsprsmshell1DsplpNotchlp1AkyWAdr = 0x00804852,
    	C1DsplpNotchlp1BkxWAdr = 0x00804854,
    	C1DsplpNotchlp1BkyWAdr = 0x00804856,
    	AdcMmcmWAdr = 0x00804858,
    	U15SpiDataAddrRWAdr = 0x00804859,
    	U15SpiReadAndStartRWAdr = 0x0080485A,
    	Digcfgu18SpiDataAddrRWAdr = 0x0080485B,
    	Digcfgu18SpiReadAndStartRWAdr = 0x0080485C,
    	Atopdigcfgu2ClkResetRWAdr = 0x0080485D,
    	U2IserdesResetRWAdr = 0x0080485E,
    	U3ClkResetRWAdr = 0x0080485F,
    	U3IserdesResetRWAdr = 0x00804860,
    	Digcfgu4ResetRWAdr = 0x00804861,
    	BanyanMaskWAdr = 0x00804862,
    	BitslipWAdr = 0x00804863,
    	ClkStatusWeWAdr = 0x00804864,
    	DigcfgidelayctrlResetRWAdr = 0x00804865,
    	LlspiWeWAdr = 0x00804866,
    	MmcmResetRWAdr = 0x00804867,
    	PeriphConfigWAdr = 0x00804868,
    	PhasexTrigWAdr = 0x00804869,
    	DigcfgrawadcTrigWAdr = 0x0080486A,
    	ScanTriggerWeWAdr = 0x0080486B,
    	ScannerDebugWAdr = 0x0080486C,
    	SyncAd7794CsetWAdr = 0x0080486D,
    	DigcfgsyncTps62210CsetWAdr = 0x0080486E,
    	AdcTestModeWAdr = 0x0080486F,
    	AdcTestResetWAdr = 0x00804870,
    	DigdspamplitudeWAdr = 0x00804871,
    	AverageLenWAdr = 0x00804872,
    	BufTrigWAdr = 0x00804873,
    	CicPeriodWAdr = 0x00804874,
    	CicShiftWAdr = 0x00804875,
    	CircleBufFlipWAdr = 0x00804876,
    	DacDdsResetWAdr = 0x00804877,
    	DigdspdacModeWAdr = 0x00804878,
    	DdsaModuloWAdr = 0x00804879,
    	DdsaPhstepHWAdr = 0x0080487A,
    	DigdspddsaPhstepLWAdr = 0x0080487B,
    	HistCountWStrobeWAdr = 0x0080487C,
    	LlrfDspDacEnWAdr = 0x0080487D,
    	LoAmpWAdr = 0x0080487E,
    	DigdspmoduloWAdr = 0x0080487F,
    	DigdspphaseStepHWAdr = 0x00804880,
    	PhaseStepLWAdr = 0x00804881,
    	CavSelWAdr = 0x00804882,
    	PrlCfgWAdr = 0x00804883,
    	PrcDspprlGainWAdr = 0x00804884,
    	Beam0ModuloWAdr = 0x00804885,
    	Rsmbeam0PhaseInitWAdr = 0x00804886,
    	C0PhaseStepWAdr = 0x00804887,
    	C1ModuloWAdr = 0x00804888,
    	C1PhaseInitWAdr = 0x00804889,
    	Rsmbeam1PhaseStepWAdr = 0x0080488A,
    	Cav4MechprngivaWAdr = 0x0080488B,
    	Rsmcav4MechprngivbWAdr = 0x0080488C,
    	Cav4MechprngrandomRunWAdr = 0x0080488D,
    	Cav0ACavoffsWAdr = 0x0080488E,
    	C0AForoffsWAdr = 0x0080488F,
    	C0ARfloffsWAdr = 0x00804890,
    	C0AmpLpbwWAdr = 0x00804891,
    	C0Cav4Elecfq0CoarseFreqWAdr = 0x00804892,
    	C0Cav4Elecfq1CoarseFreqWAdr = 0x00804893,
    	C0Cav4Elecfq2CoarseFreqWAdr = 0x00804894,
    	Rsmcav0Cav4Elecmode0BeamCouplingWAdr = 0x00804895,
    	C0Cav4Elecmode0BwWAdr = 0x00804896,
    	C0Cav4Elecmode0DriveCouplingWAdr = 0x00804897,
    	Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingWAdr = 0x00804898,
    	Cav0Cav4Elecmode1BwWAdr = 0x00804899,
    	C0Cav4Elecmode1DriveCouplingWAdr = 0x0080489A,
    	Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingWAdr = 0x0080489B,
    	C0Cav4Elecmode2BwWAdr = 0x0080489C,
    	C0Cav4Elecmode2DriveCouplingWAdr = 0x0080489D,
    	C0Cav4ElecmoduloWAdr = 0x0080489E,
    	Cav0Cav4ElecphaseStepWAdr = 0x0080489F,
    	C0ComprsatCtlWAdr = 0x008048A0,
    	Cav0PrngivaWAdr = 0x008048A1,
    	C0PrngivbWAdr = 0x008048A2,
    	C0PrngrandomRunWAdr = 0x008048A3,
    	C1ACavoffsWAdr = 0x008048A4,
    	Digdsprsmcav1AForoffsWAdr = 0x008048A5,
    	C1ARfloffsWAdr = 0x008048A6,
    	Rsmcav1AmpLpbwWAdr = 0x008048A7,
    	C1Cav4Elecfq0CoarseFreqWAdr = 0x008048A8,
    	C1Cav4Elecfq1CoarseFreqWAdr = 0x008048A9,
    	C1Cav4Elecfq2CoarseFreqWAdr = 0x008048AA,
    	C1Cav4Elecmode0BeamCouplingWAdr = 0x008048AB,
    	Cav1Cav4Elecmode0BwWAdr = 0x008048AC,
    	C1Cav4Elecmode0DriveCouplingWAdr = 0x008048AD,
    	C1Cav4Elecmode1BeamCouplingWAdr = 0x008048AE,
    	Rsmcav1Cav4Elecmode1BwWAdr = 0x008048AF,
    	C1Cav4Elecmode1DriveCouplingWAdr = 0x008048B0,
    	Rsmcav1Cav4Elecmode2BeamCouplingWAdr = 0x008048B1,
    	Cav1Cav4Elecmode2BwWAdr = 0x008048B2,
    	C1Cav4ElecmoduloWAdr = 0x008048B4,
    	C1Cav4ElecphaseStepWAdr = 0x008048B5,
    	Rsmcav1ComprsatCtlWAdr = 0x008048B6,
    	C1PrngivaWAdr = 0x008048B7,
    	Cav1PrngivbWAdr = 0x008048B8,
    	C1PrngrandomRunWAdr = 0x008048B9,
    	RsmdacIqPhaseWAdr = 0x008048BA,
    	C0DspchanKeepWAdr = 0x008048BB,
    	C0DspfdbkCorecoarseScaleWAdr = 0x008048BC,
    	Shell0DspfdbkCorempProcphOffsetWAdr = 0x008048BD,
    	Shell0DspfdbkCorempProcselEnWAdr = 0x008048BE,
    	C0DspfdbkCorempProcselThreshWAdr = 0x008048BF,
    	Shell0DspmoduloWAdr = 0x008048C0,
    	Shell0DspphaseStepWAdr = 0x008048C1,
    	C0DsppiezopiezoDcWAdr = 0x008048C2,
    	Shell0DsptagWAdr = 0x008048C3,
    	C0DspuseFiberIqWAdr = 0x008048C4,
    	C0DspwaveSampPerWAdr = 0x008048C5,
    	C0DspwaveShiftWAdr = 0x008048C6,
    	Shell1DspchanKeepWAdr = 0x008048C7,
    	C1DspfdbkCorecoarseScaleWAdr = 0x008048C8,
    	C1DspfdbkCorempProcphOffsetWAdr = 0x008048C9,
    	C1DspfdbkCorempProcselEnWAdr = 0x008048CA,
    	C1DspfdbkCorempProcselThreshWAdr = 0x008048CB,
    	C1DspmoduloWAdr = 0x008048CC,
    	C1DspphaseStepWAdr = 0x008048CD,
    	C1DsppiezopiezoDcWAdr = 0x008048CE,
    	C1DsptagWAdr = 0x008048CF,
    	C1DspuseFiberIqWAdr = 0x008048D0,
    	C1DspwaveSampPerWAdr = 0x008048D1,
    	Shell1DspwaveShiftWAdr = 0x008048D2,
    	AtopdigdsprewindWAdr = 0x008048D3,
    	AmpstepWAdr = 0x008048D4,
    	SsaStimEnWAdr = 0x008048D5,
    	SsaStimgPeriodWAdr = 0x008048D6,
    	SsaStimpertstepWAdr = 0x008048D7,
    	DigdsptraceKeepWAdr = 0x008048D8,
    	TraceResetWeWAdr = 0x008048D9,
    	TrigInternalWAdr = 0x008048DA,
    	TrigModeWAdr = 0x008048DB,
    	Wave0SrcWAdr = 0x008048DC,
    	Wave1SrcWAdr = 0x008048DD,
    	DomainJumpRealignWAdr = 0x008048DE,
    	IccCfgWAdr = 0x008048DF,
    	QsfpI2CRegWAdr = 0x008048E0,
    	SfpAddressSetWAdr = 0x008048E1,
    	TagNowWAdr = 0x008048E2,
    };

    // masks applied to returned register data
    enum RegMasks
    {
    	HellMask =  0xFFFFFFFF,
    	OWoMask =  0xFFFFFFFF,
    	RldMask =  0xFFFFFFFF,
    	H0D0A0D0AMask =  0xFFFFFFFF,
    	LlspiStatusMask =  0x000000FF,
    	LlspiResultMask =  0x000000FF,
    	ClkStatusOutMask =  0x00000003,
    	FfffffffMask =  0xFFFFFFFF,
    	FrequencyAdcMask =  0x0FFFFFFF,
    	Frequency4XoutMask =  0x0FFFFFFF,
    	FrequencyClkout3Mask =  0x0FFFFFFF,
    	FrequencyDcoMask =  0x0FFFFFFF,
    	U2Doutbits31To0Mask =  0xFFFFFFFF,
    	U2Doutbits63To32Mask =  0xFFFFFFFF,
    	IdelayValueOutU2Bits19To0Mask =  0x000FFFFF,
    	IdelayValueOutU2Bits39To20Mask =  0x000FFFFF,
    	U3Doutbits31To0Mask =  0xFFFFFFFF,
    	U3Doutbits63To32Mask =  0xFFFFFFFF,
    	IdelayValueOutU3Bits19To0Mask =  0x000FFFFF,
    	IdelayValueOutU3Bits39To20Mask =  0x000FFFFF,
    	Wave0OutMask =  0x000FFFFF,
    	Wave1OutMask =  0x000FFFFF,
    	AdcTestWave1OutMask =  0x000FFFFF,
    	AdcTestWave2OutMask =  0x000FFFFF,
    	AdcTestWave3OutMask =  0x000FFFFF,
    	AdcTestWave4OutMask =  0x000FFFFF,
    	CtraceRunningMask =  0x00003FFF,
    	FrequencyGtxTxMask =  0xFFFFFFFF,
    	FrequencyGtxRxMask =  0x0FFFFFFF,
    	HistStatusMask =  0x00000003,
    	PhasexStatusMask =  0x00000003,
    	ClkPhaseDiffOutU2Mask =  0x00001FFF,
    	ClkPhaseDiffOutU3Mask =  0x00001FFF,
    	CrcErrorsMask =  0x0000FFFF,
    	U15SdoAddrMask =  0xFFFFFFFF,
    	U15SpiRdbkMask =  0xFFFFFFFF,
    	U15SpiReadyMask =  0xFFFFFFFF,
    	U15SdioAsSdoMask =  0xFFFFFFFF,
    	U18SdoAddrMask =  0xFFFFFFFF,
    	U18SpiRdbkMask =  0xFFFFFFFF,
    	U18SdioAsSdoMask =  0xFFFFFFFF,
    	U18SpiReadyMask =  0xFFFFFFFF,
    	AdcTestTrigCntMask =  0xFFFFFFFF,
    	WaveformsAvailableMask =  0xFFFFFFFF,
    	BanyanStatusMask =  0xFFFFFFFF,
    	SlowChainOutMask =  0x000000FF,
    	TraceStatus1Mask =  0xFFFFFFFF,
    	TraceStatus2Mask =  0xFFFFFFFF,
    	LlrfCircleReadyMask =  0x00000003,
    	IdelayBaseMask =  0x0000007F,
    	HistDoutMask =  0x0000FFFF,
    	PhasexDoutMask =  0x0000FFFF,
    	BanyanBufMask =  0xFFFFFFFF,
    	ScannerResultMask =  0x000000FF,
    	TraceIqBufMask =  0xFFFFFFFF,
    	TraceIBufMask =  0xFFFFFFFF,
    	TraceQBufMask =  0xFFFFFFFF,
    	QsfpBufMask =  0x000000FF,
    	LlrfCircleDataMask =  0x0000FFFF,
    	Shell0SlowDataMask =  0x000000FF,
    	Shell1SlowDataMask =  0x000000FF,
    	NoiseCouplekOutMask =  0x0003FFFF,
    	PropConstMask =  0x001FFFFF,
    	C0Cav4Elecdot0KOutMask =  0x0003FFFF,
    	C0Cav4Elecdot1KOutMask =  0x0003FFFF,
    	Cav0Cav4Elecdot2KOutMask =  0x0003FFFF,
    	Digdsprsmcav0Cav4ElecouterProd0KOutMask =  0x0003FFFF,
    	Cav0Cav4ElecouterProd1KOutMask =  0x0003FFFF,
    	C0Cav4ElecouterProd2KOutMask =  0x0003FFFF,
    	Cav0PiezoCouplekOutMask =  0x0003FFFF,
    	C1Cav4Elecdot0KOutMask =  0x0003FFFF,
    	Cav1Cav4Elecdot1KOutMask =  0x0003FFFF,
    	C1Cav4Elecdot2KOutMask =  0x0003FFFF,
    	Rsmcav1Cav4ElecouterProd0KOutMask =  0x0003FFFF,
    	Cav1Cav4ElecouterProd1KOutMask =  0x0003FFFF,
    	C1Cav4ElecouterProd2KOutMask =  0x0003FFFF,
    	C1PiezoCouplekOutMask =  0x0003FFFF,
    	C0DelayPcXxxMask =  0xFFFFFFFF,
    	C1DelayPcXxxMask =  0xFFFFFFFF,
    	C0DsppiezosfConstsMask =  0x000FFFFF,
    	Rsmshell1DsppiezosfConstsMask =  0x000FFFFF,
    	Shell0DspfdbkCorempProccoeffMask =  0x0003FFFF,
    	C0DspfdbkCorempProclimMask =  0x0003FFFF,
    	C0DspfdbkCorempProcsetmpMask =  0x0003FFFF,
    	Digdsprsmshell1DspfdbkCorempProccoeffMask =  0x0003FFFF,
    	C1DspfdbkCorempProclimMask =  0x0003FFFF,
    	Shell1DspfdbkCorempProcsetmpMask =  0x0003FFFF,
    	C0Cav4ElecdriveCoupleoutCouplingMask =  0x0003FFFF,
    	Rsmcav0Cav4ElecdriveCoupleophoffMask =  0x0007FFFF,
    	Cav0Cav4Elecmode0OcoupoutCouplingMask =  0x0003FFFF,
    	Rsmcav0Cav4Elecmode0OcoupophoffMask =  0x0007FFFF,
    	Cav0Cav4Elecmode1OcoupoutCouplingMask =  0x0003FFFF,
    	Cav0Cav4Elecmode1OcoupophoffMask =  0x0007FFFF,
    	C0Cav4Elecmode2OcoupoutCouplingMask =  0x0003FFFF,
    	C0Cav4Elecmode2OcoupophoffMask =  0x0007FFFF,
    	Cav1Cav4ElecdriveCoupleoutCouplingMask =  0x0003FFFF,
    	C1Cav4ElecdriveCoupleophoffMask =  0x0007FFFF,
    	C1Cav4Elecmode0OcoupoutCouplingMask =  0x0003FFFF,
    	Cav1Cav4Elecmode0OcoupophoffMask =  0x0007FFFF,
    	Cav1Cav4Elecmode1OcoupoutCouplingMask =  0x0003FFFF,
    	C1Cav4Elecmode1OcoupophoffMask =  0x0007FFFF,
    	Rsmcav1Cav4Elecmode2OcoupoutCouplingMask =  0x0003FFFF,
    	C1Cav4Elecmode2OcoupophoffMask =  0x0007FFFF,
    	Digdsprsmshell0DsplpNotchlp1AkxMask =  0x0003FFFF,
    	C0DsplpNotchlp1AkyMask =  0x0003FFFF,
    	Rsmshell0DsplpNotchlp1BkxMask =  0x0003FFFF,
    	C0DsplpNotchlp1BkyMask =  0x0003FFFF,
    	C1DsplpNotchlp1AkxMask =  0x0003FFFF,
    	Atopdigdsprsmshell1DsplpNotchlp1AkyMask =  0x0003FFFF,
    	C1DsplpNotchlp1BkxMask =  0x0003FFFF,
    	C1DsplpNotchlp1BkyMask =  0x0003FFFF,
    	AdcMmcmMask =  0x00000003,
    	U15SpiDataAddrRMask =  0xFFFFFFFF,
    	U15SpiReadAndStartRMask =  0x00000003,
    	Digcfgu18SpiDataAddrRMask =  0xFFFFFFFF,
    	Digcfgu18SpiReadAndStartRMask =  0x00000003,
    	Atopdigcfgu2ClkResetRMask =  0x00000001,
    	U2IserdesResetRMask =  0x00000001,
    	U3ClkResetRMask =  0x00000001,
    	U3IserdesResetRMask =  0x00000001,
    	Digcfgu4ResetRMask =  0x00000001,
    	BanyanMaskMask =  0x000000FF,
    	BitslipMask =  0x0000FFFF,
    	ClkStatusWeMask =  0x00000001,
    	DigcfgidelayctrlResetRMask =  0x00000001,
    	LlspiWeMask =  0x00000001,
    	MmcmResetRMask =  0x00000001,
    	PeriphConfigMask =  0xFFFFFFFF,
    	PhasexTrigMask =  0x00000001,
    	DigcfgrawadcTrigMask =  0x00000001,
    	ScanTriggerWeMask =  0x00000001,
    	ScannerDebugMask =  0x0000001F,
    	SyncAd7794CsetMask =  0x000003FF,
    	DigcfgsyncTps62210CsetMask =  0x0000003F,
    	AdcTestModeMask =  0x00000007,
    	AdcTestResetMask =  0x00000001,
    	DigdspamplitudeMask =  0x0000FFFF,
    	AverageLenMask =  0x3FFFFFFF,
    	BufTrigMask =  0x00000001,
    	CicPeriodMask =  0x00003FFF,
    	CicShiftMask =  0x0000000F,
    	CircleBufFlipMask =  0x00000003,
    	DacDdsResetMask =  0x00000001,
    	DigdspdacModeMask =  0x0000000F,
    	DdsaModuloMask =  0x00000FFF,
    	DdsaPhstepHMask =  0x000FFFFF,
    	DigdspddsaPhstepLMask =  0x00000FFF,
    	HistCountWStrobeMask =  0x00000001,
    	LlrfDspDacEnMask =  0x00000001,
    	LoAmpMask =  0x0003FFFF,
    	DigdspmoduloMask =  0x00000FFF,
    	DigdspphaseStepHMask =  0x000FFFFF,
    	PhaseStepLMask =  0x00000FFF,
    	CavSelMask =  0x00000003,
    	PrlCfgMask =  0x000001FF,
    	PrcDspprlGainMask =  0x0000FFFF,
    	Beam0ModuloMask =  0x00000FFF,
    	Rsmbeam0PhaseInitMask =  0x00000FFF,
    	C0PhaseStepMask =  0x00000FFF,
    	C1ModuloMask =  0x00000FFF,
    	C1PhaseInitMask =  0x00000FFF,
    	Rsmbeam1PhaseStepMask =  0x00000FFF,
    	Cav4MechprngivaMask =  0xFFFFFFFF,
    	Rsmcav4MechprngivbMask =  0xFFFFFFFF,
    	Cav4MechprngrandomRunMask =  0x00000001,
    	Cav0ACavoffsMask =  0x000003FF,
    	C0AForoffsMask =  0x000003FF,
    	C0ARfloffsMask =  0x000003FF,
    	C0AmpLpbwMask =  0x0003FFFF,
    	C0Cav4Elecfq0CoarseFreqMask =  0x0FFFFFFF,
    	C0Cav4Elecfq1CoarseFreqMask =  0x0FFFFFFF,
    	C0Cav4Elecfq2CoarseFreqMask =  0x0FFFFFFF,
    	Rsmcav0Cav4Elecmode0BeamCouplingMask =  0x0003FFFF,
    	C0Cav4Elecmode0BwMask =  0x0003FFFF,
    	C0Cav4Elecmode0DriveCouplingMask =  0x0003FFFF,
    	Atopdigdsprsmcav0Cav4Elecmode1BeamCouplingMask =  0x0003FFFF,
    	Cav0Cav4Elecmode1BwMask =  0x0003FFFF,
    	C0Cav4Elecmode1DriveCouplingMask =  0x0003FFFF,
    	Atopdigdsprsmcav0Cav4Elecmode2BeamCouplingMask =  0x0003FFFF,
    	C0Cav4Elecmode2BwMask =  0x0003FFFF,
    	C0Cav4Elecmode2DriveCouplingMask =  0x0003FFFF,
    	C0Cav4ElecmoduloMask =  0x00000FFF,
    	Cav0Cav4ElecphaseStepMask =  0xFFFFFFFF,
    	C0ComprsatCtlMask =  0x0000FFFF,
    	Cav0PrngivaMask =  0xFFFFFFFF,
    	C0PrngivbMask =  0xFFFFFFFF,
    	C0PrngrandomRunMask =  0x00000001,
    	C1ACavoffsMask =  0x000003FF,
    	Digdsprsmcav1AForoffsMask =  0x000003FF,
    	C1ARfloffsMask =  0x000003FF,
    	Rsmcav1AmpLpbwMask =  0x0003FFFF,
    	C1Cav4Elecfq0CoarseFreqMask =  0x0FFFFFFF,
    	C1Cav4Elecfq1CoarseFreqMask =  0x0FFFFFFF,
    	C1Cav4Elecfq2CoarseFreqMask =  0x0FFFFFFF,
    	C1Cav4Elecmode0BeamCouplingMask =  0x0003FFFF,
    	Cav1Cav4Elecmode0BwMask =  0x0003FFFF,
    	C1Cav4Elecmode0DriveCouplingMask =  0x0003FFFF,
    	C1Cav4Elecmode1BeamCouplingMask =  0x0003FFFF,
    	Rsmcav1Cav4Elecmode1BwMask =  0x0003FFFF,
    	C1Cav4Elecmode1DriveCouplingMask =  0x0003FFFF,
    	Rsmcav1Cav4Elecmode2BeamCouplingMask =  0x0003FFFF,
    	Cav1Cav4Elecmode2BwMask =  0x0003FFFF,
    	C1Cav4ElecmoduloMask =  0x00000FFF,
    	C1Cav4ElecphaseStepMask =  0xFFFFFFFF,
    	Rsmcav1ComprsatCtlMask =  0x0000FFFF,
    	C1PrngivaMask =  0xFFFFFFFF,
    	Cav1PrngivbMask =  0xFFFFFFFF,
    	C1PrngrandomRunMask =  0x00000001,
    	RsmdacIqPhaseMask =  0x00000001,
    	C0DspchanKeepMask =  0x00000FFF,
    	C0DspfdbkCorecoarseScaleMask =  0x00000003,
    	Shell0DspfdbkCorempProcphOffsetMask =  0x0003FFFF,
    	Shell0DspfdbkCorempProcselEnMask =  0x00000001,
    	C0DspfdbkCorempProcselThreshMask =  0x0003FFFF,
    	Shell0DspmoduloMask =  0x00000FFF,
    	Shell0DspphaseStepMask =  0xFFFFFFFF,
    	C0DsppiezopiezoDcMask =  0x0000FFFF,
    	Shell0DsptagMask =  0x000000FF,
    	C0DspuseFiberIqMask =  0x00000001,
    	C0DspwaveSampPerMask =  0x0000007F,
    	C0DspwaveShiftMask =  0x00000007,
    	Shell1DspchanKeepMask =  0x00000FFF,
    	C1DspfdbkCorecoarseScaleMask =  0x00000003,
    	C1DspfdbkCorempProcphOffsetMask =  0x0003FFFF,
    	C1DspfdbkCorempProcselEnMask =  0x00000001,
    	C1DspfdbkCorempProcselThreshMask =  0x0003FFFF,
    	C1DspmoduloMask =  0x00000FFF,
    	C1DspphaseStepMask =  0xFFFFFFFF,
    	C1DsppiezopiezoDcMask =  0x0000FFFF,
    	C1DsptagMask =  0x000000FF,
    	C1DspuseFiberIqMask =  0x00000001,
    	C1DspwaveSampPerMask =  0x0000007F,
    	Shell1DspwaveShiftMask =  0x00000007,
    	AtopdigdsprewindMask =  0x00000001,
    	AmpstepMask =  0x0000FFFF,
    	SsaStimEnMask =  0x00000001,
    	SsaStimgPeriodMask =  0x000003FF,
    	SsaStimpertstepMask =  0x0000FFFF,
    	DigdsptraceKeepMask =  0x000000FF,
    	TraceResetWeMask =  0x00000001,
    	TrigInternalMask =  0x00000001,
    	TrigModeMask =  0x00000003,
    	Wave0SrcMask =  0x00000007,
    	Wave1SrcMask =  0x00000007,
    	DomainJumpRealignMask =  0x00000003,
    	IccCfgMask =  0xFFFFFFFF,
    	QsfpI2CRegMask =  0xFFFFFFFF,
    	SfpAddressSetMask =  0x0000FFFF,
    	TagNowMask =  0x000000FF,

    };
};

#endif

